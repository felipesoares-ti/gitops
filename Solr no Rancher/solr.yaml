apiVersion: fleet.cattle.io/v1alpha1
kind: Bundle
metadata:
  creationTimestamp: '2024-11-21T22:30:59Z'
  finalizers:
    - fleet.cattle.io/bundle-finalizer
  generation: 46
  labels:
    fleet.cattle.io/commit: 710a5d85fdf9058a8f3cb5c66b76282d9fae7965
    fleet.cattle.io/repo-name: gitlab-tcu
  managedFields:
    - apiVersion: fleet.cattle.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"fleet.cattle.io/bundle-finalizer": {}
      manager: fleetcontroller
      operation: Update
      time: '2024-12-26T23:15:39Z'
    - apiVersion: fleet.cattle.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:fleet.cattle.io/commit: {}
            f:fleet.cattle.io/repo-name: {}
        f:spec:
          .: {}
          f:defaultNamespace: {}
          f:forceSyncGeneration: {}
          f:helm:
            .: {}
            f:chart: {}
            f:releaseName: {}
            f:values:
              .: {}
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:args: {}
              f:auth:
                .: {}
                f:enabled: {}
                f:existingSecret: {}
                f:existingSecretPasswordKey: {}
              f:extraEnvVars: {}
              f:extraVolumeMounts: {}
              f:extraVolumes: {}
              f:fullnameOverride: {}
              f:global:
                .: {}
                f:imageRegistry: {}
                f:security:
                  .: {}
                  f:allowInsecureImages: {}
              f:image:
                .: {}
                f:repository: {}
                f:tag: {}
              f:ingress:
                .: {}
                f:annotations: {}
                f:enabled: {}
                f:hostname: {}
                f:path: {}
                f:selfSigned: {}
                f:tls: {}
              f:initContainers: {}
              f:javaMem: {}
              f:metrics:
                .: {}
                f:enabled: {}
                f:nodeSelector:
                  .: {}
                  f:solr: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                f:serviceMonitor:
                  .: {}
                  f:enabled: {}
                  f:interval: {}
                  f:namespace: {}
                  f:scrapeTimeout: {}
                f:tolerations: {}
              f:networkPolicy:
                .: {}
                f:enabled: {}
              f:nodeSelector:
                .: {}
                f:solr: {}
              f:persistence:
                .: {}
                f:accessModes: {}
                f:enabled: {}
                f:mountPath: {}
                f:reclaimPolicy: {}
                f:size: {}
                f:storageClass: {}
              f:podLabels:
                .: {}
                f:app: {}
              f:replicaCount: {}
              f:resources:
                .: {}
                f:limits: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:tolerations: {}
              f:zookeeper:
                .: {}
                f:affinity:
                  .: {}
                  f:podAntiAffinity:
                    .: {}
                    f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:enabled: {}
                f:image:
                  .: {}
                  f:repository: {}
                f:jvmFlags: {}
                f:networkPolicy:
                  .: {}
                  f:enabled: {}
                f:nodeSelector:
                  .: {}
                  f:solr: {}
                f:persistence:
                  .: {}
                  f:accessModes: {}
                  f:enabled: {}
                  f:reclaimPolicy: {}
                  f:size: {}
                  f:storageClass: {}
                f:podLabels:
                  .: {}
                  f:app: {}
                f:resources:
                  .: {}
                  f:limits: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:service:
                  .: {}
                  f:nodePorts:
                    .: {}
                    f:client: {}
                  f:type: {}
                f:tolerations: {}
            f:valuesFiles: {}
            f:version: {}
          f:ignore: {}
          f:kustomize:
            .: {}
            f:dir: {}
          f:namespaceLabels:
            .: {}
            f:team: {}
          f:resources: {}
          f:targetRestrictions: {}
          f:targets: {}
      manager: fleet
      operation: Update
      time: '2025-05-23T22:28:05Z'
    - apiVersion: fleet.cattle.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:conditions: {}
          f:display:
            .: {}
            f:readyClusters: {}
          f:maxNew: {}
          f:maxUnavailable: {}
          f:maxUnavailablePartitions: {}
          f:observedGeneration: {}
          f:partitions: {}
          f:resourceKey: {}
          f:resourcesSha256Sum: {}
          f:summary:
            .: {}
            f:desiredReady: {}
            f:ready: {}
          f:unavailable: {}
          f:unavailablePartitions: {}
      manager: fleetcontroller
      operation: Update
      subresource: status
      time: '2025-05-24T00:02:46Z'
  name: solr
  namespace: fleet-default
  resourceVersion: '645391388'
  uid: 984eb373-aa07-4290-84c4-4dbff5df67d5
spec:
  defaultNamespace: solr
  forceSyncGeneration: 166
  helm:
    chart: oci://registry.rancher.tcu.gov.br/aplicacoes/solr
    releaseName: solr
    values:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - solr
              topologyKey: kubernetes.io/hostname
      args:
        - '-Dsolr.sharedLib'
        - /solr-plugins/
      auth:
        enabled: true
        existingSecret: solr-usr-secret
        existingSecretPasswordKey: solr-password
      extraEnvVars:
        - name: SOLR_OPTS
          value: >-
            -Dsolr.sharedLib=/solr-plugins/ -Dsolr.allowPaths=*
            -Dsolr.disable.allowUrls=true -Dsolr.cloud.client.stallTime=90000
            -Djute.maxbuffer=5000000 -Dsolr.max.booleanClauses=10000
            -javaagent:/opt/newrelic/newrelic.jar
        - name: SOLR_LOG_LEVEL
          value: WARN
      extraVolumeMounts:
        - mountPath: /bitnami/backups/
          name: backup-nfs
        - mountPath: /solr-plugins
          name: plugin-dir
        - mountPath: /opt/newrelic/
          name: newrelic-nfs
        - mountPath: /opt/bitnami/solr/server/etc/security.policy
          name: solr-policy
          subPath: security.policy
      extraVolumes:
        - name: plugin-dir
          persistentVolumeClaim:
            claimName: solr-plugin-folder
        - name: backup-nfs
          nfs:
            path: /nas-solr-bkp/producao/
            server: nas3.tcu.gov.br
        - name: newrelic-nfs
          nfs:
            path: /nas-solr-bkp/newrelic/
            server: nas3.tcu.gov.br
        - name: solr-policy
          secret:
            secretName: solr-policy
      fullnameOverride: solr
      global:
        imageRegistry: registry.rancher.tcu.gov.br/aplicacoes
        security:
          allowInsecureImages: true
      image:
        repository: solr
        tag: 9.7.0-debian-12-r4
      ingress:
        annotations: {}
        enabled: true
        hostname: solr.producao.rancher.tcu.gov.br
        path: /
        selfSigned: false
        tls: false
      initContainers:
        - command:
            - sh
            - '-c'
            - >-
              chown -R 1001:1001 /bitnami/backups/ & chown -R 1001:1001
              /opt/newrelic/
          image: bitnami/os-shell
          imagePullPolicy: IfNotPresent
          name: init-volume-perm
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /bitnami/backups/
              name: backup-nfs
            - mountPath: /opt/newrelic/
              name: newrelic-nfs
      javaMem: '-Xms16g -Xmx100g'
      metrics:
        enabled: true
        nodeSelector:
          solr: 'true'
        resources:
          limits:
            cpu: 450m
            ephemeral-storage: 1Gi
            memory: 2Gi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 512Mi
        serviceMonitor:
          enabled: true
          interval: 15s
          namespace: solr
          scrapeTimeout: 15s
        tolerations:
          - effect: NoSchedule
            key: solr
            operator: Equal
            value: 'true'
      networkPolicy:
        enabled: false
      nodeSelector:
        solr: 'true'
      persistence:
        accessModes:
          - ReadWriteOnce
        enabled: true
        mountPath: /bitnami/solr
        reclaimPolicy: Retain
        size: 1000Gi
        storageClass: sc-solr
      podLabels:
        app: solr
      replicaCount: 5
      resources:
        limits: {}
        requests:
          cpu: '1'
          memory: 20Gi
      tolerations:
        - effect: NoSchedule
          key: solr
          operator: Equal
          value: 'true'
      zookeeper:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - zookeeper
                topologyKey: kubernetes.io/hostname
        enabled: true
        image:
          repository: zookeeper
        jvmFlags: '-Djute.maxbuffer=5000000'
        networkPolicy:
          enabled: false
        nodeSelector:
          solr: 'true'
        persistence:
          accessModes:
            - ReadWriteOnce
          enabled: true
          reclaimPolicy: Retain
          size: 100Gi
          storageClass: sc-solr
        podLabels:
          app: zookeeper
        resources:
          limits: {}
          requests:
            cpu: 250m
            memory: 1Gi
        service:
          nodePorts:
            client: 32181
          type: NodePort
        tolerations:
          - effect: NoSchedule
            key: solr
            operator: Equal
            value: 'true'
    valuesFiles:
      - values.yaml
    version: 9.5.1
  ignore: {}
  kustomize:
    dir: ./security
  namespaceLabels:
    team: seint
  resources:
    - content: >
        dependencies:

        - name: zookeeper
          repository: oci://registry-1.docker.io/bitnamicharts
          version: 13.7.1
        - name: common
          repository: oci://registry-1.docker.io/bitnamicharts
          version: 2.29.0
        digest:
        sha256:eb128b941ca0eeae01b5771af909c7cbc169e0389effbc22e1f774a5f0459f01

        generated: "2025-01-08T01:26:23.142161635Z"
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/Chart.lock
    - content: >
        annotations:
          category: Infrastructure
          images: |
            - name: os-shell
              image: docker.io/bitnami/os-shell:12-debian-12-r34
            - name: solr
              image: docker.io/bitnami/solr:9.7.0-debian-12-r4
          licenses: Apache-2.0
        apiVersion: v2

        appVersion: 9.7.0

        dependencies:

        - condition: zookeeper.enabled
          name: zookeeper
          repository: oci://registry-1.docker.io/bitnamicharts
          version: 13.x.x
        - name: common
          repository: oci://registry-1.docker.io/bitnamicharts
          tags:
          - bitnami-common
          version: 2.x.x
        description: Apache Solr is an extremely powerful, open source
        enterprise search platform
          built on Apache Lucene. It is highly reliable and flexible, scalable, and designed
          to add value very quickly after launch.
        home: https://bitnami.com

        icon: https://bitnami.com/assets/stacks/solr/img/solr-stack-220x234.png

        keywords:

        - solr

        - zookeeper

        - apache

        maintainers:

        - name: Broadcom, Inc. All Rights Reserved.
          url: https://github.com/bitnami/charts
        name: solr

        sources:

        - https://github.com/bitnami/charts/tree/main/bitnami/solr

        version: 9.5.1
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/Chart.yaml
    - content: >-
        <!--- app-name: Apache Solr -->


        # Bitnami package for Apache Solr


        Apache Solr is an extremely powerful, open source enterprise search
        platform built on Apache Lucene. It is highly reliable and flexible,
        scalable, and designed to add value very quickly after launch.


        [Overview of Apache Solr](http://lucene.apache.org/solr/)


        Trademarks: This software listing is packaged by Bitnami. The respective
        trademarks mentioned in the offering are owned by the respective
        companies, and use of them does not imply any affiliation or
        endorsement.


        ## TL;DR


        ```console

        helm install my-release oci://registry-1.docker.io/bitnamicharts/solr

        ```


        Looking to use Apache Solr in production? Try [VMware Tanzu Application
        Catalog](https://bitnami.com/enterprise), the commercial edition of the
        Bitnami catalog.


        ## Introduction


        This chart bootstraps a
        [Solr](https://github.com/bitnami/containers/tree/main/bitnami/solr)
        deployment on a [Kubernetes](https://kubernetes.io) cluster using the
        [Helm](https://helm.sh) package manager.


        Bitnami charts can be used with [Kubeapps](https://kubeapps.dev/) for
        deployment and management of Helm Charts in clusters.


        ## Prerequisites


        - Kubernetes 1.23+

        - Helm 3.8.0+

        - PV provisioner support in the underlying infrastructure

        - ReadWriteMany volumes for deployment scaling


        ## Installing the Chart


        To install the chart with the release name `my-release`:


        ```console

        helm install my-release oci://REGISTRY_NAME/REPOSITORY_NAME/solr

        ```


        > Note: You need to substitute the placeholders `REGISTRY_NAME` and
        `REPOSITORY_NAME` with a reference to your Helm chart registry and
        repository. For example, in the case of Bitnami, you need to use
        `REGISTRY_NAME=registry-1.docker.io` and
        `REPOSITORY_NAME=bitnamicharts`.


        These commands deploy Solr on the Kubernetes cluster in the default
        configuration. The [Parameters](#parameters) section lists the
        parameters that can be configured during installation.


        > **Tip**: List all releases using `helm list`


        ## Uninstalling the Chart


        To uninstall/delete the `my-release` statefulset:


        ```console

        helm delete my-release

        ```


        The command removes all the Kubernetes components associated with the
        chart and deletes the release. Use the option `--purge` to delete all
        history too.


        ## Configuration and installation details


        ### Resource requests and limits


        Bitnami charts allow setting resource requests and limits for all
        containers inside the chart deployment. These are inside the `resources`
        value (check parameter table). Setting requests is essential for
        production workloads and these should be adapted to your specific use
        case.


        To make this process easier, the chart contains the `resourcesPreset`
        values, which automatically sets the `resources` section according to
        different presets. Check these presets in [the bitnami/common
        chart](https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15).
        However, in production workloads using `resourcesPreset` is discouraged
        as it may not fully adapt to your specific needs. Find more information
        on container resource management in the [official Kubernetes
        documentation](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).


        ### Update credentials


        Bitnami charts configure credentials at first boot. Any further change
        in the secrets or credentials require manual intervention. Follow these
        instructions:


        - Update the user password following [the upstream
        documentation](https://solr.apache.org/guide/solr/latest/index.html)

        - Update the password secret with the new values (replace the
        SECRET_NAME and PASSWORD placeholders)


        ```shell

        kubectl create secret generic SECRET_NAME
        --from-literal=solr-password=PASSWORD --dry-run -o yaml | kubectl apply
        -f -

        ```


        ### Prometheus metrics


        This chart can be integrated with Prometheus by setting
        `metrics.enabled` to `true`. This will deploy a Deployment with
        [solr-exporter](https://github.com/apache/solr/tree/main/solr/prometheus-exporter)
        and a `metrics` service, which can be configured under the
        `metrics.service` section. This `metrics` service will have the
        necessary annotations to be automatically scraped by Prometheus.


        #### Prometheus requirements


        It is necessary to have a working installation of Prometheus or
        Prometheus Operator for the integration to work. Install the [Bitnami
        Prometheus helm
        chart](https://github.com/bitnami/charts/tree/main/bitnami/prometheus)
        or the [Bitnami Kube Prometheus helm
        chart](https://github.com/bitnami/charts/tree/main/bitnami/kube-prometheus)
        to easily have a working Prometheus in your cluster.


        #### Integration with Prometheus Operator


        The chart can deploy `ServiceMonitor` objects for integration with
        Prometheus Operator installations. To do so, set the value
        `metrics.serviceMonitor.enabled=true`. Ensure that the Prometheus
        Operator `CustomResourceDefinitions` are installed in the cluster or it
        will fail with the following error:


        ```text

        no matches for kind "ServiceMonitor" in version
        "monitoring.coreos.com/v1"

        ```


        Install the [Bitnami Kube Prometheus helm
        chart](https://github.com/bitnami/charts/tree/main/bitnami/kube-prometheus)
        for having the necessary CRDs and the Prometheus Operator.


        ### [Rolling vs Immutable
        tags](https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-understand-rolling-tags-containers-index.html)


        It is strongly recommended to use immutable tags in a production
        environment. This ensures your deployment does not change automatically
        if the same tag is updated with a different image.


        Bitnami will release a new chart updating its containers if a new
        version of the main container, significant changes, or critical
        vulnerabilities exist.


        ### Use a different Apache Solr version


        To modify the application version used in this chart, specify a
        different version of the image using the `image.tag` parameter and/or a
        different repository using the `image.repository` parameter.


        ### Add extra environment variables


        In case you want to add extra environment variables (useful for advanced
        operations like custom init scripts), you can use the `extraEnvVars`
        property.


        ```yaml

        extraEnvVars:
          - name: ZOOKEEPER_VERSION
            value: 6
        ```


        Alternatively, you can use a ConfigMap or a Secret with the environment
        variables. To do so, use the `extraEnvVarsCM` or the
        `extraEnvVarsSecret` values.


        ### Use Sidecars and Init Containers


        If additional containers are needed in the same pod (such as additional
        metrics or logging exporters), they can be defined using the `sidecars`
        config parameter.


        ```yaml

        sidecars:

        - name: your-image-name
          image: your-image
          imagePullPolicy: Always
          ports:
          - name: portname
            containerPort: 1234
        ```


        If these sidecars export extra ports, extra port definitions can be
        added using the `service.extraPorts` parameter (where available), as
        shown in the example below:


        ```yaml

        service:
          extraPorts:
          - name: extraPort
            port: 11311
            targetPort: 11311
        ```


        > NOTE: This Helm chart already includes sidecar containers for the
        Prometheus exporters (where applicable). These can be activated by
        adding the `--enable-metrics=true` parameter at deployment time. The
        `sidecars` parameter should therefore only be used for any extra sidecar
        containers.


        If additional init containers are needed in the same pod, they can be
        defined using the `initContainers` parameter. Here is an example:


        ```yaml

        initContainers:
          - name: your-image-name
            image: your-image
            imagePullPolicy: Always
            ports:
              - name: portname
                containerPort: 1234
        ```


        Learn more about [sidecar
        containers](https://kubernetes.io/docs/concepts/workloads/pods/) and
        [init
        containers](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/).


        ### Set Pod affinity


        This chart allows you to set your custom affinity using the
        `XXX.affinity` parameter(s). Find more information about Pod affinity in
        the [Kubernetes
        documentation](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity).


        As an alternative, you can use the preset configurations for pod
        affinity, pod anti-affinity, and node affinity available at the
        [bitnami/common](https://github.com/bitnami/charts/tree/main/bitnami/common#affinities)
        chart. To do so, set the `XXX.podAffinityPreset`,
        `XXX.podAntiAffinityPreset`, or `XXX.nodeAffinityPreset` parameters.


        ### Securing traffic using TLS


        Solr can encrypt communications by setting `tls.enabled=true`. The chart
        allows two configuration options:


        - Provide your own secret using the `tls.certificatesSecretNawe` value.
        Also set the correct name of the keystore and truststore passwords (if
        required) using the `tls.keystorePassword`, `tls.truststorePassword`
        values.

        - Have the chart auto-generate the certificates using
        `tls.autoGenerated=true`.


        ### Backup and restore


        To back up and restore Helm chart deployments on Kubernetes, you need to
        back up the persistent volumes from the source deployment and attach
        them to a new deployment using [Velero](https://velero.io/), a
        Kubernetes backup/restore tool. Find the instructions for using Velero
        in [this
        guide](https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-backup-restore-deployments-velero-index.html).


        ## Persistence


        The [Bitnami
        Solr](https://github.com/bitnami/containers/tree/main/bitnami/solr)
        image can persist data. If enabled, the persisted path is
        `/bitnami/solr` by default.


        The chart mounts a [Persistent
        Volume](https://kubernetes.io/docs/concepts/storage/persistent-volumes/)
        at this location. The volume is created using dynamic volume
        provisioning.


        ### Add extra volumes


        The Bitnami Solr chart supports mounting extra volumes (either PVCs,
        secrets or configmaps) by using the `extraVolumes` and
        `extraVolumeMounts` property. This can be combined with advanced
        operations like adding extra init containers and sidecars.


        ### Adjust permissions of persistent volume mountpoint


        As the image run as non-root by default, it is necessary to adjust the
        ownership of the persistent volume so that the container can write data
        into it.


        By default, the chart is configured to use Kubernetes Security Context
        to automatically change the ownership of the volume. However, this
        feature does not work in all Kubernetes distributions.

        As an alternative, this chart supports using an initContainer to change
        the ownership of the volume before mounting it in the final destination.


        You can enable this initContainer by setting `volumePermissions.enabled`
        to `true`.


        ## Parameters


        ### Global parameters


        | Name                                                  |
        Description                                                                                                                                                                                                                                                                                                                                                        
        | Value   |

        | ----------------------------------------------------- |
        -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ------- |

        | `global.imageRegistry`                                | Global Docker
        image
        registry                                                                                                                                                                                                                                                                                                                                       
        | `""`    |

        | `global.imagePullSecrets`                             | Global Docker
        registry secret names as an
        array                                                                                                                                                                                                                                                                                                                    
        | `[]`    |

        | `global.defaultStorageClass`                          | Global default
        StorageClass for Persistent
        Volume(s)                                                                                                                                                                                                                                                                                                               
        | `""`    |

        | `global.storageClass`                                 | DEPRECATED:
        use global.defaultStorageClass
        instead                                                                                                                                                                                                                                                                                                                 
        | `""`    |

        | `global.security.allowInsecureImages`                 | Allows
        skipping image
        verification                                                                                                                                                                                                                                                                                                                                 
        | `false` |

        | `global.compatibility.openshift.adaptSecurityContext` | Adapt the
        securityContext sections of the deployment to make them compatible with
        Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup
        and let the platform use their allowed default IDs. Possible values:
        auto (apply if the detected running cluster is Openshift), force
        (perform the adaptation always), disabled (do not perform adaptation) |
        `auto`  |


        ### Common parameters


        | Name                     |
        Description                                                                                 
        | Value           |

        | ------------------------ |
        --------------------------------------------------------------------------------------------
        | --------------- |

        | `kubeVersion`            | Override Kubernetes
        version                                                                 
        | `""`            |

        | `nameOverride`           | String to partially override
        common.names.fullname template (will maintain the release name) |
        `""`            |

        | `fullnameOverride`       | String to fully override
        common.names.fullname template                                      |
        `""`            |

        | `clusterDomain`          | Kubernetes cluster
        domain                                                                   
        | `cluster.local` |

        | `commonLabels`           | Add labels to all the deployed
        resources                                                     |
        `{}`            |

        | `commonAnnotations`      | Add annotations to all the deployed
        resources                                                |
        `{}`            |

        | `extraDeploy`            | Extra objects to deploy (value evaluated as
        a template)                                      | `[]`            |

        | `diagnosticMode.enabled` | Enable diagnostic mode (all probes will be
        disabled and the command will be overridden)      | `false`         |

        | `diagnosticMode.command` | Command to override all containers in the
        statefulset                                        | `["sleep"]`     |

        | `diagnosticMode.args`    | Args to override all containers in the
        statefulset                                           | `["infinity"]` 
        |


        ### Solr parameters


        | Name                             |
        Description                                                                                         
        | Value                   |

        | -------------------------------- |
        ----------------------------------------------------------------------------------------------------
        | ----------------------- |

        | `image.registry`                 | Solr image
        registry                                                                                 
        | `REGISTRY_NAME`         |

        | `image.repository`               | Solr image
        repository                                                                               
        | `REPOSITORY_NAME/solr`  |

        | `image.digest`                   | Solr image digest in the way
        sha256:aa.... Please note this parameter, if set, will override the tag
        | `""`                    |

        | `image.pullPolicy`               | image pull
        policy                                                                                   
        | `IfNotPresent`          |

        | `image.pullSecrets`              | Specify docker-registry secret
        names as an array                                                     |
        `[]`                    |

        | `image.debug`                    | Specify if debug values should be
        set                                                                |
        `false`                 |

        | `auth.enabled`                   | Enable Solr
        authentication                                                                          
        | `true`                  |

        | `auth.adminUsername`             | Solr admin
        username                                                                                 
        | `admin`                 |

        | `auth.adminPassword`             | Solr admin password. Autogenerated
        if not provided.                                                  |
        `""`                    |

        | `auth.existingSecret`            | Existing secret with Solr
        password                                                                  
        | `""`                    |

        | `auth.existingSecretPasswordKey` | Password key to be retrieved from
        existing secret                                                    |
        `solr-password`         |

        | `coreNames`                      | Solr core names to be
        created                                                                       
        | `["my-core"]`           |

        | `cloudEnabled`                   | Enable Solr cloud
        mode                                                                              
        | `true`                  |

        | `cloudBootstrap`                 | Enable cloud bootstrap. It will be
        performed from the node 0.                                        |
        `true`                  |

        | `collection`                     | Solr collection
        name                                                                                
        | `my-collection`         |

        | `collectionShards`               | Number of collection
        shards                                                                         
        | `1`                     |

        | `collectionReplicas`             | Number of collection
        replicas                                                                       
        | `2`                     |

        | `serverDirectory`                | Name of the created directory for
        the server                                                         |
        `server`                |

        | `javaMem`                        | Java memory options to pass to the
        Solr container                                                    |
        `""`                    |

        | `heap`                           | Java Heap options to pass to the
        Solr container                                                      |
        `""`                    |

        | `command`                        | Override Solr entrypoint
        string                                                                     
        | `["/scripts/setup.sh"]` |

        | `args`                           | Arguments for the provided command
        if needed                                                         |
        `[]`                    |

        | `extraEnvVars`                   | Additional environment variables to
        set                                                              |
        `[]`                    |

        | `extraEnvVarsCM`                 | ConfigMap with extra environment
        variables                                                           |
        `""`                    |

        | `extraEnvVarsSecret`             | Secret with extra environment
        variables                                                              |
        `""`                    |


        ### Solr statefulset parameters


        | Name                                                |
        Description                                                                                                                                                                                                      
        | Value            |

        | --------------------------------------------------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ---------------- |

        | `replicaCount`                                      | Number of solr
        replicas                                                                                                                                                                                          
        | `3`              |

        | `revisionHistoryLimit`                              | The number of
        old history to retain to allow
        rollback                                                                                                                                                            
        | `10`             |

        | `containerPorts.http`                               | Solr HTTP
        container
        port                                                                                                                                                                                         
        | `8983`           |

        | `livenessProbe.enabled`                             | Enable
        livenessProbe on Solr
        containers                                                                                                                                                                          
        | `true`           |

        | `livenessProbe.initialDelaySeconds`                 | Initial delay
        seconds for
        livenessProbe                                                                                                                                                                          
        | `40`             |

        | `livenessProbe.periodSeconds`                       | Period seconds
        for
        livenessProbe                                                                                                                                                                                 
        | `10`             |

        | `livenessProbe.timeoutSeconds`                      | Timeout seconds
        for
        livenessProbe                                                                                                                                                                                
        | `15`             |

        | `livenessProbe.failureThreshold`                    | Failure
        threshold for
        livenessProbe                                                                                                                                                                              
        | `6`              |

        | `livenessProbe.successThreshold`                    | Success
        threshold for
        livenessProbe                                                                                                                                                                              
        | `1`              |

        | `readinessProbe.enabled`                            | Enable
        readinessProbe on Solr
        containers                                                                                                                                                                         
        | `true`           |

        | `readinessProbe.initialDelaySeconds`                | Initial delay
        seconds for
        readinessProbe                                                                                                                                                                         
        | `60`             |

        | `readinessProbe.periodSeconds`                      | Period seconds
        for
        readinessProbe                                                                                                                                                                                
        | `10`             |

        | `readinessProbe.timeoutSeconds`                     | Timeout seconds
        for
        readinessProbe                                                                                                                                                                               
        | `15`             |

        | `readinessProbe.failureThreshold`                   | Failure
        threshold for
        readinessProbe                                                                                                                                                                             
        | `6`              |

        | `readinessProbe.successThreshold`                   | Success
        threshold for
        readinessProbe                                                                                                                                                                             
        | `1`              |

        | `startupProbe.enabled`                              | Enable
        startupProbe on Solr
        containers                                                                                                                                                                           
        | `false`          |

        | `startupProbe.initialDelaySeconds`                  | Initial delay
        seconds for
        startupProbe                                                                                                                                                                           
        | `40`             |

        | `startupProbe.periodSeconds`                        | Period seconds
        for
        startupProbe                                                                                                                                                                                  
        | `10`             |

        | `startupProbe.timeoutSeconds`                       | Timeout seconds
        for
        startupProbe                                                                                                                                                                                 
        | `15`             |

        | `startupProbe.failureThreshold`                     | Failure
        threshold for
        startupProbe                                                                                                                                                                               
        | `15`             |

        | `startupProbe.successThreshold`                     | Success
        threshold for
        startupProbe                                                                                                                                                                               
        | `1`              |

        | `customLivenessProbe`                               | Custom
        livenessProbe that overrides the default
        one                                                                                                                                                              
        | `{}`             |

        | `customReadinessProbe`                              | Custom
        readinessProbe that overrides the default
        one                                                                                                                                                             
        | `{}`             |

        | `customStartupProbe`                                | Custom
        startupProbe that overrides the default
        one                                                                                                                                                               
        | `{}`             |

        | `lifecycleHooks`                                    | lifecycleHooks
        for the Solr container to automate configuration before or after
        startup                                                                                                                          
        | `{}`             |

        | `resourcesPreset`                                   | Set container
        resources according to one common preset (allowed values: none, nano,
        micro, small, medium, large, xlarge, 2xlarge). This is ignored if
        resources is set (resources is recommended for production). |
        `medium`         |

        | `resources`                                         | Set container
        requests and limits for different resources like CPU or memory
        (essential for production
        workloads)                                                                                                
        | `{}`             |

        | `podSecurityContext.enabled`                        | Enable Solr
        pods' Security
        Context                                                                                                                                                                               
        | `true`           |

        | `podSecurityContext.fsGroupChangePolicy`            | Set filesystem
        group change
        policy                                                                                                                                                                               
        | `Always`         |

        | `podSecurityContext.sysctls`                        | Set kernel
        settings using the sysctl
        interface                                                                                                                                                                   
        | `[]`             |

        | `podSecurityContext.supplementalGroups`             | Set filesystem
        extra
        groups                                                                                                                                                                                      
        | `[]`             |

        | `podSecurityContext.fsGroup`                        | Set Solr pod's
        Security Context
        fsGroup                                                                                                                                                                          
        | `1001`           |

        | `containerSecurityContext.enabled`                  | Enabled
        containers' Security
        Context                                                                                                                                                                             
        | `true`           |

        | `containerSecurityContext.seLinuxOptions`           | Set SELinux
        options in
        container                                                                                                                                                                                 
        | `{}`             |

        | `containerSecurityContext.runAsUser`                | Set containers'
        Security Context
        runAsUser                                                                                                                                                                       
        | `1001`           |

        | `containerSecurityContext.runAsGroup`               | Set containers'
        Security Context
        runAsGroup                                                                                                                                                                      
        | `1001`           |

        | `containerSecurityContext.runAsNonRoot`             | Set container's
        Security Context
        runAsNonRoot                                                                                                                                                                    
        | `true`           |

        | `containerSecurityContext.privileged`               | Set container's
        Security Context
        privileged                                                                                                                                                                      
        | `false`          |

        | `containerSecurityContext.readOnlyRootFilesystem`   | Set container's
        Security Context
        readOnlyRootFilesystem                                                                                                                                                          
        | `true`           |

        | `containerSecurityContext.allowPrivilegeEscalation` | Set container's
        Security Context
        allowPrivilegeEscalation                                                                                                                                                        
        | `false`          |

        | `containerSecurityContext.capabilities.drop`        | List of
        capabilities to be
        dropped                                                                                                                                                                               
        | `["ALL"]`        |

        | `containerSecurityContext.seccompProfile.type`      | Set container's
        Security Context seccomp
        profile                                                                                                                                                                 
        | `RuntimeDefault` |

        | `automountServiceAccountToken`                      | Mount Service
        Account token in
        pod                                                                                                                                                                               
        | `false`          |

        | `hostAliases`                                       | Solr pods host
        aliases                                                                                                                                                                                           
        | `[]`             |

        | `podLabels`                                         | Extra labels for
        Solr
        pods                                                                                                                                                                                       
        | `{}`             |

        | `podAnnotations`                                    | Annotations for
        Solr
        pods                                                                                                                                                                                        
        | `{}`             |

        | `podAffinityPreset`                                 | Solr pod
        affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or
        `hard`                                                                                                                         
        | `""`             |

        | `podAntiAffinityPreset`                             | Solr pod
        anti-affinity preset. Ignored if `affinity` is set. Allowed values:
        `soft` or
        `hard`                                                                                                                    
        | `soft`           |

        | `nodeAffinityPreset.type`                           | Solr node
        affinity preset type. Ignored if `affinity` is set. Allowed values:
        `soft` or
        `hard`                                                                                                                   
        | `""`             |

        | `nodeAffinityPreset.key`                            | Solr node label
        key to match Ignored if `affinity` is
        set.                                                                                                                                                       
        | `""`             |

        | `nodeAffinityPreset.values`                         | Solr node label
        values to match. Ignored if `affinity` is
        set.                                                                                                                                                   
        | `[]`             |

        | `affinity`                                          | Affinity
        settings for Solr pod assignment. Evaluated as a
        template                                                                                                                                               
        | `{}`             |

        | `nodeSelector`                                      | Node labels for
        Solr pods assignment. Evaluated as a
        template                                                                                                                                                    
        | `{}`             |

        | `tolerations`                                       | Tolerations for
        Solr pods assignment. Evaluated as a
        template                                                                                                                                                    
        | `[]`             |

        | `topologySpreadConstraints`                         | Topology Spread
        Constraints for pod assignment spread across your cluster among
        failure-domains. Evaluated as a
        template                                                                                         
        | `[]`             |

        | `podManagementPolicy`                               | Management
        Policy for Solr
        StatefulSet                                                                                                                                                                           
        | `Parallel`       |

        | `priorityClassName`                                 | Solr pods'
        priority.                                                                                                                                                                                             
        | `""`             |

        | `schedulerName`                                     | Kubernetes pod
        scheduler
        registry                                                                                                                                                                                
        | `""`             |

        | `updateStrategy.type`                               | Solr statefulset
        strategy
        type                                                                                                                                                                                   
        | `RollingUpdate`  |

        | `updateStrategy.rollingUpdate`                      | Solr statefulset
        rolling update configuration
        parameters                                                                                                                                                         
        | `{}`             |

        | `enableServiceLinks`                                | Whether
        information about services should be injected into pod's environment
        variable                                                                                                                            
        | `true`           |

        | `pdb.create`                                        | Enable a Pod
        Disruption Budget
        creation                                                                                                                                                                          
        | `true`           |

        | `pdb.minAvailable`                                  | Minimum
        number/percentage of pods that should remain
        scheduled                                                                                                                                                   
        | `""`             |

        | `pdb.maxUnavailable`                                | Maximum
        number/percentage of pods that may be made
        unavailable                                                                                                                                                   
        | `""`             |

        | `extraVolumes`                                      | Optionally
        specify extra list of additional volumes for the Solr
        pod(s)                                                                                                                                          
        | `[]`             |

        | `extraVolumeMounts`                                 | Optionally
        specify extra list of additional volumeMounts for the Solr
        container(s)                                                                                                                               
        | `[]`             |

        | `initContainers`                                    | Add init
        containers to the Solr
        pod(s)                                                                                                                                                                           
        | `[]`             |

        | `sidecars`                                          | Add sidecars to
        the Solr
        pod(s)                                                                                                                                                                                  
        | `[]`             |


        ### Traffic Exposure parameters


        | Name                                    |
        Description                                                                                                                     
        | Value                    |

        | --------------------------------------- |
        --------------------------------------------------------------------------------------------------------------------------------
        | ------------------------ |

        | `service.type`                          | Kubernetes Service
        type                                                                                                         
        | `ClusterIP`              |

        | `service.ports.http`                    | Solr HTTP service
        port                                                                                                          
        | `8983`                   |

        | `service.nodePorts.http`                | Node port for the HTTP
        service                                                                                                  
        | `""`                     |

        | `service.sessionAffinity`               | Control where client
        requests go, to the same pod or
        round-robin                                                                
        | `None`                   |

        | `service.sessionAffinityConfig`         | Additional settings for the
        sessionAffinity                                                                                     
        | `{}`                     |

        | `service.clusterIP`                     | Solr service Cluster
        IP                                                                                                         
        | `""`                     |

        | `service.loadBalancerIP`                | Solr service Load Balancer
        IP                                                                                                   
        | `""`                     |

        | `service.loadBalancerSourceRanges`      | Solr service Load Balancer
        sources                                                                                              
        | `[]`                     |

        | `service.externalTrafficPolicy`         | Solr service external
        traffic
        policy                                                                                            
        | `Cluster`                |

        | `service.annotations`                   | Additional custom
        annotations for Solr
        service                                                                                  
        | `{}`                     |

        | `service.extraPorts`                    | Extra ports to expose in the
        Solr service (normally used with the `sidecar`
        value)                                               |
        `[]`                     |

        | `service.headless.annotations`          | Annotations for the headless
        service.                                                                                           
        | `{}`                     |

        | `networkPolicy.enabled`                 | Specifies whether a
        NetworkPolicy should be
        created                                                                             
        | `true`                   |

        | `networkPolicy.allowExternal`           | Don't require client label
        for
        connections                                                                                      
        | `true`                   |

        | `networkPolicy.allowExternalEgress`     | Allow the pod to access any
        range of port and all
        destinations.                                                                 
        | `true`                   |

        | `networkPolicy.extraIngress`            | Add extra ingress rules to
        the
        NetworkPolicy                                                                                    
        | `[]`                     |

        | `networkPolicy.extraEgress`             | Add extra ingress rules to
        the
        NetworkPolicy                                                                                    
        | `[]`                     |

        | `networkPolicy.ingressNSMatchLabels`    | Labels to match to allow
        traffic from other
        namespaces                                                                          
        | `{}`                     |

        | `networkPolicy.ingressNSPodMatchLabels` | Pod labels to match to allow
        traffic from other
        namespaces                                                                      
        | `{}`                     |

        | `ingress.enabled`                       | Enable ingress record
        generation for Apache
        Geode                                                                               
        | `false`                  |

        | `ingress.ingressClassName`              | IngressClass that will be be
        used to implement the Ingress (Kubernetes
        1.18+)                                                    |
        `""`                     |

        | `ingress.pathType`                      | Ingress path
        type                                                                                                               
        | `ImplementationSpecific` |

        | `ingress.apiVersion`                    | Force Ingress API version
        (automatically detected if not
        set)                                                                   
        | `""`                     |

        | `ingress.hostname`                      | Default host for the ingress
        record                                                                                             
        | `solr.local`             |

        | `ingress.path`                          | Default path for the ingress
        record                                                                                             
        | `/`                      |

        | `ingress.annotations`                   | Additional annotations for
        the Ingress resource. To enable certificate autogeneration, place here
        your cert-manager annotations. | `{}`                     |

        | `ingress.tls`                           | Enable TLS configuration for
        the host defined at `ingress.hostname`
        parameter                                                    |
        `false`                  |

        | `ingress.selfSigned`                    | Create a TLS secret for this
        ingress record using self-signed certificates generated by
        Helm                                     | `false`                  |

        | `ingress.extraHosts`                    | An array with additional
        hostname(s) to be covered with the ingress
        record                                                       |
        `[]`                     |

        | `ingress.extraPaths`                    | Any additional arbitrary
        paths that may need to be added to the ingress under the main
        host.                                     | `[]`                     |

        | `ingress.extraTls`                      | The tls configuration for
        additional hostnames to be covered with this ingress
        record.                                           |
        `[]`                     |

        | `ingress.secrets`                       | If you're providing your own
        certificates, please use this to add the certificates as
        secrets                                    | `[]`                     |

        | `ingress.extraRules`                    | Additional rules to be
        covered with this ingress
        record                                                                         
        | `[]`                     |


        ### Persistence parameters


        | Name                        |
        Description                                                       |
        Value               |

        | --------------------------- |
        ----------------------------------------------------------------- |
        ------------------- |

        | `persistence.enabled`       | Use a PVC to persist
        data.                                        | `true`              |

        | `persistence.existingClaim` | A manually managed Persistent Volume and
        Claim                    | `""`                |

        | `persistence.storageClass`  | Storage class of backing
        PVC                                      | `""`                |

        | `persistence.accessModes`   | Persistent Volume Access
        Modes                                    | `["ReadWriteOnce"]` |

        | `persistence.size`          | Size of data
        volume                                               |
        `8Gi`               |

        | `persistence.annotations`   | Persistence annotations for
        Solr                                  | `{}`                |

        | `persistence.mountPath`     | Persistence mount path for
        Solr                                   | `/bitnami/solr`     |

        | `persistence.subPath`       | Path within the volume from which the
        container's                 | `""`                |

        | `persistence.subPathExpr`   | Expanded path within the volume from
        which                        | `""`                |

        | `persistence.selector`      | Selector to match an existing Persistent
        Volume for Solr data PVC | `{}`                |


        ### Volume Permissions parameters


        | Name                                                        |
        Description                                                                                                                                                                                                                                          
        | Value                      |

        | ----------------------------------------------------------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | -------------------------- |

        | `volumePermissions.enabled`                                 | Enable
        init container that changes the owner and group of the persistent
        volume                                                                                                                                                                      
        | `false`                    |

        | `volumePermissions.image.registry`                          | Init
        container volume-permissions image
        registry                                                                                                                                                                                                     
        | `REGISTRY_NAME`            |

        | `volumePermissions.image.repository`                        | Init
        container volume-permissions image
        repository                                                                                                                                                                                                   
        | `REPOSITORY_NAME/os-shell` |

        | `volumePermissions.image.digest`                            | Init
        container volume-permissions image digest in the way sha256:aa....
        Please note this parameter, if set, will override the
        tag                                                                                                                    
        | `""`                       |

        | `volumePermissions.image.pullPolicy`                        | Init
        container volume-permissions image pull
        policy                                                                                                                                                                                                  
        | `IfNotPresent`             |

        | `volumePermissions.image.pullSecrets`                       | Init
        container volume-permissions image pull
        secrets                                                                                                                                                                                                 
        | `[]`                       |

        | `volumePermissions.resourcesPreset`                         | Set
        container resources according to one common preset (allowed values:
        none, nano, micro, small, medium, large, xlarge, 2xlarge). This is
        ignored if volumePermissions.resources is set
        (volumePermissions.resources is recommended for production). |
        `nano`                     |

        | `volumePermissions.resources`                               | Set
        container requests and limits for different resources like CPU or memory
        (essential for production
        workloads)                                                                                                                                    
        | `{}`                       |

        | `volumePermissions.containerSecurityContext.seLinuxOptions` | Set
        SELinux options in
        container                                                                                                                                                                                                                     
        | `{}`                       |

        | `volumePermissions.containerSecurityContext.runAsUser`      | User ID
        for the init
        container                                                                                                                                                                                                                       
        | `0`                        |


        ### Other Parameters


        | Name                                          |
        Description                                                            |
        Value   |

        | --------------------------------------------- |
        ---------------------------------------------------------------------- |
        ------- |

        | `serviceAccount.create`                       | Enable creation of
        ServiceAccount for Solr pod                         | `true`  |

        | `serviceAccount.name`                         | The name of the
        ServiceAccount to use.                                 | `""`    |

        | `serviceAccount.automountServiceAccountToken` | Allows auto mount of
        ServiceAccountToken on the serviceAccount created | `false` |

        | `serviceAccount.annotations`                  | Additional custom
        annotations for the ServiceAccount                   | `{}`    |


        ### Solr TLS parameters


        | Name                         |
        Description                                                                                                                                                                                                              
        | Value   |

        | ---------------------------- |
        -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ------- |

        | `tls.enabled`                | Enable the TLS/SSL
        configuration                                                                                                                                                                                         
        | `false` |

        | `tls.autoGenerated`          | Create self-signed TLS certificates.
        Currently only supports PEM
        certificates                                                                                                                                            
        | `false` |

        | `tls.certificatesSecretName` | Name of the secret that contains the
        certificates                                                                                                                                                                        
        | `""`    |

        | `tls.passwordsSecretName`    | Set the name of the secret that
        contains the passwords for the certificate
        files                                                                                                                                         
        | `""`    |

        | `tls.keystorePassword`       | Password to access the keystore when
        it's
        password-protected                                                                                                                                                             
        | `""`    |

        | `tls.truststorePassword`     | Password to access the truststore when
        it's
        password-protected                                                                                                                                                           
        | `""`    |

        | `tls.resourcesPreset`        | Set container resources according to
        one common preset (allowed values: none, nano, micro, small, medium,
        large, xlarge, 2xlarge). This is ignored if tls.resources is set
        (tls.resources is recommended for production). | `nano`  |

        | `tls.resources`              | Set container requests and limits for
        different resources like CPU or memory (essential for production
        workloads)                                                                                                        
        | `{}`    |


        ### Metrics parameters


        | Name                                                        |
        Description                                                                                                                                                                                                                      
        | Value                                                                
        |

        | ----------------------------------------------------------- |
        ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ---------------------------------------------------------------------
        |

        | `metrics.enabled`                                           | Deploy a
        Solr Prometheus exporter deployment to expose
        metrics                                                                                                                                                                   
        | `false`                                                              
        |

        | `metrics.revisionHistoryLimit`                              | The
        number of old history to retain to allow
        rollback                                                                                                                                                                            
        | `10`                                                                 
        |

        | `metrics.configFile`                                        | Config
        file with metrics to export by the Solr prometheus metrics. To change it
        mount a different file using
        `extraConfigMaps`                                                                                                   
        | `/opt/bitnami/solr/prometheus-exporter/conf/solr-exporter-config.xml`
        |

        | `metrics.threads`                                           | Number
        of Solr exporter
        threads                                                                                                                                                                                                  
        | `7`                                                                  
        |

        | `metrics.command`                                           | Override
        Solr entrypoint
        string.                                                                                                                                                                                                 
        | `[]`                                                                 
        |

        | `metrics.args`                                              |
        Arguments for the provided command if
        needed                                                                                                                                                                                     
        | `[]`                                                                 
        |

        | `metrics.extraEnvVars`                                      |
        Additional environment variables to
        set                                                                                                                                                                                          
        | `[]`                                                                 
        |

        | `metrics.extraEnvVarsCM`                                    |
        ConfigMap with extra environment
        variables                                                                                                                                                                                       
        | `""`                                                                 
        |

        | `metrics.extraEnvVarsSecret`                                | Secret
        with extra environment
        variables                                                                                                                                                                                          
        | `""`                                                                 
        |

        | `metrics.containerPorts.http`                               | Solr
        Prometheus exporter HTTP container
        port                                                                                                                                                                                     
        | `9231`                                                               
        |

        | `metrics.livenessProbe.enabled`                             | Enable
        livenessProbe on Solr Prometheus exporter
        containers                                                                                                                                                                      
        | `true`                                                               
        |

        | `metrics.livenessProbe.initialDelaySeconds`                 | Initial
        delay seconds for
        livenessProbe                                                                                                                                                                                          
        | `10`                                                                 
        |

        | `metrics.livenessProbe.periodSeconds`                       | Period
        seconds for
        livenessProbe                                                                                                                                                                                                 
        | `5`                                                                  
        |

        | `metrics.livenessProbe.timeoutSeconds`                      | Timeout
        seconds for
        livenessProbe                                                                                                                                                                                                
        | `15`                                                                 
        |

        | `metrics.livenessProbe.failureThreshold`                    | Failure
        threshold for
        livenessProbe                                                                                                                                                                                              
        | `15`                                                                 
        |

        | `metrics.livenessProbe.successThreshold`                    | Success
        threshold for
        livenessProbe                                                                                                                                                                                              
        | `1`                                                                  
        |

        | `metrics.readinessProbe.enabled`                            | Enable
        readinessProbe on Solr Prometheus exporter
        containers                                                                                                                                                                     
        | `true`                                                               
        |

        | `metrics.readinessProbe.initialDelaySeconds`                | Initial
        delay seconds for
        readinessProbe                                                                                                                                                                                         
        | `10`                                                                 
        |

        | `metrics.readinessProbe.periodSeconds`                      | Period
        seconds for
        readinessProbe                                                                                                                                                                                                
        | `5`                                                                  
        |

        | `metrics.readinessProbe.timeoutSeconds`                     | Timeout
        seconds for
        readinessProbe                                                                                                                                                                                               
        | `15`                                                                 
        |

        | `metrics.readinessProbe.failureThreshold`                   | Failure
        threshold for
        readinessProbe                                                                                                                                                                                             
        | `15`                                                                 
        |

        | `metrics.readinessProbe.successThreshold`                   | Success
        threshold for
        readinessProbe                                                                                                                                                                                             
        | `15`                                                                 
        |

        | `metrics.startupProbe.enabled`                              | Enable
        startupProbe on Solr Prometheus exporter
        containers                                                                                                                                                                       
        | `false`                                                              
        |

        | `metrics.startupProbe.initialDelaySeconds`                  | Initial
        delay seconds for
        startupProbe                                                                                                                                                                                           
        | `30`                                                                 
        |

        | `metrics.startupProbe.periodSeconds`                        | Period
        seconds for
        startupProbe                                                                                                                                                                                                  
        | `10`                                                                 
        |

        | `metrics.startupProbe.timeoutSeconds`                       | Timeout
        seconds for
        startupProbe                                                                                                                                                                                                 
        | `1`                                                                  
        |

        | `metrics.startupProbe.failureThreshold`                     | Failure
        threshold for
        startupProbe                                                                                                                                                                                               
        | `15`                                                                 
        |

        | `metrics.startupProbe.successThreshold`                     | Success
        threshold for
        startupProbe                                                                                                                                                                                               
        | `1`                                                                  
        |

        | `metrics.customLivenessProbe`                               | Custom
        livenessProbe that overrides the default
        one                                                                                                                                                                              
        | `{}`                                                                 
        |

        | `metrics.customReadinessProbe`                              | Custom
        readinessProbe that overrides the default
        one                                                                                                                                                                             
        | `{}`                                                                 
        |

        | `metrics.customStartupProbe`                                | Custom
        startupProbe that overrides the default
        one                                                                                                                                                                               
        | `{}`                                                                 
        |

        | `metrics.resourcesPreset`                                   | Set
        container resources according to one common preset (allowed values:
        none, nano, micro, small, medium, large, xlarge, 2xlarge). This is
        ignored if metrics.resources is set (metrics.resources is recommended
        for production). |
        `nano`                                                                |

        | `metrics.resources`                                         | Set
        container requests and limits for different resources like CPU or memory
        (essential for production
        workloads)                                                                                                                
        | `{}`                                                                 
        |

        | `metrics.containerSecurityContext.enabled`                  | Enabled
        containers' Security
        Context                                                                                                                                                                                             
        | `true`                                                               
        |

        | `metrics.containerSecurityContext.seLinuxOptions`           | Set
        SELinux options in
        container                                                                                                                                                                                                 
        | `{}`                                                                 
        |

        | `metrics.containerSecurityContext.runAsUser`                | Set
        containers' Security Context
        runAsUser                                                                                                                                                                                       
        | `1001`                                                               
        |

        | `metrics.containerSecurityContext.runAsGroup`               | Set
        containers' Security Context
        runAsGroup                                                                                                                                                                                      
        | `1001`                                                               
        |

        | `metrics.containerSecurityContext.runAsNonRoot`             | Set
        container's Security Context
        runAsNonRoot                                                                                                                                                                                    
        | `true`                                                               
        |

        | `metrics.containerSecurityContext.privileged`               | Set
        container's Security Context
        privileged                                                                                                                                                                                      
        | `false`                                                              
        |

        | `metrics.containerSecurityContext.readOnlyRootFilesystem`   | Set
        container's Security Context
        readOnlyRootFilesystem                                                                                                                                                                          
        | `true`                                                               
        |

        | `metrics.containerSecurityContext.allowPrivilegeEscalation` | Set
        container's Security Context
        allowPrivilegeEscalation                                                                                                                                                                        
        | `false`                                                              
        |

        | `metrics.containerSecurityContext.capabilities.drop`        | List of
        capabilities to be
        dropped                                                                                                                                                                                               
        | `["ALL"]`                                                            
        |

        | `metrics.containerSecurityContext.seccompProfile.type`      | Set
        container's Security Context seccomp
        profile                                                                                                                                                                                 
        | `RuntimeDefault`                                                     
        |

        | `metrics.podSecurityContext.enabled`                        | Enable
        Solr Prometheus exporter pods' Security
        Context                                                                                                                                                                           
        | `true`                                                               
        |

        | `metrics.podSecurityContext.fsGroupChangePolicy`            | Set
        filesystem group change
        policy                                                                                                                                                                                               
        | `Always`                                                             
        |

        | `metrics.podSecurityContext.sysctls`                        | Set
        kernel settings using the sysctl
        interface                                                                                                                                                                                   
        | `[]`                                                                 
        |

        | `metrics.podSecurityContext.supplementalGroups`             | Set
        filesystem extra
        groups                                                                                                                                                                                                      
        | `[]`                                                                 
        |

        | `metrics.podSecurityContext.fsGroup`                        | Group ID
        for the
        pods.                                                                                                                                                                                                           
        | `1001`                                                               
        |

        | `metrics.podLabels`                                         |
        Additional labels for Solr Prometheus exporter
        pod(s)                                                                                                                                                                            
        | `{}`                                                                 
        |

        | `metrics.podAnnotations`                                    |
        Additional annotations for Solr Prometheus exporter
        pod(s)                                                                                                                                                                       
        | `{}`                                                                 
        |

        | `metrics.podAffinityPreset`                                 | Solr
        Prometheus exporter pod affinity preset. Ignored if `affinity` is set.
        Allowed values: `soft` or
        `hard`                                                                                                                     
        | `""`                                                                 
        |

        | `metrics.podAntiAffinityPreset`                             | Solr
        Prometheus exporter pod anti-affinity preset. Ignored if `affinity` is
        set. Allowed values: `soft` or
        `hard`                                                                                                                
        | `soft`                                                               
        |

        | `metrics.nodeAffinityPreset.type`                           | Solr
        Prometheus exporter node affinity preset type. Ignored if `affinity` is
        set. Allowed values: `soft` or
        `hard`                                                                                                               
        | `""`                                                                 
        |

        | `metrics.nodeAffinityPreset.key`                            | Solr
        Prometheus exporter node label key to match Ignored if `affinity` is
        set.                                                                                                                                                   
        | `""`                                                                 
        |

        | `metrics.nodeAffinityPreset.values`                         | Solr
        Prometheus exporter node label values to match. Ignored if `affinity` is
        set.                                                                                                                                               
        | `[]`                                                                 
        |

        | `metrics.affinity`                                          | Affinity
        settings for Solr Prometheus exporter pod assignment. Evaluated as a
        template                                                                                                                                           
        | `{}`                                                                 
        |

        | `metrics.nodeSelector`                                      | Node
        labels for Solr Prometheus exporter pods assignment. Evaluated as a
        template                                                                                                                                                
        | `{}`                                                                 
        |

        | `metrics.tolerations`                                       |
        Tolerations for Solr Prometheus exporter pods assignment. Evaluated as a
        template                                                                                                                                                
        | `[]`                                                                 
        |

        | `metrics.topologySpreadConstraints`                         | Topology
        Spread Constraints for pod assignment spread across your cluster among
        failure-domains. Evaluated as a
        template                                                                                                         
        | `[]`                                                                 
        |

        | `metrics.priorityClassName`                                 | Solr
        Prometheus exporter pods'
        priority.                                                                                                                                                                                         
        | `""`                                                                 
        |

        | `metrics.schedulerName`                                     |
        Kubernetes pod scheduler
        registry                                                                                                                                                                                                
        | `""`                                                                 
        |

        | `metrics.automountServiceAccountToken`                      | Mount
        Service Account token in
        pod                                                                                                                                                                                               
        | `false`                                                              
        |

        | `metrics.hostAliases`                                       | Solr
        Prometheus exporter pod host
        aliases                                                                                                                                                                                        
        | `[]`                                                                 
        |

        | `metrics.updateStrategy.type`                               | Solr
        Prometheus exporter deployment strategy
        type                                                                                                                                                                                
        | `RollingUpdate`                                                      
        |

        | `metrics.updateStrategy.rollingUpdate`                      | Solr
        Prometheus exporter deployment rolling update configuration
        parameters                                                                                                                                                      
        | `{}`                                                                 
        |

        | `metrics.extraVolumes`                                      |
        Optionally specify extra list of additional volumes for the Solr
        Prometheus exporter
        pod(s)                                                                                                                                      
        | `[]`                                                                 
        |

        | `metrics.extraVolumeMounts`                                 |
        Optionally specify extra list of additional volumeMounts for the Solr
        Prometheus exporter
        container(s)                                                                                                                           
        | `[]`                                                                 
        |

        | `metrics.initContainers`                                    | Add init
        containers to the Solr Prometheus exporter
        pod(s)                                                                                                                                                                       
        | `[]`                                                                 
        |

        | `metrics.sidecars`                                          | Add
        sidecars to the Solr Prometheus exporter
        pod(s)                                                                                                                                                                              
        | `[]`                                                                 
        |

        | `metrics.service.type`                                      |
        Kubernetes Service
        type                                                                                                                                                                                                          
        | `ClusterIP`                                                          
        |

        | `metrics.service.ports.http`                                | Solr
        Prometheus exporter HTTP service
        port                                                                                                                                                                                       
        | `9231`                                                               
        |

        | `metrics.service.sessionAffinity`                           | Control
        where client requests go, to the same pod or
        round-robin                                                                                                                                                                 
        | `None`                                                               
        |

        | `metrics.service.clusterIP`                                 | Solr
        Prometheus exporter service Cluster
        IP                                                                                                                                                                                      
        | `""`                                                                 
        |

        | `metrics.service.annotations`                               |
        annotations for Solr Prometheus exporter
        service                                                                                                                                                                                 
        | `{}`                                                                 
        |

        | `metrics.service.labels`                                    |
        Additional labels for Solr Prometheus exporter
        service                                                                                                                                                                           
        | `{}`                                                                 
        |

        | `metrics.serviceMonitor.enabled`                            | Create
        ServiceMonitor Resource for scraping metrics using Prometheus
        Operator                                                                                                                                                    
        | `false`                                                              
        |

        | `metrics.serviceMonitor.namespace`                          |
        Namespace for the ServiceMonitor Resource (defaults to the Release
        Namespace)                                                                                                                                                    
        | `""`                                                                 
        |

        | `metrics.serviceMonitor.interval`                           | Interval
        at which metrics should be
        scraped.                                                                                                                                                                                     
        | `""`                                                                 
        |

        | `metrics.serviceMonitor.scrapeTimeout`                      | Timeout
        after which the scrape is
        ended                                                                                                                                                                                          
        | `""`                                                                 
        |

        | `metrics.serviceMonitor.additionalLabels`                   |
        Additional labels that can be used so ServiceMonitor will be discovered
        by
        Prometheus                                                                                                                                            
        | `{}`                                                                 
        |

        | `metrics.serviceMonitor.selector`                           |
        Prometheus instance selector
        labels                                                                                                                                                                                              
        | `{}`                                                                 
        |

        | `metrics.serviceMonitor.relabelings`                        |
        RelabelConfigs to apply to samples before
        scraping                                                                                                                                                                               
        | `[]`                                                                 
        |

        | `metrics.serviceMonitor.metricRelabelings`                  |
        MetricRelabelConfigs to apply to samples before
        ingestion                                                                                                                                                                        
        | `[]`                                                                 
        |

        | `metrics.serviceMonitor.honorLabels`                        | Specify
        honorLabels parameter to add the scrape
        endpoint                                                                                                                                                                         
        | `false`                                                              
        |

        | `metrics.serviceMonitor.jobLabel`                           | The name
        of the label on the target service to use as the job name in
        prometheus.                                                                                                                                                
        | `""`                                                                 
        |

        | `metrics.prometheusRule.enabled`                            | Create a
        custom prometheusRule Resource for scraping metrics using
        PrometheusOperator                                                                                                                                            
        | `false`                                                              
        |

        | `metrics.prometheusRule.namespace`                          | The
        namespace in which the prometheusRule will be
        created                                                                                                                                                                        
        | `""`                                                                 
        |

        | `metrics.prometheusRule.additionalLabels`                   |
        Additional labels for the
        prometheusRule                                                                                                                                                                                         
        | `{}`                                                                 
        |

        | `metrics.prometheusRule.rules`                              | Custom
        Prometheus
        rules                                                                                                                                                                                                          
        | `[]`                                                                 
        |


        ### ZooKeeper parameters


        | Name                                 |
        Description                                                              
        | Value                 |

        | ------------------------------------ |
        -------------------------------------------------------------------------
        | --------------------- |

        | `zookeeper.enabled`                  | Enable ZooKeeper deployment.
        Needed for Solr cloud                        | `true`                |

        | `zookeeper.fourlwCommandsWhitelist`  | A list of comma separated Four
        Letter Words commands that can be executed | `srvr,mntr,conf,ruok` |

        | `zookeeper.containerPorts.client`    | ZooKeeper client container
        port                                           | `2181`                |

        | `zookeeper.replicaCount`             | Number of ZooKeeper
        nodes                                                 |
        `3`                   |

        | `zookeeper.persistence.enabled`      | Enable persistence on ZooKeeper
        using PVC(s)                              | `true`                |

        | `zookeeper.persistence.storageClass` | Persistent Volume storage
        class                                           | `""`                 
        |

        | `zookeeper.persistence.accessModes`  | Persistent Volume access
        modes                                            | `["ReadWriteOnce"]`  
        |

        | `zookeeper.persistence.size`         | Persistent Volume
        size                                                    |
        `8Gi`                 |

        | `externalZookeeper.servers`          | List of external zookeeper
        servers to use                                 | `[]`                  |


        Specify each parameter using the `--set key=value[,key=value]` argument
        to `helm install`. For example,


        ```console

        helm install my-release \
          --set cloudEnabled=true oci://REGISTRY_NAME/REPOSITORY_NAME/solr
        ```


        > Note: You need to substitute the placeholders `REGISTRY_NAME` and
        `REPOSITORY_NAME` with a reference to your Helm chart registry and
        repository. For example, in the case of Bitnami, you need to use
        `REGISTRY_NAME=registry-1.docker.io` and
        `REPOSITORY_NAME=bitnamicharts`.


        The above command enabled the Solr Cloud mode.


        Alternatively, a YAML file that specifies the values for the parameters
        can be provided while installing the chart. For example,


        ```console

        helm install my-release -f values.yaml
        oci://REGISTRY_NAME/REPOSITORY_NAME/solr

        ```


        > Note: You need to substitute the placeholders `REGISTRY_NAME` and
        `REPOSITORY_NAME` with a reference to your Helm chart registry and
        repository. For example, in the case of Bitnami, you need to use
        `REGISTRY_NAME=registry-1.docker.io` and
        `REPOSITORY_NAME=bitnamicharts`.

        > **Tip**: You can use the default
        [values.yaml](https://github.com/bitnami/charts/tree/main/bitnami/solr/values.yaml)


        ## Troubleshooting


        Find more information about how to deal with common errors related to
        Bitnami's Helm charts in [this troubleshooting
        guide](https://docs.bitnami.com/general/how-to/troubleshoot-helm-chart-issues).


        ## Upgrading


        ### To 9.5.0


        This version introduces image verification for security purposes. To
        disable it, set `global.security.allowInsecureImages` to `true`. More
        details at [GitHub
        issue](https://github.com/bitnami/charts/issues/30850).


        ### To 9.0.3


        This version uses solr container image version `9.5.0-debian-12-r7`
        which removes `HDFS` module due to CVEs found in it.


        ### To 9.0.0


        This major bump changes the following security defaults:


        - `runAsGroup` is changed from `0` to `1001`

        - `readOnlyRootFilesystem` is set to `true`

        - `resourcesPreset` is changed from `none` to the minimum size working
        in our test suites (NOTE: `resourcesPreset` is not meant for production
        usage, but `resources` adapted to your use case).

        - `global.compatibility.openshift.adaptSecurityContext` is changed from
        `disabled` to `auto`.


        This could potentially break any customization or init scripts used in
        your deployment. If this is the case, change the default values to the
        previous ones.


        ### To 8.0.0


        This major updates the Zookeeper subchart to it newest major, 12.0.0.
        For more information on this subchart's major, please refer to
        [zookeeper upgrade
        notes](https://github.com/bitnami/charts/tree/master/bitnami/zookeeper#to-1200).


        ### To 7.0.0


        This major updates the Zookeeper subchart to it newest major, 11.0.0.
        For more information on this subchart's major, please refer to
        [zookeeper upgrade
        notes](https://github.com/bitnami/charts/tree/master/bitnami/zookeeper#to-1100).


        ### To 6.0.0


        This major updates the Zookeeper subchart to it newest major, 10.0.0.
        For more information on this subchart's major, please refer to
        [zookeeper upgrade
        notes](https://github.com/bitnami/charts/tree/main/bitnami/zookeeper#to-1000).


        ### To 4.0.0


        This major updates the Zookeeper subchart to it newest major, 9.0.0. For
        more information on this subchart's major, please refer to [zookeeper
        upgrade
        notes](https://github.com/bitnami/charts/tree/main/bitnami/zookeeper#to-900).


        ### To 3.0.0


        This major release renames several values in this chart and adds missing
        features, in order to be inline with the rest of assets in the Bitnami
        charts repository.


        Affected values:


        - `containerPort` has been regrouped under the `containerPorts` map.

        - `service.port` has been regrouped under the `service.ports` map.

        - `authentication.*` parameters are renamed to `auth.*`.


        Additionally updates the ZooKeeper subchart to it newest major, `8.0.0`,
        which contains similar changes.


        ### To 2.0.0


        In this version, the `image` block is defined once and is used in the
        different templates, while in the previous version, the `image` block
        was duplicated for the main container and the metrics one


        ```yaml

        image:
          registry: docker.io
          repository: bitnami/solr
          tag: 8.9.0
        ```


        VS


        ```yaml

        image:
          registry: docker.io
          repository: bitnami/solr
          tag: 8.9.0
        ...

        metrics:
          image:
            registry: docker.io
            repository: bitnami/solr
            tag: 8.9.0
        ```


        See [PR#7114](https://github.com/bitnami/charts/pull/7114) for more info
        about the implemented changes


        ### To 1.0.0


        This major updates the Zookeeper subchart to it newest major, 7.0.0,
        which renames all TLS-related settings. For more information on this
        subchart's major, please refer to [zookeeper upgrade
        notes](https://github.com/bitnami/charts/tree/main/bitnami/zookeeper#to-700).


        ## License


        Copyright &copy; 2024 Broadcom. The term "Broadcom" refers to Broadcom
        Inc. and/or its subsidiaries.


        Licensed under the Apache License, Version 2.0 (the "License");

        you may not use this file except in compliance with the License.

        You may obtain a copy of the License at


        <http://www.apache.org/licenses/LICENSE-2.0>


        Unless required by applicable law or agreed to in writing, software

        distributed under the License is distributed on an "AS IS" BASIS,

        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

        See the License for the specific language governing permissions and

        limitations under the License.
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/README.md
    - content: >
        annotations:
          category: Infrastructure
          licenses: Apache-2.0
        apiVersion: v2

        appVersion: 2.29.0

        description: A Library Helm Chart for grouping common logic between
        bitnami charts.
          This chart is not deployable by itself.
        home: https://bitnami.com

        icon: https://bitnami.com/downloads/logos/bitnami-mark.png

        keywords:

        - common

        - helper

        - template

        - function

        - bitnami

        maintainers:

        - name: Broadcom, Inc. All Rights Reserved.
          url: https://github.com/bitnami/charts
        name: common

        sources:

        - https://github.com/bitnami/charts/tree/main/bitnami/common

        type: library

        version: 2.29.0
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/Chart.yaml
    - content: >
        # Bitnami Common Library Chart


        A [Helm Library Chart](https://helm.sh/docs/topics/library_charts/#helm)
        for grouping common logic between Bitnami charts.


        ## TL;DR


        ```yaml

        dependencies:
          - name: common
            version: 2.x.x
            repository: oci://registry-1.docker.io/bitnamicharts
        ```


        ```console

        helm dependency update

        ```


        ```yaml

        apiVersion: v1

        kind: ConfigMap

        metadata:
          name: {{ include "common.names.fullname" . }}
        data:
          myvalue: "Hello World"
        ```


        Looking to use our applications in production? Try [VMware Tanzu
        Application Catalog](https://bitnami.com/enterprise), the commercial
        edition of the Bitnami catalog.


        ## Introduction


        This chart provides a common template helpers which can be used to
        develop new charts using [Helm](https://helm.sh) package manager.


        Bitnami charts can be used with [Kubeapps](https://kubeapps.dev/) for
        deployment and management of Helm Charts in clusters.


        ## Prerequisites


        - Kubernetes 1.23+

        - Helm 3.8.0+


        ## Parameters


        ## Special input schemas


        ### ImageRoot


        ```yaml

        registry:
          type: string
          description: Docker registry where the image is located
          example: docker.io

        repository:
          type: string
          description: Repository and image name
          example: bitnami/nginx

        tag:
          type: string
          description: image tag
          example: 1.16.1-debian-10-r63

        pullPolicy:
          type: string
          description: Specify a imagePullPolicy.'

        pullSecrets:
          type: array
          items:
            type: string
          description: Optionally specify an array of imagePullSecrets (evaluated as templates).

        debug:
          type: boolean
          description: Set to true if you would like to see extra information on logs
          example: false

        ## An instance would be:

        # registry: docker.io

        # repository: bitnami/nginx

        # tag: 1.16.1-debian-10-r63

        # pullPolicy: IfNotPresent

        # debug: false

        ```


        ### Persistence


        ```yaml

        enabled:
          type: boolean
          description: Whether enable persistence.
          example: true

        storageClass:
          type: string
          description: Ghost data Persistent Volume Storage Class, If set to "-", storageClassName: "" which disables dynamic provisioning.
          example: "-"

        accessMode:
          type: string
          description: Access mode for the Persistent Volume Storage.
          example: ReadWriteOnce

        size:
          type: string
          description: Size the Persistent Volume Storage.
          example: 8Gi

        path:
          type: string
          description: Path to be persisted.
          example: /bitnami

        ## An instance would be:

        # enabled: true

        # storageClass: "-"

        # accessMode: ReadWriteOnce

        # size: 8Gi

        # path: /bitnami

        ```


        ### ExistingSecret


        ```yaml

        name:
          type: string
          description: Name of the existing secret.
          example: mySecret
        keyMapping:
          description: Mapping between the expected key name and the name of the key in the existing secret.
          type: object

        ## An instance would be:

        # name: mySecret

        # keyMapping:

        #   password: myPasswordKey

        ```


        #### Example of use


        When we store sensitive data for a deployment in a secret, some times we
        want to give to users the possibility of using theirs existing secrets.


        ```yaml

        # templates/secret.yaml

        ---

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ include "common.names.fullname" . }}
          labels:
            app: {{ include "common.names.fullname" . }}
        type: Opaque

        data:
          password: {{ .Values.password | b64enc | quote }}

        # templates/dpl.yaml

        ---

        ...
              env:
                - name: PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "common.secrets.name" (dict "existingSecret" .Values.existingSecret "context" $) }}
                      key: {{ include "common.secrets.key" (dict "existingSecret" .Values.existingSecret "key" "password") }}
        ...


        # values.yaml

        ---

        name: mySecret

        keyMapping:
          password: myPasswordKey
        ```


        ### ValidateValue


        #### NOTES.txt


        ```console

        {{- $validateValueConf00 := (dict "valueKey" "path.to.value00" "secret"
        "secretName" "field" "password-00") -}}

        {{- $validateValueConf01 := (dict "valueKey" "path.to.value01" "secret"
        "secretName" "field" "password-01") -}}


        {{ include "common.validations.values.multiple.empty" (dict "required"
        (list $validateValueConf00 $validateValueConf01) "context" $) }}

        ```


        If we force those values to be empty we will see some alerts


        ```console

        helm install test mychart --set path.to.value00="",path.to.value01=""
            'path.to.value00' must not be empty, please add '--set path.to.value00=$PASSWORD_00' to the command. To get the current value:

                export PASSWORD_00=$(kubectl get secret --namespace default secretName -o jsonpath="{.data.password-00}" | base64 -d)

            'path.to.value01' must not be empty, please add '--set path.to.value01=$PASSWORD_01' to the command. To get the current value:

                export PASSWORD_01=$(kubectl get secret --namespace default secretName -o jsonpath="{.data.password-01}" | base64 -d)
        ```


        ## Upgrading


        ### To 1.0.0


        [On November 13, 2020, Helm v2 support was formally
        finished](https://github.com/helm/charts#status-of-the-project), this
        major version is the result of the required changes applied to the Helm
        Chart to be able to incorporate the different features added in Helm v3
        and to be consistent with the Helm project itself regarding the Helm v2
        EOL.


        #### What changes were introduced in this major version?


        - Previous versions of this Helm Chart use `apiVersion: v1` (installable
        by both Helm 2 and 3), this Helm Chart was updated to `apiVersion: v2`
        (installable by Helm 3 only).
        [Here](https://helm.sh/docs/topics/charts/#the-apiversion-field) you can
        find more information about the `apiVersion` field.

        - Use `type: library`.
        [Here](https://v3.helm.sh/docs/faq/#library-chart-support) you can find
        more information.

        - The different fields present in the *Chart.yaml* file has been ordered
        alphabetically in a homogeneous way for all the Bitnami Helm Charts


        #### Considerations when upgrading to this version


        - If you want to upgrade to this version from a previous one installed
        with Helm v3, you shouldn't face any issues

        - If you want to upgrade to this version using Helm v2, this scenario is
        not supported as this version doesn't support Helm v2 anymore

        - If you installed the previous version with Helm v2 and wants to
        upgrade to this version with Helm v3, please refer to the [official Helm
        documentation](https://helm.sh/docs/topics/v2_v3_migration/#migration-use-cases)
        about migrating from Helm v2 to v3


        #### Useful links


        -
        <https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-resolve-helm2-helm3-post-migration-issues-index.html>

        - <https://helm.sh/docs/topics/v2_v3_migration/>

        - <https://helm.sh/blog/migrate-from-helm-v2-to-helm-v3/>


        ## License


        Copyright &copy; 2024 Broadcom. The term "Broadcom" refers to Broadcom
        Inc. and/or its subsidiaries.


        Licensed under the Apache License, Version 2.0 (the "License");

        you may not use this file except in compliance with the License.

        You may obtain a copy of the License at


        <http://www.apache.org/licenses/LICENSE-2.0>


        Unless required by applicable law or agreed to in writing, software

        distributed under the License is distributed on an "AS IS" BASIS,

        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

        See the License for the specific language governing permissions and

        limitations under the License.
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/README.md
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return a soft nodeAffinity definition

        {{ include "common.affinities.nodes.soft" (dict "key" "FOO" "values"
        (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.nodes.soft" -}}

        preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
                - key: {{ .key }}
                  operator: In
                  values:
                    {{- range .values }}
                    - {{ . | quote }}
                    {{- end }}
            weight: 1
        {{- end -}}


        {{/*

        Return a hard nodeAffinity definition

        {{ include "common.affinities.nodes.hard" (dict "key" "FOO" "values"
        (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.nodes.hard" -}}

        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: {{ .key }}
                  operator: In
                  values:
                    {{- range .values }}
                    - {{ . | quote }}
                    {{- end }}
        {{- end -}}


        {{/*

        Return a nodeAffinity definition

        {{ include "common.affinities.nodes" (dict "type" "soft" "key" "FOO"
        "values" (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.nodes" -}}
          {{- if eq .type "soft" }}
            {{- include "common.affinities.nodes.soft" . -}}
          {{- else if eq .type "hard" }}
            {{- include "common.affinities.nodes.hard" . -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Return a topologyKey definition

        {{ include "common.affinities.topologyKey" (dict "topologyKey" "BAR")
        -}}

        */}}

        {{- define "common.affinities.topologyKey" -}}

        {{ .topologyKey | default "kubernetes.io/hostname" -}}

        {{- end -}}


        {{/*

        Return a soft podAffinity/podAntiAffinity definition

        {{ include "common.affinities.pods.soft" (dict "component" "FOO"
        "customLabels" .Values.podLabels "extraMatchLabels"
        .Values.extraMatchLabels "topologyKey" "BAR" "extraPodAffinityTerms"
        .Values.extraPodAffinityTerms "extraNamespaces" (list "namespace1"
        "namespace2") "context" $) -}}

        */}}

        {{- define "common.affinities.pods.soft" -}}

        {{- $component := default "" .component -}}

        {{- $customLabels := default (dict) .customLabels -}}

        {{- $extraMatchLabels := default (dict) .extraMatchLabels -}}

        {{- $extraPodAffinityTerms := default (list) .extraPodAffinityTerms -}}

        {{- $extraNamespaces := default (list) .extraNamespaces -}}

        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" .context )) | nindent 10 }}
                  {{- if not (empty $component) }}
                  {{ printf "app.kubernetes.io/component: %s" $component }}
                  {{- end }}
                  {{- range $key, $value := $extraMatchLabels }}
                  {{ $key }}: {{ $value | quote }}
                  {{- end }}
              {{- if $extraNamespaces }}
              namespaces:
                - {{ .context.Release.Namespace }}
                {{- with $extraNamespaces }}
                {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
                {{- end }}
              {{- end }}
              topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
            weight: 1
          {{- range $extraPodAffinityTerms }}
          - podAffinityTerm:
              labelSelector:
                matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" $.context )) | nindent 10 }}
                  {{- if not (empty $component) }}
                  {{ printf "app.kubernetes.io/component: %s" $component }}
                  {{- end }}
                  {{- range $key, $value := .extraMatchLabels }}
                  {{ $key }}: {{ $value | quote }}
                  {{- end }}
              topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
            weight: {{ .weight | default 1 -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Return a hard podAffinity/podAntiAffinity definition

        {{ include "common.affinities.pods.hard" (dict "component" "FOO"
        "customLabels" .Values.podLabels "extraMatchLabels"
        .Values.extraMatchLabels "topologyKey" "BAR" "extraPodAffinityTerms"
        .Values.extraPodAffinityTerms "extraNamespaces" (list "namespace1"
        "namespace2") "context" $) -}}

        */}}

        {{- define "common.affinities.pods.hard" -}}

        {{- $component := default "" .component -}}

        {{- $customLabels := default (dict) .customLabels -}}

        {{- $extraMatchLabels := default (dict) .extraMatchLabels -}}

        {{- $extraPodAffinityTerms := default (list) .extraPodAffinityTerms -}}

        {{- $extraNamespaces := default (list) .extraNamespaces -}}

        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" .context )) | nindent 8 }}
                {{- if not (empty $component) }}
                {{ printf "app.kubernetes.io/component: %s" $component }}
                {{- end }}
                {{- range $key, $value := $extraMatchLabels }}
                {{ $key }}: {{ $value | quote }}
                {{- end }}
              {{- if $extraNamespaces }}
              namespaces:
                - {{ .context.Release.Namespace }}
                {{- with $extraNamespaces }}
                {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
                {{- end }}
              {{- end }}
            topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
          {{- range $extraPodAffinityTerms }}
          - labelSelector:
              matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" $.context )) | nindent 8 }}
                {{- if not (empty $component) }}
                {{ printf "app.kubernetes.io/component: %s" $component }}
                {{- end }}
                {{- range $key, $value := .extraMatchLabels }}
                {{ $key }}: {{ $value | quote }}
                {{- end }}
            topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
          {{- end -}}
        {{- end -}}


        {{/*

        Return a podAffinity/podAntiAffinity definition

        {{ include "common.affinities.pods" (dict "type" "soft" "key" "FOO"
        "values" (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.pods" -}}
          {{- if eq .type "soft" }}
            {{- include "common.affinities.pods.soft" . -}}
          {{- else if eq .type "hard" }}
            {{- include "common.affinities.pods.hard" . -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_affinities.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return the target Kubernetes version

        */}}

        {{- define "common.capabilities.kubeVersion" -}}

        {{- default (default .Capabilities.KubeVersion.Version
        .Values.kubeVersion) ((.Values.global).kubeVersion) -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for poddisruptionbudget.

        */}}

        {{- define "common.capabilities.policy.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.21-0"
        $kubeVersion) -}}

        {{- print "policy/v1beta1" -}}

        {{- else -}}

        {{- print "policy/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for networkpolicy.

        */}}

        {{- define "common.capabilities.networkPolicy.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.7-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else -}}

        {{- print "networking.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for job.

        */}}

        {{- define "common.capabilities.job.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.21-0"
        $kubeVersion) -}}

        {{- print "batch/v1beta1" -}}

        {{- else -}}

        {{- print "batch/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for cronjob.

        */}}

        {{- define "common.capabilities.cronjob.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.21-0"
        $kubeVersion) -}}

        {{- print "batch/v1beta1" -}}

        {{- else -}}

        {{- print "batch/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for daemonset.

        */}}

        {{- define "common.capabilities.daemonset.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else -}}

        {{- print "apps/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for deployment.

        */}}

        {{- define "common.capabilities.deployment.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else -}}

        {{- print "apps/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for statefulset.

        */}}

        {{- define "common.capabilities.statefulset.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "apps/v1beta1" -}}

        {{- else -}}

        {{- print "apps/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for ingress.

        */}}

        {{- define "common.capabilities.ingress.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if (.Values.ingress).apiVersion -}}

        {{- .Values.ingress.apiVersion -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.19-0"
        $kubeVersion) -}}

        {{- print "networking.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "networking.k8s.io/v1" -}}

        {{- end }}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for RBAC resources.

        */}}

        {{- define "common.capabilities.rbac.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.17-0"
        $kubeVersion) -}}

        {{- print "rbac.authorization.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "rbac.authorization.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for CRDs.

        */}}

        {{- define "common.capabilities.crd.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.19-0"
        $kubeVersion) -}}

        {{- print "apiextensions.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "apiextensions.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for APIService.

        */}}

        {{- define "common.capabilities.apiService.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.10-0"
        $kubeVersion) -}}

        {{- print "apiregistration.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "apiregistration.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for Horizontal Pod Autoscaler.

        */}}

        {{- define "common.capabilities.hpa.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" .context
        -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.23-0"
        $kubeVersion) -}}

        {{- if .beta2 -}}

        {{- print "autoscaling/v2beta2" -}}

        {{- else -}}

        {{- print "autoscaling/v2beta1" -}}

        {{- end -}}

        {{- else -}}

        {{- print "autoscaling/v2" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for Vertical Pod Autoscaler.

        */}}

        {{- define "common.capabilities.vpa.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" .context
        -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.11-0"
        $kubeVersion) -}}

        {{- print "autoscaling/v1beta1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.25-0"
        $kubeVersion) -}}

        {{- print "autoscaling/v1beta2" -}}

        {{- else -}}

        {{- print "autoscaling/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if PodSecurityPolicy is supported

        */}}

        {{- define "common.capabilities.psp.supported" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if or (empty $kubeVersion) (semverCompare "<1.25-0" $kubeVersion)
        -}}
          {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if AdmissionConfiguration is supported

        */}}

        {{- define "common.capabilities.admissionConfiguration.supported" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if or (empty $kubeVersion) (not (semverCompare "<1.23-0"
        $kubeVersion)) -}}
          {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for AdmissionConfiguration.

        */}}

        {{- define "common.capabilities.admissionConfiguration.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.23-0"
        $kubeVersion) -}}

        {{- print "apiserver.config.k8s.io/v1alpha1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.25-0"
        $kubeVersion) -}}

        {{- print "apiserver.config.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "apiserver.config.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for PodSecurityConfiguration.

        */}}

        {{- define "common.capabilities.podSecurityConfiguration.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.23-0"
        $kubeVersion) -}}

        {{- print "pod-security.admission.config.k8s.io/v1alpha1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.25-0"
        $kubeVersion) -}}

        {{- print "pod-security.admission.config.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "pod-security.admission.config.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if the used Helm version is 3.3+.

        A way to check the used Helm version was not introduced until version
        3.3.0 with .Capabilities.HelmVersion, which contains an additional
        "{}}"  structure.

        This check is introduced as a regexMatch instead of {{ if
        .Capabilities.HelmVersion }} because checking for the key HelmVersion in
        <3.3 results in a "interface not found" error.

        **To be removed when the catalog's minimun Helm version is 3.3**

        */}}

        {{- define "common.capabilities.supportsHelmVersion" -}}

        {{- if regexMatch "{(v[0-9])*[^}]*}}$" (.Capabilities | toString ) }}
          {{- true -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_capabilities.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/* 

        Return true if the detected platform is Openshift

        Usage:

        {{- include "common.compatibility.isOpenshift" . -}}

        */}}

        {{- define "common.compatibility.isOpenshift" -}}

        {{- if .Capabilities.APIVersions.Has "security.openshift.io/v1" -}}

        {{- true -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Render a compatible securityContext depending on the platform. By
        default it is maintained as it is. In other platforms like Openshift we
        remove default user/group values that do not work out of the box with
        the restricted-v1 SCC

        Usage:

        {{- include "common.compatibility.renderSecurityContext" (dict
        "secContext" .Values.containerSecurityContext "context" $) -}}

        */}}

        {{- define "common.compatibility.renderSecurityContext" -}}

        {{- $adaptedContext := .secContext -}}


        {{- if (((.context.Values.global).compatibility).openshift) -}}
          {{- if or (eq .context.Values.global.compatibility.openshift.adaptSecurityContext "force") (and (eq .context.Values.global.compatibility.openshift.adaptSecurityContext "auto") (include "common.compatibility.isOpenshift" .context)) -}}
            {{/* Remove incompatible user/group values that do not work in Openshift out of the box */}}
            {{- $adaptedContext = omit $adaptedContext "fsGroup" "runAsUser" "runAsGroup" -}}
            {{- if not .secContext.seLinuxOptions -}}
            {{/* If it is an empty object, we remove it from the resulting context because it causes validation issues */}}
            {{- $adaptedContext = omit $adaptedContext "seLinuxOptions" -}}
            {{- end -}}
          {{- end -}}
        {{- end -}}

        {{/* Remove empty seLinuxOptions object if
        global.compatibility.omitEmptySeLinuxOptions is set to true */}}

        {{- if and
        (((.context.Values.global).compatibility).omitEmptySeLinuxOptions) (not
        .secContext.seLinuxOptions) -}}
          {{- $adaptedContext = omit $adaptedContext "seLinuxOptions" -}}
        {{- end -}}

        {{/* Remove fields that are disregarded when running the container in
        privileged mode */}}

        {{- if $adaptedContext.privileged -}}
          {{- $adaptedContext = omit $adaptedContext "capabilities" "seLinuxOptions" -}}
        {{- end -}}

        {{- omit $adaptedContext "enabled" | toYaml -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_compatibility.tpl
    - content: >-
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Throw error when upgrading using empty passwords values that must not be
        empty.


        Usage:

        {{- $validationError00 := include
        "common.validations.values.single.empty" (dict "valueKey"
        "path.to.password00" "secret" "secretName" "field" "password-00") -}}

        {{- $validationError01 := include
        "common.validations.values.single.empty" (dict "valueKey"
        "path.to.password01" "secret" "secretName" "field" "password-01") -}}

        {{ include "common.errors.upgrade.passwords.empty" (dict
        "validationErrors" (list $validationError00 $validationError01)
        "context" $) }}


        Required password params:
          - validationErrors - String - Required. List of validation strings to be return, if it is empty it won't throw error.
          - context - Context - Required. Parent context.
        */}}

        {{- define "common.errors.upgrade.passwords.empty" -}}
          {{- $validationErrors := join "" .validationErrors -}}
          {{- if and $validationErrors .context.Release.IsUpgrade -}}
            {{- $errorString := "\nPASSWORDS ERROR: You must provide your current passwords when upgrading the release." -}}
            {{- $errorString = print $errorString "\n                 Note that even after reinstallation, old credentials may be needed as they may be kept in persistent volume claims." -}}
            {{- $errorString = print $errorString "\n                 Further information can be obtained at https://docs.bitnami.com/general/how-to/troubleshoot-helm-chart-issues/#credential-errors-while-upgrading-chart-releases" -}}
            {{- $errorString = print $errorString "\n%s" -}}
            {{- printf $errorString $validationErrors | fail -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Throw error when original container images are replaced.

        The error can be bypassed by setting the
        "global.security.allowInsecureImages" to true. In this case,

        a warning message will be shown instead.


        Usage:

        {{ include "common.errors.insecureImages" (dict "images" (list
        .Values.path.to.the.imageRoot) "context" $) }}

        */}}

        {{- define "common.errors.insecureImages" -}}

        {{- $relocatedImages := list -}}

        {{- $replacedImages := list -}}

        {{- $retaggedImages := list -}}

        {{- $globalRegistry := ((.context.Values.global).imageRegistry) -}}

        {{- $originalImages := .context.Chart.Annotations.images -}}

        {{- range .images -}}
          {{- $registryName := default .registry $globalRegistry -}}
          {{- $fullImageNameNoTag := printf "%s/%s" $registryName .repository -}}
          {{- $fullImageName := printf "%s:%s" $fullImageNameNoTag .tag -}}
          {{- if not (contains $fullImageNameNoTag $originalImages) -}}
            {{- if not (contains $registryName $originalImages) -}}
              {{- $relocatedImages = append $relocatedImages $fullImageName  -}}
            {{- else if not (contains .repository $originalImages) -}}
              {{- $replacedImages = append $replacedImages $fullImageName  -}}
            {{- end -}}
          {{- end -}}
          {{- if not (contains (printf "%s:%s" .repository .tag) $originalImages) -}}
            {{- $retaggedImages = append $retaggedImages $fullImageName  -}}
          {{- end -}}
        {{- end -}}


        {{- if and (or (gt (len $relocatedImages) 0) (gt (len $replacedImages)
        0)) (((.context.Values.global).security).allowInsecureImages) -}}
          {{- print "\n\n⚠ SECURITY WARNING: Verifying original container images was skipped. Please note this Helm chart was designed, tested, and validated on multiple platforms using a specific set of Bitnami and Tanzu Application Catalog containers. Substituting other containers is likely to cause degraded security and performance, broken chart features, and missing environment variables.\n" -}}
        {{- else if (or (gt (len $relocatedImages) 0) (gt (len $replacedImages)
        0)) -}}
          {{- $errorString := "Original containers have been substituted for unrecognized ones. Deploying this chart with non-standard containers is likely to cause degraded security and performance, broken chart features, and missing environment variables." -}}
          {{- $errorString = print $errorString "\n\nUnrecognized images:" -}}
          {{- range (concat $relocatedImages $replacedImages) -}}
            {{- $errorString = print $errorString "\n  - " . -}}
          {{- end -}}
          {{- if or (contains "docker.io/bitnami/" $originalImages) (contains "docker.io/bitnamiprem/" $originalImages) -}}
            {{- $errorString = print "\n\n⚠ ERROR: " $errorString -}}
            {{- $errorString = print $errorString "\n\nIf you are sure you want to proceed with non-standard containers, you can skip container image verification by setting the global parameter 'global.security.allowInsecureImages' to true." -}}
            {{- $errorString = print $errorString "\nFurther information can be obtained at https://github.com/bitnami/charts/issues/30850" -}}
            {{- print $errorString | fail -}}
          {{- else if gt (len $replacedImages) 0 -}}
            {{- $errorString = print "\n\n⚠ WARNING: " $errorString -}}
            {{- print $errorString -}}
          {{- end -}}
        {{- else if gt (len $retaggedImages) 0 -}}
          {{- $warnString := "\n\n⚠ WARNING: Original containers have been retagged. Please note this Helm chart was tested, and validated on multiple platforms using a specific set of Tanzu Application Catalog containers. Substituting original image tags could cause unexpected behavior." -}}
          {{- $warnString = print $warnString "\n\nRetagged images:" -}}
          {{- range $retaggedImages -}}
            {{- $warnString = print $warnString "\n  - " . -}}
          {{- end -}}
          {{- print $warnString -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_errors.tpl
    - content: >+
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Return the proper image name.

        If image tag and digest are not defined, termination fallbacks to chart
        appVersion.

        {{ include "common.images.image" ( dict "imageRoot"
        .Values.path.to.the.image "global" .Values.global "chart" .Chart ) }}

        */}}

        {{- define "common.images.image" -}}

        {{- $registryName := default .imageRoot.registry
        ((.global).imageRegistry) -}}

        {{- $repositoryName := .imageRoot.repository -}}

        {{- $separator := ":" -}}

        {{- $termination := .imageRoot.tag | toString -}}


        {{- if not .imageRoot.tag }}
          {{- if .chart }}
            {{- $termination = .chart.AppVersion | toString -}}
          {{- end -}}
        {{- end -}}

        {{- if .imageRoot.digest }}
            {{- $separator = "@" -}}
            {{- $termination = .imageRoot.digest | toString -}}
        {{- end -}}

        {{- if $registryName }}
            {{- printf "%s/%s%s%s" $registryName $repositoryName $separator $termination -}}
        {{- else -}}
            {{- printf "%s%s%s"  $repositoryName $separator $termination -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the proper Docker Image Registry Secret Names (deprecated: use
        common.images.renderPullSecrets instead)

        {{ include "common.images.pullSecrets" ( dict "images" (list
        .Values.path.to.the.image1, .Values.path.to.the.image2) "global"
        .Values.global) }}

        */}}

        {{- define "common.images.pullSecrets" -}}
          {{- $pullSecrets := list }}

          {{- range ((.global).imagePullSecrets) -}}
            {{- if kindIs "map" . -}}
              {{- $pullSecrets = append $pullSecrets .name -}}
            {{- else -}}
              {{- $pullSecrets = append $pullSecrets . -}}
            {{- end }}
          {{- end -}}

          {{- range .images -}}
            {{- range .pullSecrets -}}
              {{- if kindIs "map" . -}}
                {{- $pullSecrets = append $pullSecrets .name -}}
              {{- else -}}
                {{- $pullSecrets = append $pullSecrets . -}}
              {{- end -}}
            {{- end -}}
          {{- end -}}

          {{- if (not (empty $pullSecrets)) -}}
        imagePullSecrets:
            {{- range $pullSecrets | uniq }}
          - name: {{ . }}
            {{- end }}
          {{- end }}
        {{- end -}}


        {{/*

        Return the proper Docker Image Registry Secret Names evaluating values
        as templates

        {{ include "common.images.renderPullSecrets" ( dict "images" (list
        .Values.path.to.the.image1, .Values.path.to.the.image2) "context" $) }}

        */}}

        {{- define "common.images.renderPullSecrets" -}}
          {{- $pullSecrets := list }}
          {{- $context := .context }}

          {{- range (($context.Values.global).imagePullSecrets) -}}
            {{- if kindIs "map" . -}}
              {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" .name "context" $context)) -}}
            {{- else -}}
              {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" . "context" $context)) -}}
            {{- end -}}
          {{- end -}}

          {{- range .images -}}
            {{- range .pullSecrets -}}
              {{- if kindIs "map" . -}}
                {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" .name "context" $context)) -}}
              {{- else -}}
                {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" . "context" $context)) -}}
              {{- end -}}
            {{- end -}}
          {{- end -}}

          {{- if (not (empty $pullSecrets)) -}}
        imagePullSecrets:
            {{- range $pullSecrets | uniq }}
          - name: {{ . }}
            {{- end }}
          {{- end }}
        {{- end -}}


        {{/*

        Return the proper image version (ingores image revision/prerelease info
        & fallbacks to chart appVersion)

        {{ include "common.images.version" ( dict "imageRoot"
        .Values.path.to.the.image "chart" .Chart ) }}

        */}}

        {{- define "common.images.version" -}}

        {{- $imageTag := .imageRoot.tag | toString -}}

        {{/* regexp from
        https://github.com/Masterminds/semver/blob/23f51de38a0866c5ef0bfc42b3f735c73107b700/version.go#L41-L44
        */}}

        {{- if regexMatch
        `^([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?$`
        $imageTag -}}
            {{- $version := semver $imageTag -}}
            {{- printf "%d.%d.%d" $version.Major $version.Minor $version.Patch -}}
        {{- else -}}
            {{- print .chart.AppVersion -}}
        {{- end -}}

        {{- end -}}

      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_images.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Generate backend entry that is compatible with all Kubernetes API
        versions.


        Usage:

        {{ include "common.ingress.backend" (dict "serviceName" "backendName"
        "servicePort" "backendPort" "context" $) }}


        Params:
          - serviceName - String. Name of an existing service backend
          - servicePort - String/Int. Port name (or number) of the service. It will be translated to different yaml depending if it is a string or an integer.
          - context - Dict - Required. The context for the template evaluation.
        */}}

        {{- define "common.ingress.backend" -}}

        {{- $apiVersion := (include "common.capabilities.ingress.apiVersion"
        .context) -}}

        {{- if or (eq $apiVersion "extensions/v1beta1") (eq $apiVersion
        "networking.k8s.io/v1beta1") -}}

        serviceName: {{ .serviceName }}

        servicePort: {{ .servicePort }}

        {{- else -}}

        service:
          name: {{ .serviceName }}
          port:
            {{- if typeIs "string" .servicePort }}
            name: {{ .servicePort }}
            {{- else if or (typeIs "int" .servicePort) (typeIs "float64" .servicePort) }}
            number: {{ .servicePort | int }}
            {{- end }}
        {{- end -}}

        {{- end -}}


        {{/*

        Print "true" if the API pathType field is supported

        Usage:

        {{ include "common.ingress.supportsPathType" . }}

        */}}

        {{- define "common.ingress.supportsPathType" -}}

        {{- if (semverCompare "<1.18-0" (include
        "common.capabilities.kubeVersion" .)) -}}

        {{- print "false" -}}

        {{- else -}}

        {{- print "true" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if the ingressClassname field is supported

        Usage:

        {{ include "common.ingress.supportsIngressClassname" . }}

        */}}

        {{- define "common.ingress.supportsIngressClassname" -}}

        {{- if semverCompare "<1.18-0" (include
        "common.capabilities.kubeVersion" .) -}}

        {{- print "false" -}}

        {{- else -}}

        {{- print "true" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return true if cert-manager required annotations for TLS signed

        certificates are set in the Ingress annotations

        Ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations

        Usage:

        {{ include "common.ingress.certManagerRequest" ( dict "annotations"
        .Values.path.to.the.ingress.annotations ) }}

        */}}

        {{- define "common.ingress.certManagerRequest" -}}

        {{ if or (hasKey .annotations "cert-manager.io/cluster-issuer") (hasKey
        .annotations "cert-manager.io/issuer") (hasKey .annotations
        "kubernetes.io/tls-acme") }}
            {{- true -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_ingress.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Kubernetes standard labels

        {{ include "common.labels.standard" (dict "customLabels"
        .Values.commonLabels "context" $) -}}

        */}}

        {{- define "common.labels.standard" -}}

        {{- if and (hasKey . "customLabels") (hasKey . "context") -}}

        {{- $default := dict "app.kubernetes.io/name" (include
        "common.names.name" .context) "helm.sh/chart" (include
        "common.names.chart" .context) "app.kubernetes.io/instance"
        .context.Release.Name "app.kubernetes.io/managed-by"
        .context.Release.Service -}}

        {{- with .context.Chart.AppVersion -}}

        {{- $_ := set $default "app.kubernetes.io/version" . -}}

        {{- end -}}

        {{ template "common.tplvalues.merge" (dict "values" (list .customLabels
        $default) "context" .context) }}

        {{- else -}}

        app.kubernetes.io/name: {{ include "common.names.name" . }}

        helm.sh/chart: {{ include "common.names.chart" . }}

        app.kubernetes.io/instance: {{ .Release.Name }}

        app.kubernetes.io/managed-by: {{ .Release.Service }}

        {{- with .Chart.AppVersion }}

        app.kubernetes.io/version: {{ . | quote }}

        {{- end -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Labels used on immutable fields such as deploy.spec.selector.matchLabels
        or svc.spec.selector

        {{ include "common.labels.matchLabels" (dict "customLabels"
        .Values.podLabels "context" $) -}}


        We don't want to loop over custom labels appending them to the selector

        since it's very likely that it will break deployments, services, etc.

        However, it's important to overwrite the standard labels if the user

        overwrote them on metadata.labels fields.

        */}}

        {{- define "common.labels.matchLabels" -}}

        {{- if and (hasKey . "customLabels") (hasKey . "context") -}}

        {{ merge (pick (include "common.tplvalues.render" (dict "value"
        .customLabels "context" .context) | fromYaml) "app.kubernetes.io/name"
        "app.kubernetes.io/instance") (dict "app.kubernetes.io/name" (include
        "common.names.name" .context) "app.kubernetes.io/instance"
        .context.Release.Name ) | toYaml }}

        {{- else -}}

        app.kubernetes.io/name: {{ include "common.names.name" . }}

        app.kubernetes.io/instance: {{ .Release.Name }}

        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_labels.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Expand the name of the chart.

        */}}

        {{- define "common.names.name" -}}

        {{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-"
        -}}

        {{- end -}}


        {{/*

        Create chart name and version as used by the chart label.

        */}}

        {{- define "common.names.chart" -}}

        {{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc
        63 | trimSuffix "-" -}}

        {{- end -}}


        {{/*

        Create a default fully qualified app name.

        We truncate at 63 chars because some Kubernetes name fields are limited
        to this (by the DNS naming spec).

        If release name contains chart name it will be used as a full name.

        */}}

        {{- define "common.names.fullname" -}}

        {{- if .Values.fullnameOverride -}}

        {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- $name := default .Chart.Name .Values.nameOverride -}}

        {{- if contains $name .Release.Name -}}

        {{- .Release.Name | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}

        {{- end -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Create a default fully qualified dependency name.

        We truncate at 63 chars because some Kubernetes name fields are limited
        to this (by the DNS naming spec).

        If release name contains chart name it will be used as a full name.

        Usage:

        {{ include "common.names.dependency.fullname" (dict "chartName"
        "dependency-chart-name" "chartValues" .Values.dependency-chart "context"
        $) }}

        */}}

        {{- define "common.names.dependency.fullname" -}}

        {{- if .chartValues.fullnameOverride -}}

        {{- .chartValues.fullnameOverride | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- $name := default .chartName .chartValues.nameOverride -}}

        {{- if contains $name .context.Release.Name -}}

        {{- .context.Release.Name | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- printf "%s-%s" .context.Release.Name $name | trunc 63 | trimSuffix
        "-" -}}

        {{- end -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Allow the release namespace to be overridden for multi-namespace
        deployments in combined charts.

        */}}

        {{- define "common.names.namespace" -}}

        {{- default .Release.Namespace .Values.namespaceOverride | trunc 63 |
        trimSuffix "-" -}}

        {{- end -}}


        {{/*

        Create a fully qualified app name adding the installation's namespace.

        */}}

        {{- define "common.names.fullname.namespace" -}}

        {{- printf "%s-%s" (include "common.names.fullname" .) (include
        "common.names.namespace" .) | trunc 63 | trimSuffix "-" -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_names.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return a resource request/limit object based on a given preset.

        These presets are for basic testing and not meant to be used in
        production

        {{ include "common.resources.preset" (dict "type" "nano") -}}

        */}}

        {{- define "common.resources.preset" -}}

        {{/* The limits are the requests increased by 50% (except
        ephemeral-storage and xlarge/2xlarge sizes)*/}}

        {{- $presets := dict 
          "nano" (dict 
              "requests" (dict "cpu" "100m" "memory" "128Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "150m" "memory" "192Mi" "ephemeral-storage" "2Gi")
           )
          "micro" (dict 
              "requests" (dict "cpu" "250m" "memory" "256Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "375m" "memory" "384Mi" "ephemeral-storage" "2Gi")
           )
          "small" (dict 
              "requests" (dict "cpu" "500m" "memory" "512Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "750m" "memory" "768Mi" "ephemeral-storage" "2Gi")
           )
          "medium" (dict 
              "requests" (dict "cpu" "500m" "memory" "1024Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "750m" "memory" "1536Mi" "ephemeral-storage" "2Gi")
           )
          "large" (dict 
              "requests" (dict "cpu" "1.0" "memory" "2048Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "1.5" "memory" "3072Mi" "ephemeral-storage" "2Gi")
           )
          "xlarge" (dict 
              "requests" (dict "cpu" "1.0" "memory" "3072Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "3.0" "memory" "6144Mi" "ephemeral-storage" "2Gi")
           )
          "2xlarge" (dict 
              "requests" (dict "cpu" "1.0" "memory" "3072Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "6.0" "memory" "12288Mi" "ephemeral-storage" "2Gi")
           )
         }}
        {{- if hasKey $presets .type -}}

        {{- index $presets .type | toYaml -}}

        {{- else -}}

        {{- printf "ERROR: Preset key '%s' invalid. Allowed values are %s" .type
        (join "," (keys $presets)) | fail -}}

        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_resources.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Generate secret name.


        Usage:

        {{ include "common.secrets.name" (dict "existingSecret"
        .Values.path.to.the.existingSecret "defaultNameSuffix" "mySuffix"
        "context" $) }}


        Params:
          - existingSecret - ExistingSecret/String - Optional. The path to the existing secrets in the values.yaml given by the user
            to be used instead of the default one. Allows for it to be of type String (just the secret name) for backwards compatibility.
            +info: https://github.com/bitnami/charts/tree/main/bitnami/common#existingsecret
          - defaultNameSuffix - String - Optional. It is used only if we have several secrets in the same deployment.
          - context - Dict - Required. The context for the template evaluation.
        */}}

        {{- define "common.secrets.name" -}}

        {{- $name := (include "common.names.fullname" .context) -}}


        {{- if .defaultNameSuffix -}}

        {{- $name = printf "%s-%s" $name .defaultNameSuffix | trunc 63 |
        trimSuffix "-" -}}

        {{- end -}}


        {{- with .existingSecret -}}

        {{- if not (typeIs "string" .) -}}

        {{- with .name -}}

        {{- $name = . -}}

        {{- end -}}

        {{- else -}}

        {{- $name = . -}}

        {{- end -}}

        {{- end -}}


        {{- printf "%s" $name -}}

        {{- end -}}


        {{/*

        Generate secret key.


        Usage:

        {{ include "common.secrets.key" (dict "existingSecret"
        .Values.path.to.the.existingSecret "key" "keyName") }}


        Params:
          - existingSecret - ExistingSecret/String - Optional. The path to the existing secrets in the values.yaml given by the user
            to be used instead of the default one. Allows for it to be of type String (just the secret name) for backwards compatibility.
            +info: https://github.com/bitnami/charts/tree/main/bitnami/common#existingsecret
          - key - String - Required. Name of the key in the secret.
        */}}

        {{- define "common.secrets.key" -}}

        {{- $key := .key -}}


        {{- if .existingSecret -}}
          {{- if not (typeIs "string" .existingSecret) -}}
            {{- if .existingSecret.keyMapping -}}
              {{- $key = index .existingSecret.keyMapping $.key -}}
            {{- end -}}
          {{- end }}
        {{- end -}}


        {{- printf "%s" $key -}}

        {{- end -}}


        {{/*

        Generate secret password or retrieve one if already created.


        Usage:

        {{ include "common.secrets.passwords.manage" (dict "secret"
        "secret-name" "key" "keyName" "providedValues" (list "path.to.password1"
        "path.to.password2") "length" 10 "strong" false "chartName" "chartName"
        "honorProvidedValues" false "context" $) }}


        Params:
          - secret - String - Required - Name of the 'Secret' resource where the password is stored.
          - key - String - Required - Name of the key in the secret.
          - providedValues - List<String> - Required - The path to the validating value in the values.yaml, e.g: "mysql.password". Will pick first parameter with a defined value.
          - length - int - Optional - Length of the generated random password.
          - strong - Boolean - Optional - Whether to add symbols to the generated random password.
          - chartName - String - Optional - Name of the chart used when said chart is deployed as a subchart.
          - context - Context - Required - Parent context.
          - failOnNew - Boolean - Optional - Default to true. If set to false, skip errors adding new keys to existing secrets.
          - skipB64enc - Boolean - Optional - Default to false. If set to true, no the secret will not be base64 encrypted.
          - skipQuote - Boolean - Optional - Default to false. If set to true, no quotes will be added around the secret.
          - honorProvidedValues - Boolean - Optional - Default to false. If set to true, the values in providedValues have higher priority than an existing secret
        The order in which this function returns a secret password:
          1. Password provided via the values.yaml if honorProvidedValues = true
             (If one of the keys passed to the 'providedValues' parameter to this function is a valid path to a key in the values.yaml and has a value, the value of the first key with a value will be returned)
          2. Already existing 'Secret' resource
             (If a 'Secret' resource is found under the name provided to the 'secret' parameter to this function and that 'Secret' resource contains a key with the name passed as the 'key' parameter to this function then the value of this existing secret password will be returned)
          3. Password provided via the values.yaml if honorProvidedValues = false
             (If one of the keys passed to the 'providedValues' parameter to this function is a valid path to a key in the values.yaml and has a value, the value of the first key with a value will be returned)
          4. Randomly generated secret password
             (A new random secret password with the length specified in the 'length' parameter will be generated and returned)

        */}}

        {{- define "common.secrets.passwords.manage" -}}


        {{- $password := "" }}

        {{- $subchart := "" }}

        {{- $chartName := default "" .chartName }}

        {{- $passwordLength := default 10 .length }}

        {{- $providedPasswordKey := include "common.utils.getKeyFromList" (dict
        "keys" .providedValues "context" $.context) }}

        {{- $providedPasswordValue := include "common.utils.getValueFromKey"
        (dict "key" $providedPasswordKey "context" $.context) }}

        {{- $secretData := (lookup "v1" "Secret" (include
        "common.names.namespace" .context) .secret).data }}

        {{- if $secretData }}
          {{- if hasKey $secretData .key }}
            {{- $password = index $secretData .key | b64dec }}
          {{- else if not (eq .failOnNew false) }}
            {{- printf "\nPASSWORDS ERROR: The secret \"%s\" does not contain the key \"%s\"\n" .secret .key | fail -}}
          {{- end -}}
        {{- end }}


        {{- if and $providedPasswordValue .honorProvidedValues }}
          {{- $password = $providedPasswordValue | toString }}
        {{- end }}


        {{- if not $password }}
          {{- if $providedPasswordValue }}
            {{- $password = $providedPasswordValue | toString }}
          {{- else }}
            {{- if .context.Values.enabled }}
              {{- $subchart = $chartName }}
            {{- end -}}

            {{- if not (eq .failOnNew false) }}
              {{- $requiredPassword := dict "valueKey" $providedPasswordKey "secret" .secret "field" .key "subchart" $subchart "context" $.context -}}
              {{- $requiredPasswordError := include "common.validations.values.single.empty" $requiredPassword -}}
              {{- $passwordValidationErrors := list $requiredPasswordError -}}
              {{- include "common.errors.upgrade.passwords.empty" (dict "validationErrors" $passwordValidationErrors "context" $.context) -}}
            {{- end }}

            {{- if .strong }}
              {{- $subStr := list (lower (randAlpha 1)) (randNumeric 1) (upper (randAlpha 1)) | join "_" }}
              {{- $password = randAscii $passwordLength }}
              {{- $password = regexReplaceAllLiteral "\\W" $password "@" | substr 5 $passwordLength }}
              {{- $password = printf "%s%s" $subStr $password | toString | shuffle }}
            {{- else }}
              {{- $password = randAlphaNum $passwordLength }}
            {{- end }}
          {{- end -}}
        {{- end -}}

        {{- if not .skipB64enc }}

        {{- $password = $password | b64enc }}

        {{- end -}}

        {{- if .skipQuote -}}

        {{- printf "%s" $password -}}

        {{- else -}}

        {{- printf "%s" $password | quote -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Reuses the value from an existing secret, otherwise sets its value to a
        default value.


        Usage:

        {{ include "common.secrets.lookup" (dict "secret" "secret-name" "key"
        "keyName" "defaultValue" .Values.myValue "context" $) }}


        Params:
          - secret - String - Required - Name of the 'Secret' resource where the password is stored.
          - key - String - Required - Name of the key in the secret.
          - defaultValue - String - Required - The path to the validating value in the values.yaml, e.g: "mysql.password". Will pick first parameter with a defined value.
          - context - Context - Required - Parent context.

        */}}

        {{- define "common.secrets.lookup" -}}

        {{- $value := "" -}}

        {{- $secretData := (lookup "v1" "Secret" (include
        "common.names.namespace" .context) .secret).data -}}

        {{- if and $secretData (hasKey $secretData .key) -}}
          {{- $value = index $secretData .key -}}
        {{- else if .defaultValue -}}
          {{- $value = .defaultValue | toString | b64enc -}}
        {{- end -}}

        {{- if $value -}}

        {{- printf "%s" $value -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns whether a previous generated secret already exists


        Usage:

        {{ include "common.secrets.exists" (dict "secret" "secret-name"
        "context" $) }}


        Params:
          - secret - String - Required - Name of the 'Secret' resource where the password is stored.
          - context - Context - Required - Parent context.
        */}}

        {{- define "common.secrets.exists" -}}

        {{- $secret := (lookup "v1" "Secret" (include "common.names.namespace"
        .context) .secret) }}

        {{- if $secret }}
          {{- true -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_secrets.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return  the proper Storage Class

        {{ include "common.storage.class" ( dict "persistence"
        .Values.path.to.the.persistence "global" $) }}

        */}}

        {{- define "common.storage.class" -}}

        {{- $storageClass := (.global).storageClass | default
        .persistence.storageClass | default (.global).defaultStorageClass |
        default "" -}}

        {{- if $storageClass -}}
          {{- if (eq "-" $storageClass) -}}
              {{- printf "storageClassName: \"\"" -}}
          {{- else -}}
              {{- printf "storageClassName: %s" $storageClass -}}
          {{- end -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_storage.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Renders a value that contains template perhaps with scope if the scope
        is present.

        Usage:

        {{ include "common.tplvalues.render" ( dict "value"
        .Values.path.to.the.Value "context" $ ) }}

        {{ include "common.tplvalues.render" ( dict "value"
        .Values.path.to.the.Value "context" $ "scope" $app ) }}

        */}}

        {{- define "common.tplvalues.render" -}}

        {{- $value := typeIs "string" .value | ternary .value (.value | toYaml)
        }}

        {{- if contains "{{" (toJson .value) }}
          {{- if .scope }}
              {{- tpl (cat "{{- with $.RelativeScope -}}" $value "{{- end }}") (merge (dict "RelativeScope" .scope) .context) }}
          {{- else }}
            {{- tpl $value .context }}
          {{- end }}
        {{- else }}
            {{- $value }}
        {{- end }}

        {{- end -}}


        {{/*

        Merge a list of values that contains template after rendering them.

        Merge precedence is consistent with
        http://masterminds.github.io/sprig/dicts.html#merge-mustmerge

        Usage:

        {{ include "common.tplvalues.merge" ( dict "values" (list
        .Values.path.to.the.Value1 .Values.path.to.the.Value2) "context" $ ) }}

        */}}

        {{- define "common.tplvalues.merge" -}}

        {{- $dst := dict -}}

        {{- range .values -}}

        {{- $dst = include "common.tplvalues.render" (dict "value" . "context"
        $.context "scope" $.scope) | fromYaml | merge $dst -}}

        {{- end -}}

        {{ $dst | toYaml }}

        {{- end -}}


        {{/*

        Merge a list of values that contains template after rendering them.

        Merge precedence is consistent with
        https://masterminds.github.io/sprig/dicts.html#mergeoverwrite-mustmergeoverwrite

        Usage:

        {{ include "common.tplvalues.merge-overwrite" ( dict "values" (list
        .Values.path.to.the.Value1 .Values.path.to.the.Value2) "context" $ ) }}

        */}}

        {{- define "common.tplvalues.merge-overwrite" -}}

        {{- $dst := dict -}}

        {{- range .values -}}

        {{- $dst = include "common.tplvalues.render" (dict "value" . "context"
        $.context "scope" $.scope) | fromYaml | mergeOverwrite $dst -}}

        {{- end -}}

        {{ $dst | toYaml }}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_tplvalues.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Print instructions to get a secret value.

        Usage:

        {{ include "common.utils.secret.getvalue" (dict "secret" "secret-name"
        "field" "secret-value-field" "context" $) }}

        */}}

        {{- define "common.utils.secret.getvalue" -}}

        {{- $varname := include "common.utils.fieldToEnvVar" . -}}

        export {{ $varname }}=$(kubectl get secret --namespace {{ include
        "common.names.namespace" .context | quote }} {{ .secret }} -o
        jsonpath="{.data.{{ .field }}}" | base64 -d)

        {{- end -}}


        {{/*

        Build env var name given a field

        Usage:

        {{ include "common.utils.fieldToEnvVar" dict "field" "my-password" }}

        */}}

        {{- define "common.utils.fieldToEnvVar" -}}
          {{- $fieldNameSplit := splitList "-" .field -}}
          {{- $upperCaseFieldNameSplit := list -}}

          {{- range $fieldNameSplit -}}
            {{- $upperCaseFieldNameSplit = append $upperCaseFieldNameSplit ( upper . ) -}}
          {{- end -}}

          {{ join "_" $upperCaseFieldNameSplit }}
        {{- end -}}


        {{/*

        Gets a value from .Values given

        Usage:

        {{ include "common.utils.getValueFromKey" (dict "key" "path.to.key"
        "context" $) }}

        */}}

        {{- define "common.utils.getValueFromKey" -}}

        {{- $splitKey := splitList "." .key -}}

        {{- $value := "" -}}

        {{- $latestObj := $.context.Values -}}

        {{- range $splitKey -}}
          {{- if not $latestObj -}}
            {{- printf "please review the entire path of '%s' exists in values" $.key | fail -}}
          {{- end -}}
          {{- $value = ( index $latestObj . ) -}}
          {{- $latestObj = $value -}}
        {{- end -}}

        {{- printf "%v" (default "" $value) -}} 

        {{- end -}}


        {{/*

        Returns first .Values key with a defined value or first of the list if
        all non-defined

        Usage:

        {{ include "common.utils.getKeyFromList" (dict "keys" (list
        "path.to.key1" "path.to.key2") "context" $) }}

        */}}

        {{- define "common.utils.getKeyFromList" -}}

        {{- $key := first .keys -}}

        {{- $reverseKeys := reverse .keys }}

        {{- range $reverseKeys }}
          {{- $value := include "common.utils.getValueFromKey" (dict "key" . "context" $.context ) }}
          {{- if $value -}}
            {{- $key = . }}
          {{- end -}}
        {{- end -}}

        {{- printf "%s" $key -}} 

        {{- end -}}


        {{/*

        Checksum a template at "path" containing a *single* resource
        (ConfigMap,Secret) for use in pod annotations, excluding the metadata
        (see #18376).

        Usage:

        {{ include "common.utils.checksumTemplate" (dict "path"
        "/configmap.yaml" "context" $) }}

        */}}

        {{- define "common.utils.checksumTemplate" -}}

        {{- $obj := include (print .context.Template.BasePath .path) .context |
        fromYaml -}}

        {{ omit $obj "apiVersion" "kind" "metadata" | toYaml | sha256sum }}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_utils.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Warning about using rolling tag.

        Usage:

        {{ include "common.warnings.rollingTag" .Values.path.to.the.imageRoot }}

        */}}

        {{- define "common.warnings.rollingTag" -}}


        {{- if and (contains "bitnami/" .repository) (not (.tag | toString |
        regexFind "-r\\d+$|sha256:")) }}

        WARNING: Rolling tag detected ({{ .repository }}:{{ .tag }}), please
        note that it is strongly recommended to avoid using rolling tags in a
        production environment.

        +info
        https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-understand-rolling-tags-containers-index.html

        {{- end }}

        {{- end -}}


        {{/*

        Warning about replaced images from the original.

        Usage:

        {{ include "common.warnings.modifiedImages" (dict "images" (list
        .Values.path.to.the.imageRoot) "context" $) }}

        */}}

        {{- define "common.warnings.modifiedImages" -}}

        {{- $affectedImages := list -}}

        {{- $printMessage := false -}}

        {{- $originalImages := .context.Chart.Annotations.images -}}

        {{- range .images -}}
          {{- $fullImageName := printf (printf "%s/%s:%s" .registry .repository .tag) -}}
          {{- if not (contains $fullImageName $originalImages) }}
            {{- $affectedImages = append $affectedImages (printf "%s/%s:%s" .registry .repository .tag) -}}
            {{- $printMessage = true -}}
          {{- end -}}
        {{- end -}}

        {{- if $printMessage }}


        ⚠ SECURITY WARNING: Original containers have been substituted. This Helm
        chart was designed, tested, and validated on multiple platforms using a
        specific set of Bitnami and Tanzu Application Catalog containers.
        Substituting other containers is likely to cause degraded security and
        performance, broken chart features, and missing environment variables.


        Substituted images detected:

        {{- range $affectedImages }}
          - {{ . }}
        {{- end }}

        {{- end -}}

        {{- end -}}


        {{/*

        Warning about not setting the resource object in all deployments.

        Usage:

        {{ include "common.warnings.resources" (dict "sections" (list "path1"
        "path2") context $) }}

        Example:

        {{- include "common.warnings.resources" (dict "sections" (list
        "csiProvider.provider" "server" "volumePermissions" "") "context" $) }}

        The list in the example assumes that the following values exist:
          - csiProvider.provider.resources
          - server.resources
          - volumePermissions.resources
          - resources
        */}}

        {{- define "common.warnings.resources" -}}

        {{- $values := .context.Values -}}

        {{- $printMessage := false -}}

        {{ $affectedSections := list -}}

        {{- range .sections -}}
          {{- if eq . "" -}}
            {{/* Case where the resources section is at the root (one main deployment in the chart) */}}
            {{- if not (index $values "resources") -}}
            {{- $affectedSections = append $affectedSections "resources" -}}
            {{- $printMessage = true -}}
            {{- end -}}
          {{- else -}}
            {{/* Case where the are multiple resources sections (more than one main deployment in the chart) */}}
            {{- $keys := split "." . -}}
            {{/* We iterate through the different levels until arriving to the resource section. Example: a.b.c.resources */}}
            {{- $section := $values -}}
            {{- range $keys -}}
              {{- $section = index $section . -}}
            {{- end -}}
            {{- if not (index $section "resources") -}}
              {{/* If the section has enabled=false or replicaCount=0, do not include it */}}
              {{- if and (hasKey $section "enabled") -}}
                {{- if index $section "enabled" -}}
                  {{/* enabled=true */}}
                  {{- $affectedSections = append $affectedSections (printf "%s.resources" .) -}}
                  {{- $printMessage = true -}}
                {{- end -}}
              {{- else if and (hasKey $section "replicaCount")  -}}
                {{/* We need a casting to int because number 0 is not treated as an int by default */}}
                {{- if (gt (index $section "replicaCount" | int) 0) -}}
                  {{/* replicaCount > 0 */}}
                  {{- $affectedSections = append $affectedSections (printf "%s.resources" .) -}}
                  {{- $printMessage = true -}}
                {{- end -}}
              {{- else -}}
                {{/* Default case, add it to the affected sections */}}
                {{- $affectedSections = append $affectedSections (printf "%s.resources" .) -}}
                {{- $printMessage = true -}}
              {{- end -}}
            {{- end -}}
          {{- end -}}
        {{- end -}}

        {{- if $printMessage }}


        WARNING: There are "resources" sections in the chart not set. Using
        "resourcesPreset" is not recommended for production. For production
        installations, please set the following values according to your
        workload needs:

        {{- range $affectedSections }}
          - {{ . }}
        {{- end }}

        +info
        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/_warnings.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.cassandra.values.existingSecret" (dict "context" $)
        }}

        Params:
          - subchart - Boolean - Optional. Whether Cassandra is used as subchart or not. Default: false
        */}}

        {{- define "common.cassandra.values.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.cassandra.dbUser.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.dbUser.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled cassandra.


        Usage:

        {{ include "common.cassandra.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.cassandra.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.cassandra.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key dbUser


        Usage:

        {{ include "common.cassandra.values.key.dbUser" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether Cassandra is used as subchart or not. Default: false
        */}}

        {{- define "common.cassandra.values.key.dbUser" -}}
          {{- if .subchart -}}
            cassandra.dbUser
          {{- else -}}
            dbUser
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_cassandra.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Validate MariaDB required passwords are not empty.


        Usage:

        {{ include "common.validations.values.mariadb.passwords" (dict "secret"
        "secretName" "subchart" false "context" $) }}

        Params:
          - secret - String - Required. Name of the secret where MariaDB values are stored, e.g: "mysql-passwords-secret"
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.validations.values.mariadb.passwords" -}}
          {{- $existingSecret := include "common.mariadb.values.auth.existingSecret" . -}}
          {{- $enabled := include "common.mariadb.values.enabled" . -}}
          {{- $architecture := include "common.mariadb.values.architecture" . -}}
          {{- $authPrefix := include "common.mariadb.values.key.auth" . -}}
          {{- $valueKeyRootPassword := printf "%s.rootPassword" $authPrefix -}}
          {{- $valueKeyUsername := printf "%s.username" $authPrefix -}}
          {{- $valueKeyPassword := printf "%s.password" $authPrefix -}}
          {{- $valueKeyReplicationPassword := printf "%s.replicationPassword" $authPrefix -}}

          {{- if and (or (not $existingSecret) (eq $existingSecret "\"\"")) (eq $enabled "true") -}}
            {{- $requiredPasswords := list -}}

            {{- $requiredRootPassword := dict "valueKey" $valueKeyRootPassword "secret" .secret "field" "mariadb-root-password" -}}
            {{- $requiredPasswords = append $requiredPasswords $requiredRootPassword -}}

            {{- $valueUsername := include "common.utils.getValueFromKey" (dict "key" $valueKeyUsername "context" .context) }}
            {{- if not (empty $valueUsername) -}}
                {{- $requiredPassword := dict "valueKey" $valueKeyPassword "secret" .secret "field" "mariadb-password" -}}
                {{- $requiredPasswords = append $requiredPasswords $requiredPassword -}}
            {{- end -}}

            {{- if (eq $architecture "replication") -}}
                {{- $requiredReplicationPassword := dict "valueKey" $valueKeyReplicationPassword "secret" .secret "field" "mariadb-replication-password" -}}
                {{- $requiredPasswords = append $requiredPasswords $requiredReplicationPassword -}}
            {{- end -}}

            {{- include "common.validations.values.multiple.empty" (dict "required" $requiredPasswords "context" .context) -}}

          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.mariadb.values.auth.existingSecret" (dict "context"
        $) }}

        Params:
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.mariadb.values.auth.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.mariadb.auth.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.auth.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled mariadb.


        Usage:

        {{ include "common.mariadb.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.mariadb.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.mariadb.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for architecture


        Usage:

        {{ include "common.mariadb.values.architecture" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.mariadb.values.architecture" -}}
          {{- if .subchart -}}
            {{- .context.Values.mariadb.architecture -}}
          {{- else -}}
            {{- .context.Values.architecture -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key auth


        Usage:

        {{ include "common.mariadb.values.key.auth" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.mariadb.values.key.auth" -}}
          {{- if .subchart -}}
            mariadb.auth
          {{- else -}}
            auth
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_mariadb.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.mongodb.values.auth.existingSecret" (dict "context"
        $) }}

        Params:
          - subchart - Boolean - Optional. Whether MongoDb is used as subchart or not. Default: false
        */}}

        {{- define "common.mongodb.values.auth.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.mongodb.auth.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.auth.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled mongodb.


        Usage:

        {{ include "common.mongodb.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.mongodb.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.mongodb.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key auth


        Usage:

        {{ include "common.mongodb.values.key.auth" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MongoDB&reg; is used as subchart or not. Default: false
        */}}

        {{- define "common.mongodb.values.key.auth" -}}
          {{- if .subchart -}}
            mongodb.auth
          {{- else -}}
            auth
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for architecture


        Usage:

        {{ include "common.mongodb.values.architecture" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MongoDB&reg; is used as subchart or not. Default: false
        */}}

        {{- define "common.mongodb.values.architecture" -}}
          {{- if .subchart -}}
            {{- .context.Values.mongodb.architecture -}}
          {{- else -}}
            {{- .context.Values.architecture -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_mongodb.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.mysql.values.auth.existingSecret" (dict "context" $)
        }}

        Params:
          - subchart - Boolean - Optional. Whether MySQL is used as subchart or not. Default: false
        */}}

        {{- define "common.mysql.values.auth.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.mysql.auth.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.auth.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled mysql.


        Usage:

        {{ include "common.mysql.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.mysql.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.mysql.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for architecture


        Usage:

        {{ include "common.mysql.values.architecture" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MySQL is used as subchart or not. Default: false
        */}}

        {{- define "common.mysql.values.architecture" -}}
          {{- if .subchart -}}
            {{- .context.Values.mysql.architecture -}}
          {{- else -}}
            {{- .context.Values.architecture -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key auth


        Usage:

        {{ include "common.mysql.values.key.auth" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MySQL is used as subchart or not. Default: false
        */}}

        {{- define "common.mysql.values.key.auth" -}}
          {{- if .subchart -}}
            mysql.auth
          {{- else -}}
            auth
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_mysql.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to decide whether evaluate global values.


        Usage:

        {{ include "common.postgresql.values.use.global" (dict "key"
        "key-of-global" "context" $) }}

        Params:
          - key - String - Required. Field to be evaluated within global, e.g: "existingSecret"
        */}}

        {{- define "common.postgresql.values.use.global" -}}
          {{- if .context.Values.global -}}
            {{- if .context.Values.global.postgresql -}}
              {{- index .context.Values.global.postgresql .key | quote -}}
            {{- end -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.postgresql.values.existingSecret" (dict "context" $)
        }}

        */}}

        {{- define "common.postgresql.values.existingSecret" -}}
          {{- $globalValue := include "common.postgresql.values.use.global" (dict "key" "existingSecret" "context" .context) -}}

          {{- if .subchart -}}
            {{- default (.context.Values.postgresql.existingSecret | quote) $globalValue -}}
          {{- else -}}
            {{- default (.context.Values.existingSecret | quote) $globalValue -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled postgresql.


        Usage:

        {{ include "common.postgresql.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.postgresql.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.postgresql.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key postgressPassword.


        Usage:

        {{ include "common.postgresql.values.key.postgressPassword" (dict
        "subchart" "true" "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether postgresql is used as subchart or not. Default: false
        */}}

        {{- define "common.postgresql.values.key.postgressPassword" -}}
          {{- $globalValue := include "common.postgresql.values.use.global" (dict "key" "postgresqlUsername" "context" .context) -}}

          {{- if not $globalValue -}}
            {{- if .subchart -}}
              postgresql.postgresqlPassword
            {{- else -}}
              postgresqlPassword
            {{- end -}}
          {{- else -}}
            global.postgresql.postgresqlPassword
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled.replication.


        Usage:

        {{ include "common.postgresql.values.enabled.replication" (dict
        "subchart" "true" "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether postgresql is used as subchart or not. Default: false
        */}}

        {{- define "common.postgresql.values.enabled.replication" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.postgresql.replication.enabled -}}
          {{- else -}}
            {{- printf "%v" .context.Values.replication.enabled -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key
        replication.password.


        Usage:

        {{ include "common.postgresql.values.key.replicationPassword" (dict
        "subchart" "true" "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether postgresql is used as subchart or not. Default: false
        */}}

        {{- define "common.postgresql.values.key.replicationPassword" -}}
          {{- if .subchart -}}
            postgresql.replication.password
          {{- else -}}
            replication.password
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_postgresql.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}



        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for enabled redis.


        Usage:

        {{ include "common.redis.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.redis.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.redis.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right prefix path for the values


        Usage:

        {{ include "common.redis.values.key.prefix" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether redis is used as subchart or not. Default: false
        */}}

        {{- define "common.redis.values.keys.prefix" -}}
          {{- if .subchart -}}redis.{{- else -}}{{- end -}}
        {{- end -}}


        {{/*

        Checks whether the redis chart's includes the standarizations (version
        >= 14)


        Usage:

        {{ include "common.redis.values.standarized.version" (dict "context" $)
        }}

        */}}

        {{- define "common.redis.values.standarized.version" -}}

          {{- $standarizedAuth := printf "%s%s" (include "common.redis.values.keys.prefix" .) "auth" -}}
          {{- $standarizedAuthValues := include "common.utils.getValueFromKey" (dict "key" $standarizedAuth "context" .context) }}

          {{- if $standarizedAuthValues -}}
            {{- true -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_redis.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Validate values must not be empty.


        Usage:

        {{- $validateValueConf00 := (dict "valueKey" "path.to.value" "secret"
        "secretName" "field" "password-00") -}}

        {{- $validateValueConf01 := (dict "valueKey" "path.to.value" "secret"
        "secretName" "field" "password-01") -}}

        {{ include "common.validations.values.empty" (dict "required" (list
        $validateValueConf00 $validateValueConf01) "context" $) }}


        Validate value params:
          - valueKey - String - Required. The path to the validating value in the values.yaml, e.g: "mysql.password"
          - secret - String - Optional. Name of the secret where the validating value is generated/stored, e.g: "mysql-passwords-secret"
          - field - String - Optional. Name of the field in the secret data, e.g: "mysql-password"
        */}}

        {{- define "common.validations.values.multiple.empty" -}}
          {{- range .required -}}
            {{- include "common.validations.values.single.empty" (dict "valueKey" .valueKey "secret" .secret "field" .field "context" $.context) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Validate a value must not be empty.


        Usage:

        {{ include "common.validations.value.empty" (dict "valueKey"
        "mariadb.password" "secret" "secretName" "field" "my-password"
        "subchart" "subchart" "context" $) }}


        Validate value params:
          - valueKey - String - Required. The path to the validating value in the values.yaml, e.g: "mysql.password"
          - secret - String - Optional. Name of the secret where the validating value is generated/stored, e.g: "mysql-passwords-secret"
          - field - String - Optional. Name of the field in the secret data, e.g: "mysql-password"
          - subchart - String - Optional - Name of the subchart that the validated password is part of.
        */}}

        {{- define "common.validations.values.single.empty" -}}
          {{- $value := include "common.utils.getValueFromKey" (dict "key" .valueKey "context" .context) }}
          {{- $subchart := ternary "" (printf "%s." .subchart) (empty .subchart) }}

          {{- if not $value -}}
            {{- $varname := "my-value" -}}
            {{- $getCurrentValue := "" -}}
            {{- if and .secret .field -}}
              {{- $varname = include "common.utils.fieldToEnvVar" . -}}
              {{- $getCurrentValue = printf " To get the current value:\n\n        %s\n" (include "common.utils.secret.getvalue" .) -}}
            {{- end -}}
            {{- printf "\n    '%s' must not be empty, please add '--set %s%s=$%s' to the command.%s" .valueKey $subchart .valueKey $varname $getCurrentValue -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/templates/validations/_validations.tpl
    - content: |
        # Copyright Broadcom, Inc. All Rights Reserved.
        # SPDX-License-Identifier: APACHE-2.0

        ## bitnami/common
        ## It is required by CI/CD tools and processes.
        ## @skip exampleValue
        ##
        exampleValue: common-chart
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/common/values.yaml
    - content: >
        dependencies:

        - name: common
          repository: oci://registry-1.docker.io/bitnamicharts
          version: 2.28.0
        digest:
        sha256:5b30f0fa07bb89b01c55fd6258c8ce22a611b13623d4ad83e8fdd1d4490adc74

        generated: "2024-12-10T17:35:29.537478+01:00"
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/Chart.lock
    - content: >
        annotations:
          category: Infrastructure
          images: |
            - name: os-shell
              image: docker.io/bitnami/os-shell:12-debian-12-r33
            - name: zookeeper
              image: docker.io/bitnami/zookeeper:3.9.3-debian-12-r2
          licenses: Apache-2.0
        apiVersion: v2

        appVersion: 3.9.3

        dependencies:

        - name: common
          repository: oci://registry-1.docker.io/bitnamicharts
          tags:
          - bitnami-common
          version: 2.x.x
        description: Apache ZooKeeper provides a reliable, centralized register
        of configuration
          data and services for distributed applications.
        home: https://bitnami.com

        icon:
        https://bitnami.com/assets/stacks/zookeeper/img/zookeeper-stack-220x234.png

        keywords:

        - zookeeper

        maintainers:

        - name: Broadcom, Inc. All Rights Reserved.
          url: https://github.com/bitnami/charts
        name: zookeeper

        sources:

        - https://github.com/bitnami/charts/tree/main/bitnami/zookeeper

        version: 13.7.1
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/Chart.yaml
    - content: >-
        <!--- app-name: Apache ZooKeeper -->


        # Bitnami package for Apache ZooKeeper


        Apache ZooKeeper provides a reliable, centralized register of
        configuration data and services for distributed applications.


        [Overview of Apache ZooKeeper](https://zookeeper.apache.org)


        Trademarks: This software listing is packaged by Bitnami. The respective
        trademarks mentioned in the offering are owned by the respective
        companies, and use of them does not imply any affiliation or
        endorsement.


        ## TL;DR


        ```console

        helm install my-release
        oci://registry-1.docker.io/bitnamicharts/zookeeper

        ```


        Looking to use Apache ZooKeeper in production? Try [VMware Tanzu
        Application Catalog](https://bitnami.com/enterprise), the commercial
        edition of the Bitnami catalog.


        ## Introduction


        This chart bootstraps a
        [ZooKeeper](https://github.com/bitnami/containers/tree/main/bitnami/zookeeper)
        deployment on a [Kubernetes](https://kubernetes.io) cluster using the
        [Helm](https://helm.sh) package manager.


        Bitnami charts can be used with [Kubeapps](https://kubeapps.dev/) for
        deployment and management of Helm Charts in clusters.


        ## Prerequisites


        - Kubernetes 1.23+

        - Helm 3.8.0+

        - PV provisioner support in the underlying infrastructure


        ## Installing the Chart


        To install the chart with the release name `my-release`:


        ```console

        helm install my-release oci://REGISTRY_NAME/REPOSITORY_NAME/zookeeper

        ```


        > Note: You need to substitute the placeholders `REGISTRY_NAME` and
        `REPOSITORY_NAME` with a reference to your Helm chart registry and
        repository. For example, in the case of Bitnami, you need to use
        `REGISTRY_NAME=registry-1.docker.io` and
        `REPOSITORY_NAME=bitnamicharts`.


        These commands deploy ZooKeeper on the Kubernetes cluster in the default
        configuration. The [Parameters](#parameters) section lists the
        parameters that can be configured during installation.


        > **Tip**: List all releases using `helm list`


        ## Configuration and installation details


        ### Resource requests and limits


        Bitnami charts allow setting resource requests and limits for all
        containers inside the chart deployment. These are inside the `resources`
        value (check parameter table). Setting requests is essential for
        production workloads and these should be adapted to your specific use
        case.


        To make this process easier, the chart contains the `resourcesPreset`
        values, which automatically sets the `resources` section according to
        different presets. Check these presets in [the bitnami/common
        chart](https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15).
        However, in production workloads using `resourcePreset` is discouraged
        as it may not fully adapt to your specific needs. Find more information
        on container resource management in the [official Kubernetes
        documentation](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/).


        ### Update credentials


        Bitnami charts configure credentials at first boot. Any further change
        in the secrets or credentials require manual intervention. Follow these
        instructions:


        - Update the user password following [the upstream
        documentation](https://zookeeper.apache.org/documentation.html)

        - Update the password secret with the new values (replace the
        SECRET_NAME, CLIENT_PASSWORD and SERVER_PASSWORD placeholders)


        ```shell

        kubectl create secret generic SECRET_NAME
        --from-literal=client-password=CLIENT_PASSWORD
        --from-literal=server-password=SERVER_PASSWORD --dry-run -o yaml |
        kubectl apply -f -

        ```


        ### Prometheus metrics


        This chart can be integrated with Prometheus by setting
        `metrics.enabled` to `true`. This will expose Zookeeper native
        Prometheus endpoint and a `metrics` service configurable under the
        `metrics.service` section. It will have the necessary annotations to be
        automatically scraped by Prometheus.


        #### Prometheus requirements


        It is necessary to have a working installation of Prometheus or
        Prometheus Operator for the integration to work. Install the [Bitnami
        Prometheus helm
        chart](https://github.com/bitnami/charts/tree/main/bitnami/prometheus)
        or the [Bitnami Kube Prometheus helm
        chart](https://github.com/bitnami/charts/tree/main/bitnami/kube-prometheus)
        to easily have a working Prometheus in your cluster.


        #### Integration with Prometheus Operator


        The chart can deploy `ServiceMonitor` objects for integration with
        Prometheus Operator installations. To do so, set the value
        `metrics.serviceMonitor.enabled=true`. Ensure that the Prometheus
        Operator `CustomResourceDefinitions` are installed in the cluster or it
        will fail with the following error:


        ```text

        no matches for kind "ServiceMonitor" in version
        "monitoring.coreos.com/v1"

        ```


        Install the [Bitnami Kube Prometheus helm
        chart](https://github.com/bitnami/charts/tree/main/bitnami/kube-prometheus)
        for having the necessary CRDs and the Prometheus Operator.


        ### [Rolling vs Immutable
        tags](https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-understand-rolling-tags-containers-index.html)


        It is strongly recommended to use immutable tags in a production
        environment. This ensures your deployment does not change automatically
        if the same tag is updated with a different image.


        Bitnami will release a new chart updating its containers if a new
        version of the main container, significant changes, or critical
        vulnerabilities exist.


        ### Configure log level


        You can configure the ZooKeeper log level using the `ZOO_LOG_LEVEL`
        environment variable or the parameter `logLevel`. By default, it is set
        to `ERROR` because each use of the liveness probe and the readiness
        probe produces an `INFO` message on connection and a `WARN` message on
        disconnection, generating a high volume of noise in your logs.


        In order to remove that log noise so levels can be set to 'INFO', two
        changes must be made.


        First, ensure that you are not getting metrics via the deprecated
        pattern of polling 'mntr' on the ZooKeeper client port. The preferred
        method of polling for Apache ZooKeeper metrics is the ZooKeeper metrics
        server. This is supported in this chart when setting `metrics.enabled`
        to `true`.


        Second, to avoid the connection/disconnection messages from the probes,
        you can set custom values for these checks which direct them to the
        ZooKeeper Admin Server instead of the client port. By default, an Admin
        Server will be started that listens on `localhost` at port `8080`. The
        following is an example of this use of the Admin Server for probes:


        ```yaml

        livenessProbe:
          enabled: false
        readinessProbe:
          enabled: false
        customLivenessProbe:
          exec:
            command: ['/bin/bash', '-c', 'curl -s -m 2 http://localhost:8080/commands/ruok | grep ruok']
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        customReadinessProbe:
          exec:
            command: ['/bin/bash', '-c', 'curl -s -m 2 http://localhost:8080/commands/ruok | grep error | grep null']
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        ```


        You can also set the log4j logging level and what log appenders are
        turned on, by using `ZOO_LOG4J_PROP` set inside of conf/log4j.properties
        as zookeeper.root.logger by default to


        ```console

        zookeeper.root.logger=INFO, CONSOLE

        ```


        the available appender is


        - CONSOLE

        - ROLLINGFILE

        - RFAAUDIT

        - TRACEFILE


        ### Backup and restore


        To back up and restore Helm chart deployments on Kubernetes, you need to
        back up the persistent volumes from the source deployment and attach
        them to a new deployment using [Velero](https://velero.io/), a
        Kubernetes backup/restore tool. Find the instructions for using Velero
        in [this
        guide](https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-backup-restore-deployments-velero-index.html).


        ## Persistence


        The [Bitnami
        ZooKeeper](https://github.com/bitnami/containers/tree/main/bitnami/zookeeper)
        image stores the ZooKeeper data and configurations at the
        `/bitnami/zookeeper` path of the container.


        Persistent Volume Claims are used to keep the data across deployments.
        This is known to work in GCE, AWS, and minikube. See the
        [Parameters](#parameters) section to configure the PVC or to disable
        persistence.


        If you encounter errors when working with persistent volumes, refer to
        our [troubleshooting guide for persistent
        volumes](https://docs.bitnami.com/kubernetes/faq/troubleshooting/troubleshooting-persistence-volumes/).


        ### Adjust permissions of persistent volume mountpoint


        As the image run as non-root by default, it is necessary to adjust the
        ownership of the persistent volume so that the container can write data
        into it.


        By default, the chart is configured to use Kubernetes Security Context
        to automatically change the ownership of the volume. However, this
        feature does not work in all Kubernetes distributions.

        As an alternative, this chart supports using an initContainer to change
        the ownership of the volume before mounting it in the final destination.


        You can enable this initContainer by setting `volumePermissions.enabled`
        to `true`.


        ### Configure the data log directory


        You can use a dedicated device for logs (instead of using the data
        directory) to help avoiding competition between logging and snaphots. To
        do so, set the `dataLogDir` parameter with the path to be used for
        writing transaction logs. Alternatively, set this parameter with an
        empty string and it will result in the log being written to the data
        directory (Zookeeper's default behavior).


        When using a dedicated device for logs, you can use a PVC to persist the
        logs. To do so, set `persistence.enabled` to `true`. See the
        [Persistence Parameters](#persistence-parameters) section for more
        information.


        ### Set pod affinity


        This chart allows you to set custom pod affinity using the `affinity`
        parameter. Find more information about pod affinity in the [Kubernetes
        documentation](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity).


        As an alternative, you can use any of the preset configurations for pod
        affinity, pod anti-affinity, and node affinity available at the
        [bitnami/common](https://github.com/bitnami/charts/tree/main/bitnami/common#affinities)
        chart. To do so, set the `podAffinityPreset`, `podAntiAffinityPreset`,
        or `nodeAffinityPreset` parameters.


        ## Parameters


        ### Global parameters


        | Name                                                  |
        Description                                                                                                                                                                                                                                                                                                                                                        
        | Value   |

        | ----------------------------------------------------- |
        -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ------- |

        | `global.imageRegistry`                                | Global Docker
        image
        registry                                                                                                                                                                                                                                                                                                                                       
        | `""`    |

        | `global.imagePullSecrets`                             | Global Docker
        registry secret names as an
        array                                                                                                                                                                                                                                                                                                                    
        | `[]`    |

        | `global.defaultStorageClass`                          | Global default
        StorageClass for Persistent
        Volume(s)                                                                                                                                                                                                                                                                                                               
        | `""`    |

        | `global.storageClass`                                 | DEPRECATED:
        use global.defaultStorageClass
        instead                                                                                                                                                                                                                                                                                                                 
        | `""`    |

        | `global.security.allowInsecureImages`                 | Allows
        skipping image
        verification                                                                                                                                                                                                                                                                                                                                 
        | `false` |

        | `global.compatibility.openshift.adaptSecurityContext` | Adapt the
        securityContext sections of the deployment to make them compatible with
        Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup
        and let the platform use their allowed default IDs. Possible values:
        auto (apply if the detected running cluster is Openshift), force
        (perform the adaptation always), disabled (do not perform adaptation) |
        `auto`  |


        ### Common parameters


        | Name                     |
        Description                                                                                 
        | Value           |

        | ------------------------ |
        --------------------------------------------------------------------------------------------
        | --------------- |

        | `kubeVersion`            | Override Kubernetes
        version                                                                 
        | `""`            |

        | `nameOverride`           | String to partially override
        common.names.fullname template (will maintain the release name) |
        `""`            |

        | `fullnameOverride`       | String to fully override
        common.names.fullname template                                      |
        `""`            |

        | `clusterDomain`          | Kubernetes Cluster
        Domain                                                                   
        | `cluster.local` |

        | `extraDeploy`            | Extra objects to deploy (evaluated as a
        template)                                            | `[]`            |

        | `commonLabels`           | Add labels to all the deployed
        resources                                                     |
        `{}`            |

        | `commonAnnotations`      | Add annotations to all the deployed
        resources                                                |
        `{}`            |

        | `namespaceOverride`      | Override namespace for ZooKeeper
        resources                                                   |
        `""`            |

        | `diagnosticMode.enabled` | Enable diagnostic mode (all probes will be
        disabled and the command will be overridden)      | `false`         |

        | `diagnosticMode.command` | Command to override all containers in the
        statefulset                                        | `["sleep"]`     |

        | `diagnosticMode.args`    | Args to override all containers in the
        statefulset                                           | `["infinity"]` 
        |


        ### ZooKeeper chart parameters


        | Name                          |
        Description                                                                                                               
        | Value                       |

        | ----------------------------- |
        --------------------------------------------------------------------------------------------------------------------------
        | --------------------------- |

        | `image.registry`              | ZooKeeper image
        registry                                                                                                  
        | `REGISTRY_NAME`             |

        | `image.repository`            | ZooKeeper image
        repository                                                                                                
        | `REPOSITORY_NAME/zookeeper` |

        | `image.digest`                | ZooKeeper image digest in the way
        sha256:aa.... Please note this parameter, if set, will override the
        tag                  | `""`                        |

        | `image.pullPolicy`            | ZooKeeper image pull
        policy                                                                                               
        | `IfNotPresent`              |

        | `image.pullSecrets`           | Specify docker-registry secret names
        as an
        array                                                                          
        | `[]`                        |

        | `image.debug`                 | Specify if debug values should be
        set                                                                                     
        | `false`                     |

        | `auth.client.enabled`         | Enable ZooKeeper client-server
        authentication. It uses
        SASL/Digest-MD5                                                     |
        `false`                     |

        | `auth.client.clientUser`      | User that will use ZooKeeper clients
        to
        auth                                                                              
        | `""`                        |

        | `auth.client.clientPassword`  | Password that will use ZooKeeper
        clients to
        auth                                                                          
        | `""`                        |

        | `auth.client.serverUsers`     | Comma, semicolon or whitespace
        separated list of user to be
        created                                                        |
        `""`                        |

        | `auth.client.serverPasswords` | Comma, semicolon or whitespace
        separated list of passwords to assign to users when
        created                                 | `""`                        |

        | `auth.client.existingSecret`  | Use existing secret (ignores previous
        passwords)                                                                          
        | `""`                        |

        | `auth.quorum.enabled`         | Enable ZooKeeper server-server
        authentication. It uses
        SASL/Digest-MD5                                                     |
        `false`                     |

        | `auth.quorum.learnerUser`     | User that the ZooKeeper quorumLearner
        will use to authenticate to
        quorumServers.                                           |
        `""`                        |

        | `auth.quorum.learnerPassword` | Password that the ZooKeeper
        quorumLearner will use to authenticate to
        quorumServers.                                       |
        `""`                        |

        | `auth.quorum.serverUsers`     | Comma, semicolon or whitespace
        separated list of users for the
        quorumServers.                                              |
        `""`                        |

        | `auth.quorum.serverPasswords` | Comma, semicolon or whitespace
        separated list of passwords to assign to users when
        created                                 | `""`                        |

        | `auth.quorum.existingSecret`  | Use existing secret (ignores previous
        passwords)                                                                          
        | `""`                        |

        | `tickTime`                    | Basic time unit (in milliseconds) used
        by ZooKeeper for
        heartbeats                                                         |
        `2000`                      |

        | `initLimit`                   | ZooKeeper uses to limit the length of
        time the ZooKeeper servers in quorum have to connect to a
        leader                     | `10`                        |

        | `syncLimit`                   | How far out of date a server can be
        from a
        leader                                                                         
        | `5`                         |

        | `preAllocSize`                | Block size for transaction log
        file                                                                                       
        | `65536`                     |

        | `snapCount`                   | The number of transactions recorded in
        the transaction log before a snapshot can be taken (and the transaction
        log rolled) | `100000`                    |

        | `maxClientCnxns`              | Limits the number of concurrent
        connections that a single client may make to a single member of the
        ZooKeeper ensemble     | `60`                        |

        | `maxSessionTimeout`           | Maximum session timeout (in
        milliseconds) that the server will allow the client to
        negotiate                               | `40000`                     |

        | `heapSize`                    | Size (in MB) for the Java Heap options
        (Xmx and
        Xms)                                                                      
        | `1024`                      |

        | `fourlwCommandsWhitelist`     | A list of comma separated Four Letter
        Words commands that can be
        executed                                                  | `srvr, mntr,
        ruok`          |

        | `minServerId`                 | Minimal SERVER_ID value, nodes
        increment their IDs
        respectively                                                           
        | `1`                         |

        | `listenOnAllIPs`              | Allow ZooKeeper to listen for
        connections from its peers on all available IP
        addresses                                     |
        `false`                     |

        | `zooServers`                  | ZooKeeper space separated servers
        list. Leave empty to use the default ZooKeeper server
        names.                             | `""`                        |

        | `autopurge.snapRetainCount`   | The most recent snapshots amount (and
        corresponding transaction logs) to
        retain                                            |
        `10`                        |

        | `autopurge.purgeInterval`     | The time interval (in hours) for which
        the purge task has to be
        triggered                                                  |
        `1`                         |

        | `logLevel`                    | Log level for the ZooKeeper server.
        ERROR by
        default                                                                      
        | `ERROR`                     |

        | `jvmFlags`                    | Default JVM flags for the ZooKeeper
        process                                                                               
        | `""`                        |

        | `dataLogDir`                  | Dedicated data log
        directory                                                                                              
        | `""`                        |

        | `configuration`               | Configure ZooKeeper with a custom
        zoo.cfg
        file                                                                            
        | `""`                        |

        | `existingConfigmap`           | The name of an existing ConfigMap with
        your custom configuration for
        ZooKeeper                                             |
        `""`                        |

        | `extraEnvVars`                | Array with extra environment variables
        to add to ZooKeeper
        nodes                                                           |
        `[]`                        |

        | `extraEnvVarsCM`              | Name of existing ConfigMap containing
        extra env vars for ZooKeeper
        nodes                                                   |
        `""`                        |

        | `extraEnvVarsSecret`          | Name of existing Secret containing
        extra env vars for ZooKeeper
        nodes                                                      |
        `""`                        |

        | `command`                     | Override default container command
        (useful when using custom
        images)                                                       |
        `["/scripts/setup.sh"]`     |

        | `args`                        | Override default container args
        (useful when using custom
        images)                                                          |
        `[]`                        |


        ### Statefulset parameters


        | Name                                                |
        Description                                                                                                                                                                                                      
        | Value            |

        | --------------------------------------------------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ---------------- |

        | `replicaCount`                                      | Number of
        ZooKeeper
        nodes                                                                                                                                                                                        
        | `1`              |

        | `revisionHistoryLimit`                              | The number of
        old history to retain to allow
        rollback                                                                                                                                                            
        | `10`             |

        | `containerPorts.client`                             | ZooKeeper client
        container
        port                                                                                                                                                                                  
        | `2181`           |

        | `containerPorts.tls`                                | ZooKeeper TLS
        container
        port                                                                                                                                                                                     
        | `3181`           |

        | `containerPorts.follower`                           | ZooKeeper
        follower container
        port                                                                                                                                                                                
        | `2888`           |

        | `containerPorts.election`                           | ZooKeeper
        election container
        port                                                                                                                                                                                
        | `3888`           |

        | `containerPorts.adminServer`                        | ZooKeeper admin
        server container
        port                                                                                                                                                                            
        | `8080`           |

        | `containerPorts.metrics`                            | ZooKeeper
        Prometheus Exporter container
        port                                                                                                                                                                     
        | `9141`           |

        | `livenessProbe.enabled`                             | Enable
        livenessProbe on ZooKeeper
        containers                                                                                                                                                                     
        | `true`           |

        | `livenessProbe.initialDelaySeconds`                 | Initial delay
        seconds for
        livenessProbe                                                                                                                                                                          
        | `30`             |

        | `livenessProbe.periodSeconds`                       | Period seconds
        for
        livenessProbe                                                                                                                                                                                 
        | `10`             |

        | `livenessProbe.timeoutSeconds`                      | Timeout seconds
        for
        livenessProbe                                                                                                                                                                                
        | `5`              |

        | `livenessProbe.failureThreshold`                    | Failure
        threshold for
        livenessProbe                                                                                                                                                                              
        | `6`              |

        | `livenessProbe.successThreshold`                    | Success
        threshold for
        livenessProbe                                                                                                                                                                              
        | `1`              |

        | `livenessProbe.probeCommandTimeout`                 | Probe command
        timeout for
        livenessProbe                                                                                                                                                                          
        | `3`              |

        | `readinessProbe.enabled`                            | Enable
        readinessProbe on ZooKeeper
        containers                                                                                                                                                                    
        | `true`           |

        | `readinessProbe.initialDelaySeconds`                | Initial delay
        seconds for
        readinessProbe                                                                                                                                                                         
        | `5`              |

        | `readinessProbe.periodSeconds`                      | Period seconds
        for
        readinessProbe                                                                                                                                                                                
        | `10`             |

        | `readinessProbe.timeoutSeconds`                     | Timeout seconds
        for
        readinessProbe                                                                                                                                                                               
        | `5`              |

        | `readinessProbe.failureThreshold`                   | Failure
        threshold for
        readinessProbe                                                                                                                                                                             
        | `6`              |

        | `readinessProbe.successThreshold`                   | Success
        threshold for
        readinessProbe                                                                                                                                                                             
        | `1`              |

        | `readinessProbe.probeCommandTimeout`                | Probe command
        timeout for
        readinessProbe                                                                                                                                                                         
        | `2`              |

        | `startupProbe.enabled`                              | Enable
        startupProbe on ZooKeeper
        containers                                                                                                                                                                      
        | `false`          |

        | `startupProbe.initialDelaySeconds`                  | Initial delay
        seconds for
        startupProbe                                                                                                                                                                           
        | `30`             |

        | `startupProbe.periodSeconds`                        | Period seconds
        for
        startupProbe                                                                                                                                                                                  
        | `10`             |

        | `startupProbe.timeoutSeconds`                       | Timeout seconds
        for
        startupProbe                                                                                                                                                                                 
        | `1`              |

        | `startupProbe.failureThreshold`                     | Failure
        threshold for
        startupProbe                                                                                                                                                                               
        | `15`             |

        | `startupProbe.successThreshold`                     | Success
        threshold for
        startupProbe                                                                                                                                                                               
        | `1`              |

        | `customLivenessProbe`                               | Custom
        livenessProbe that overrides the default
        one                                                                                                                                                              
        | `{}`             |

        | `customReadinessProbe`                              | Custom
        readinessProbe that overrides the default
        one                                                                                                                                                             
        | `{}`             |

        | `customStartupProbe`                                | Custom
        startupProbe that overrides the default
        one                                                                                                                                                               
        | `{}`             |

        | `lifecycleHooks`                                    | for the
        ZooKeeper container(s) to automate configuration before or after
        startup                                                                                                                                 
        | `{}`             |

        | `resourcesPreset`                                   | Set container
        resources according to one common preset (allowed values: none, nano,
        micro, small, medium, large, xlarge, 2xlarge). This is ignored if
        resources is set (resources is recommended for production). |
        `micro`          |

        | `resources`                                         | Set container
        requests and limits for different resources like CPU or memory
        (essential for production
        workloads)                                                                                                
        | `{}`             |

        | `podSecurityContext.enabled`                        | Enabled
        ZooKeeper pods' Security
        Context                                                                                                                                                                         
        | `true`           |

        | `podSecurityContext.fsGroupChangePolicy`            | Set filesystem
        group change
        policy                                                                                                                                                                               
        | `Always`         |

        | `podSecurityContext.sysctls`                        | Set kernel
        settings using the sysctl
        interface                                                                                                                                                                   
        | `[]`             |

        | `podSecurityContext.supplementalGroups`             | Set filesystem
        extra
        groups                                                                                                                                                                                      
        | `[]`             |

        | `podSecurityContext.fsGroup`                        | Set ZooKeeper
        pod's Security Context
        fsGroup                                                                                                                                                                     
        | `1001`           |

        | `containerSecurityContext.enabled`                  | Enabled
        containers' Security
        Context                                                                                                                                                                             
        | `true`           |

        | `containerSecurityContext.seLinuxOptions`           | Set SELinux
        options in
        container                                                                                                                                                                                 
        | `{}`             |

        | `containerSecurityContext.runAsUser`                | Set containers'
        Security Context
        runAsUser                                                                                                                                                                       
        | `1001`           |

        | `containerSecurityContext.runAsGroup`               | Set containers'
        Security Context
        runAsGroup                                                                                                                                                                      
        | `1001`           |

        | `containerSecurityContext.runAsNonRoot`             | Set container's
        Security Context
        runAsNonRoot                                                                                                                                                                    
        | `true`           |

        | `containerSecurityContext.privileged`               | Set container's
        Security Context
        privileged                                                                                                                                                                      
        | `false`          |

        | `containerSecurityContext.readOnlyRootFilesystem`   | Set container's
        Security Context
        readOnlyRootFilesystem                                                                                                                                                          
        | `true`           |

        | `containerSecurityContext.allowPrivilegeEscalation` | Set container's
        Security Context
        allowPrivilegeEscalation                                                                                                                                                        
        | `false`          |

        | `containerSecurityContext.capabilities.drop`        | List of
        capabilities to be
        dropped                                                                                                                                                                               
        | `["ALL"]`        |

        | `containerSecurityContext.seccompProfile.type`      | Set container's
        Security Context seccomp
        profile                                                                                                                                                                 
        | `RuntimeDefault` |

        | `automountServiceAccountToken`                      | Mount Service
        Account token in
        pod                                                                                                                                                                               
        | `false`          |

        | `hostAliases`                                       | ZooKeeper pods
        host
        aliases                                                                                                                                                                                      
        | `[]`             |

        | `podLabels`                                         | Extra labels for
        ZooKeeper
        pods                                                                                                                                                                                  
        | `{}`             |

        | `podAnnotations`                                    | Annotations for
        ZooKeeper
        pods                                                                                                                                                                                   
        | `{}`             |

        | `podAffinityPreset`                                 | Pod affinity
        preset. Ignored if `affinity` is set. Allowed values: `soft` or
        `hard`                                                                                                                              
        | `""`             |

        | `podAntiAffinityPreset`                             | Pod
        anti-affinity preset. Ignored if `affinity` is set. Allowed values:
        `soft` or
        `hard`                                                                                                                         
        | `soft`           |

        | `nodeAffinityPreset.type`                           | Node affinity
        preset type. Ignored if `affinity` is set. Allowed values: `soft` or
        `hard`                                                                                                                        
        | `""`             |

        | `nodeAffinityPreset.key`                            | Node label key
        to match Ignored if `affinity` is
        set.                                                                                                                                                            
        | `""`             |

        | `nodeAffinityPreset.values`                         | Node label
        values to match. Ignored if `affinity` is
        set.                                                                                                                                                        
        | `[]`             |

        | `affinity`                                          | Affinity for pod
        assignment                                                                                                                                                                                      
        | `{}`             |

        | `nodeSelector`                                      | Node labels for
        pod
        assignment                                                                                                                                                                                   
        | `{}`             |

        | `tolerations`                                       | Tolerations for
        pod
        assignment                                                                                                                                                                                   
        | `[]`             |

        | `topologySpreadConstraints`                         | Topology Spread
        Constraints for pod assignment spread across your cluster among
        failure-domains. Evaluated as a
        template                                                                                         
        | `[]`             |

        | `podManagementPolicy`                               | StatefulSet
        controller supports relax its ordering guarantees while preserving its
        uniqueness and identity guarantees. There are two valid pod management
        policies: `OrderedReady` and `Parallel`                 |
        `Parallel`       |

        | `priorityClassName`                                 | Name of the
        existing priority class to be used by ZooKeeper pods, priority class
        needs to be created
        beforehand                                                                                                  
        | `""`             |

        | `schedulerName`                                     | Kubernetes pod
        scheduler
        registry                                                                                                                                                                                
        | `""`             |

        | `updateStrategy.type`                               | ZooKeeper
        statefulset strategy
        type                                                                                                                                                                              
        | `RollingUpdate`  |

        | `updateStrategy.rollingUpdate`                      | ZooKeeper
        statefulset rolling update configuration
        parameters                                                                                                                                                    
        | `{}`             |

        | `extraVolumes`                                      | Optionally
        specify extra list of additional volumes for the ZooKeeper
        pod(s)                                                                                                                                     
        | `[]`             |

        | `extraVolumeMounts`                                 | Optionally
        specify extra list of additional volumeMounts for the ZooKeeper
        container(s)                                                                                                                          
        | `[]`             |

        | `sidecars`                                          | Add additional
        sidecar containers to the ZooKeeper
        pod(s)                                                                                                                                                        
        | `[]`             |

        | `initContainers`                                    | Add additional
        init containers to the ZooKeeper
        pod(s)                                                                                                                                                           
        | `[]`             |

        | `pdb.create`                                        | Deploy a pdb
        object for the ZooKeeper
        pod                                                                                                                                                                        
        | `true`           |

        | `pdb.minAvailable`                                  | Minimum
        available ZooKeeper
        replicas                                                                                                                                                                             
        | `""`             |

        | `pdb.maxUnavailable`                                | Maximum
        unavailable ZooKeeper replicas. Defaults to `1` if both
        `pdb.minAvailable` and `pdb.maxUnavailable` are
        empty.                                                                                           
        | `""`             |

        | `enableServiceLinks`                                | Whether
        information about services should be injected into pod's environment
        variable                                                                                                                            
        | `true`           |

        | `dnsPolicy`                                         | Specifies the
        DNS policy for the zookeeper
        pods                                                                                                                                                                  
        | `""`             |

        | `dnsConfig`                                         | allows users
        more control on the DNS settings for a Pod. Required if `dnsPolicy` is
        set to
        `None`                                                                                                                
        | `{}`             |


        ### Traffic Exposure parameters


        | Name                                        |
        Description                                                                            
        | Value       |

        | ------------------------------------------- |
        ---------------------------------------------------------------------------------------
        | ----------- |

        | `service.type`                              | Kubernetes Service
        type                                                                 |
        `ClusterIP` |

        | `service.ports.client`                      | ZooKeeper client service
        port                                                           |
        `2181`      |

        | `service.ports.tls`                         | ZooKeeper TLS service
        port                                                              |
        `3181`      |

        | `service.ports.follower`                    | ZooKeeper follower
        service port                                                         |
        `2888`      |

        | `service.ports.election`                    | ZooKeeper election
        service port                                                         |
        `3888`      |

        | `service.nodePorts.client`                  | Node port for
        clients                                                                  
        | `""`        |

        | `service.nodePorts.tls`                     | Node port for
        TLS                                                                      
        | `""`        |

        | `service.disableBaseClientPort`             | Remove client port from
        service definitions.                                            |
        `false`     |

        | `service.sessionAffinity`                   | Control where client
        requests go, to the same pod or round-robin                        |
        `None`      |

        | `service.sessionAffinityConfig`             | Additional settings for
        the sessionAffinity                                             |
        `{}`        |

        | `service.clusterIP`                         | ZooKeeper service
        Cluster IP                                                            |
        `""`        |

        | `service.loadBalancerIP`                    | ZooKeeper service Load
        Balancer IP                                                      |
        `""`        |

        | `service.loadBalancerSourceRanges`          | ZooKeeper service Load
        Balancer sources                                                 |
        `[]`        |

        | `service.externalTrafficPolicy`             | ZooKeeper service
        external traffic policy                                               |
        `Cluster`   |

        | `service.annotations`                       | Additional custom
        annotations for ZooKeeper service                                     |
        `{}`        |

        | `service.extraPorts`                        | Extra ports to expose in
        the ZooKeeper service (normally used with the `sidecar` value) |
        `[]`        |

        | `service.headless.annotations`              | Annotations for the
        Headless Service                                                    |
        `{}`        |

        | `service.headless.publishNotReadyAddresses` | If the ZooKeeper
        headless service should publish DNS records for not ready pods         |
        `true`      |

        | `service.headless.servicenameOverride`      | String to partially
        override headless service name                                      |
        `""`        |

        | `networkPolicy.enabled`                     | Specifies whether a
        NetworkPolicy should be created                                     |
        `true`      |

        | `networkPolicy.allowExternal`               | Don't require client
        label for connections                                              |
        `true`      |

        | `networkPolicy.allowExternalEgress`         | Allow the pod to access
        any range of port and all destinations.                         |
        `true`      |

        | `networkPolicy.extraIngress`                | Add extra ingress rules
        to the NetworkPolicy                                            |
        `[]`        |

        | `networkPolicy.extraEgress`                 | Add extra ingress rules
        to the NetworkPolicy                                            |
        `[]`        |

        | `networkPolicy.ingressNSMatchLabels`        | Labels to match to allow
        traffic from other namespaces                                  |
        `{}`        |

        | `networkPolicy.ingressNSPodMatchLabels`     | Pod labels to match to
        allow traffic from other namespaces                              |
        `{}`        |


        ### Other Parameters


        | Name                                          |
        Description                                                            |
        Value   |

        | --------------------------------------------- |
        ---------------------------------------------------------------------- |
        ------- |

        | `serviceAccount.create`                       | Enable creation of
        ServiceAccount for ZooKeeper pod                    | `true`  |

        | `serviceAccount.name`                         | The name of the
        ServiceAccount to use.                                 | `""`    |

        | `serviceAccount.automountServiceAccountToken` | Allows auto mount of
        ServiceAccountToken on the serviceAccount created | `false` |

        | `serviceAccount.annotations`                  | Additional custom
        annotations for the ServiceAccount                   | `{}`    |


        ### Persistence parameters


        | Name                                   |
        Description                                                                   
        | Value               |

        | -------------------------------------- |
        ------------------------------------------------------------------------------
        | ------------------- |

        | `persistence.enabled`                  | Enable ZooKeeper data
        persistence using PVC. If false, use emptyDir            |
        `true`              |

        | `persistence.existingClaim`            | Name of an existing PVC to
        use (only when deploying a single replica)          |
        `""`                |

        | `persistence.storageClass`             | PVC Storage Class for
        ZooKeeper data volume                                    |
        `""`                |

        | `persistence.accessModes`              | PVC Access
        modes                                                               |
        `["ReadWriteOnce"]` |

        | `persistence.size`                     | PVC Storage Request for
        ZooKeeper data volume                                  |
        `8Gi`               |

        | `persistence.annotations`              | Annotations for the
        PVC                                                        |
        `{}`                |

        | `persistence.labels`                   | Labels for the
        PVC                                                             |
        `{}`                |

        | `persistence.selector`                 | Selector to match an existing
        Persistent Volume for ZooKeeper's data PVC       | `{}`                |

        | `persistence.dataLogDir.size`          | PVC Storage Request for
        ZooKeeper's dedicated data log directory               |
        `8Gi`               |

        | `persistence.dataLogDir.existingClaim` | Provide an existing
        `PersistentVolumeClaim` for ZooKeeper's data log directory |
        `""`                |

        | `persistence.dataLogDir.selector`      | Selector to match an existing
        Persistent Volume for ZooKeeper's data log PVC   | `{}`                |


        ### Volume Permissions parameters


        | Name                                                        |
        Description                                                                                                                                                                                                                                          
        | Value                      |

        | ----------------------------------------------------------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | -------------------------- |

        | `volumePermissions.enabled`                                 | Enable
        init container that changes the owner and group of the persistent
        volume                                                                                                                                                                      
        | `false`                    |

        | `volumePermissions.image.registry`                          | Init
        container volume-permissions image
        registry                                                                                                                                                                                                     
        | `REGISTRY_NAME`            |

        | `volumePermissions.image.repository`                        | Init
        container volume-permissions image
        repository                                                                                                                                                                                                   
        | `REPOSITORY_NAME/os-shell` |

        | `volumePermissions.image.digest`                            | Init
        container volume-permissions image digest in the way sha256:aa....
        Please note this parameter, if set, will override the
        tag                                                                                                                    
        | `""`                       |

        | `volumePermissions.image.pullPolicy`                        | Init
        container volume-permissions image pull
        policy                                                                                                                                                                                                  
        | `IfNotPresent`             |

        | `volumePermissions.image.pullSecrets`                       | Init
        container volume-permissions image pull
        secrets                                                                                                                                                                                                 
        | `[]`                       |

        | `volumePermissions.resourcesPreset`                         | Set
        container resources according to one common preset (allowed values:
        none, nano, micro, small, medium, large, xlarge, 2xlarge). This is
        ignored if volumePermissions.resources is set
        (volumePermissions.resources is recommended for production). |
        `nano`                     |

        | `volumePermissions.resources`                               | Set
        container requests and limits for different resources like CPU or memory
        (essential for production
        workloads)                                                                                                                                    
        | `{}`                       |

        | `volumePermissions.containerSecurityContext.enabled`        | Enabled
        init container Security
        Context                                                                                                                                                                                                              
        | `true`                     |

        | `volumePermissions.containerSecurityContext.seLinuxOptions` | Set
        SELinux options in
        container                                                                                                                                                                                                                     
        | `{}`                       |

        | `volumePermissions.containerSecurityContext.runAsUser`      | User ID
        for the init
        container                                                                                                                                                                                                                       
        | `0`                        |


        ### Metrics parameters


        | Name                                       |
        Description                                                                          
        | Value       |

        | ------------------------------------------ |
        -------------------------------------------------------------------------------------
        | ----------- |

        | `metrics.enabled`                          | Enable Prometheus to
        access ZooKeeper metrics endpoint                                |
        `false`     |

        | `metrics.service.type`                     | ZooKeeper Prometheus
        Exporter service type                                            |
        `ClusterIP` |

        | `metrics.service.port`                     | ZooKeeper Prometheus
        Exporter service port                                            |
        `9141`      |

        | `metrics.service.annotations`              | Annotations for
        Prometheus to auto-discover the metrics endpoint                      |
        `{}`        |

        | `metrics.serviceMonitor.enabled`           | Create ServiceMonitor
        Resource for scraping metrics using Prometheus Operator         |
        `false`     |

        | `metrics.serviceMonitor.namespace`         | Namespace for the
        ServiceMonitor Resource (defaults to the Release Namespace)         |
        `""`        |

        | `metrics.serviceMonitor.interval`          | Interval at which metrics
        should be scraped.                                          |
        `""`        |

        | `metrics.serviceMonitor.scrapeTimeout`     | Timeout after which the
        scrape is ended                                               |
        `""`        |

        | `metrics.serviceMonitor.additionalLabels`  | Additional labels that
        can be used so ServiceMonitor will be discovered by Prometheus |
        `{}`        |

        | `metrics.serviceMonitor.selector`          | Prometheus instance
        selector labels                                                   |
        `{}`        |

        | `metrics.serviceMonitor.relabelings`       | RelabelConfigs to apply
        to samples before scraping                                    |
        `[]`        |

        | `metrics.serviceMonitor.metricRelabelings` | MetricRelabelConfigs to
        apply to samples before ingestion                             |
        `[]`        |

        | `metrics.serviceMonitor.honorLabels`       | Specify honorLabels
        parameter to add the scrape endpoint                              |
        `false`     |

        | `metrics.serviceMonitor.jobLabel`          | The name of the label on
        the target service to use as the job name in prometheus.     |
        `""`        |

        | `metrics.serviceMonitor.scheme`            | The explicit scheme for
        metrics scraping.                                             |
        `""`        |

        | `metrics.serviceMonitor.tlsConfig`         | TLS configuration used
        for scrape endpoints used by Prometheus                        |
        `{}`        |

        | `metrics.prometheusRule.enabled`           | Create a PrometheusRule
        for Prometheus Operator                                       |
        `false`     |

        | `metrics.prometheusRule.namespace`         | Namespace for the
        PrometheusRule Resource (defaults to the Release Namespace)         |
        `""`        |

        | `metrics.prometheusRule.additionalLabels`  | Additional labels that
        can be used so PrometheusRule will be discovered by Prometheus |
        `{}`        |

        | `metrics.prometheusRule.rules`             | PrometheusRule
        definitions                                                            |
        `[]`        |


        ### TLS/SSL parameters


        | Name                                      |
        Description                                                                                                                                                                                                              
        | Value                                                                
        |

        | ----------------------------------------- |
        -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        | ---------------------------------------------------------------------
        |

        | `tls.client.enabled`                      | Enable TLS for client
        connections                                                                                                                                                                                        
        | `false`                                                              
        |

        | `tls.client.auth`                         | SSL Client auth. Can be
        "none", "want" or
        "need".                                                                                                                                                                        
        | `none`                                                               
        |

        | `tls.client.autoGenerated`                | Generate automatically
        self-signed TLS certificates for ZooKeeper client
        communications                                                                                                                                  
        | `false`                                                              
        |

        | `tls.client.existingSecret`               | Name of the existing
        secret containing the TLS certificates for ZooKeeper client
        communications                                                                                                                          
        | `""`                                                                 
        |

        | `tls.client.existingSecretKeystoreKey`    | The secret key from the
        tls.client.existingSecret containing the
        Keystore.                                                                                                                                               
        | `""`                                                                 
        |

        | `tls.client.existingSecretTruststoreKey`  | The secret key from the
        tls.client.existingSecret containing the
        Truststore.                                                                                                                                             
        | `""`                                                                 
        |

        | `tls.client.keystorePath`                 | Location of the KeyStore
        file used for Client
        connections                                                                                                                                                                
        | `/opt/bitnami/zookeeper/config/certs/client/zookeeper.keystore.jks`  
        |

        | `tls.client.truststorePath`               | Location of the TrustStore
        file used for Client
        connections                                                                                                                                                              
        | `/opt/bitnami/zookeeper/config/certs/client/zookeeper.truststore.jks`
        |

        | `tls.client.passwordsSecretName`          | Existing secret containing
        Keystore and truststore
        passwords                                                                                                                                                             
        | `""`                                                                 
        |

        | `tls.client.passwordsSecretKeystoreKey`   | The secret key from the
        tls.client.passwordsSecretName containing the password for the
        Keystore.                                                                                                                         
        | `""`                                                                 
        |

        | `tls.client.passwordsSecretTruststoreKey` | The secret key from the
        tls.client.passwordsSecretName containing the password for the
        Truststore.                                                                                                                       
        | `""`                                                                 
        |

        | `tls.client.keystorePassword`             | Password to access
        KeyStore if
        needed                                                                                                                                                                                    
        | `""`                                                                 
        |

        | `tls.client.truststorePassword`           | Password to access
        TrustStore if
        needed                                                                                                                                                                                  
        | `""`                                                                 
        |

        | `tls.quorum.enabled`                      | Enable TLS for quorum
        protocol                                                                                                                                                                                           
        | `false`                                                              
        |

        | `tls.quorum.auth`                         | SSL Quorum Client auth.
        Can be "none", "want" or
        "need".                                                                                                                                                                 
        | `none`                                                               
        |

        | `tls.quorum.autoGenerated`                | Create self-signed TLS
        certificates. Currently only supports PEM
        certificates.                                                                                                                                           
        | `false`                                                              
        |

        | `tls.quorum.existingSecret`               | Name of the existing
        secret containing the TLS certificates for ZooKeeper quorum
        protocol                                                                                                                                
        | `""`                                                                 
        |

        | `tls.quorum.existingSecretKeystoreKey`    | The secret key from the
        tls.quorum.existingSecret containing the
        Keystore.                                                                                                                                               
        | `""`                                                                 
        |

        | `tls.quorum.existingSecretTruststoreKey`  | The secret key from the
        tls.quorum.existingSecret containing the
        Truststore.                                                                                                                                             
        | `""`                                                                 
        |

        | `tls.quorum.keystorePath`                 | Location of the KeyStore
        file used for Quorum
        protocol                                                                                                                                                                   
        | `/opt/bitnami/zookeeper/config/certs/quorum/zookeeper.keystore.jks`  
        |

        | `tls.quorum.truststorePath`               | Location of the TrustStore
        file used for Quorum
        protocol                                                                                                                                                                 
        | `/opt/bitnami/zookeeper/config/certs/quorum/zookeeper.truststore.jks`
        |

        | `tls.quorum.passwordsSecretName`          | Existing secret containing
        Keystore and truststore
        passwords                                                                                                                                                             
        | `""`                                                                 
        |

        | `tls.quorum.passwordsSecretKeystoreKey`   | The secret key from the
        tls.quorum.passwordsSecretName containing the password for the
        Keystore.                                                                                                                         
        | `""`                                                                 
        |

        | `tls.quorum.passwordsSecretTruststoreKey` | The secret key from the
        tls.quorum.passwordsSecretName containing the password for the
        Truststore.                                                                                                                       
        | `""`                                                                 
        |

        | `tls.quorum.keystorePassword`             | Password to access
        KeyStore if
        needed                                                                                                                                                                                    
        | `""`                                                                 
        |

        | `tls.quorum.truststorePassword`           | Password to access
        TrustStore if
        needed                                                                                                                                                                                  
        | `""`                                                                 
        |

        | `tls.resourcesPreset`                     | Set container resources
        according to one common preset (allowed values: none, nano, micro,
        small, medium, large, xlarge, 2xlarge). This is ignored if tls.resources
        is set (tls.resources is recommended for production). |
        `nano`                                                                |

        | `tls.resources`                           | Set container requests and
        limits for different resources like CPU or memory (essential for
        production
        workloads)                                                                                                        
        | `{}`                                                                 
        |


        Specify each parameter using the `--set key=value[,key=value]` argument
        to `helm install`. For example,


        ```console

        helm install my-release \
          --set auth.clientUser=newUser \
            oci://REGISTRY_NAME/REPOSITORY_NAME/zookeeper
        ```


        > Note: You need to substitute the placeholders `REGISTRY_NAME` and
        `REPOSITORY_NAME` with a reference to your Helm chart registry and
        repository. For example, in the case of Bitnami, you need to use
        `REGISTRY_NAME=registry-1.docker.io` and
        `REPOSITORY_NAME=bitnamicharts`.


        The above command sets the ZooKeeper user to `newUser`.


        > NOTE: Once this chart is deployed, it is not possible to change the
        application's access credentials, such as usernames or passwords, using
        Helm. To change these application credentials after deployment, delete
        any persistent volumes (PVs) used by the chart and re-deploy it, or use
        the application's built-in administrative tools if available.


        Alternatively, a YAML file that specifies the values for the parameters
        can be provided while installing the chart. For example,


        ```console

        helm install my-release -f values.yaml
        oci://REGISTRY_NAME/REPOSITORY_NAME/zookeeper

        ```


        > Note: You need to substitute the placeholders `REGISTRY_NAME` and
        `REPOSITORY_NAME` with a reference to your Helm chart registry and
        repository. For example, in the case of Bitnami, you need to use
        `REGISTRY_NAME=registry-1.docker.io` and
        `REPOSITORY_NAME=bitnamicharts`.

        > **Tip**: You can use the default
        [values.yaml](https://github.com/bitnami/charts/tree/main/bitnami/zookeeper/values.yaml)


        ## Troubleshooting


        Find more information about how to deal with common errors related to
        Bitnami's Helm charts in [this troubleshooting
        guide](https://docs.bitnami.com/general/how-to/troubleshoot-helm-chart-issues).


        ## Upgrading


        ### To 13.7.0


        This version introduces image verification for security purposes. To
        disable it, set `global.security.allowInsecureImages` to `true`. More
        details at [GitHub
        issue](https://github.com/bitnami/charts/issues/30850).


        ### To 13.0.0


        This major bump changes the following security defaults:


        - `runAsGroup` is changed from `0` to `1001`

        - `readOnlyRootFilesystem` is set to `true`

        - `resourcesPreset` is changed from `none` to the minimum size working
        in our test suites (NOTE: `resourcesPreset` is not meant for production
        usage, but `resources` adapted to your use case).

        - `global.compatibility.openshift.adaptSecurityContext` is changed from
        `disabled` to `auto`.


        This could potentially break any customization or init scripts used in
        your deployment. If this is the case, change the default values to the
        previous ones.


        ### To 12.0.0


        This new version of the chart includes the new ZooKeeper major version
        3.9.x. For more information, please refer to [Zookeeper 3.9.0 Release
        Notes](https://zookeeper.apache.org/doc/r3.9.0/releasenotes.html)


        ### To 11.0.0


        This major version removes `commonAnnotations` and `commonLabels` from
        `volumeClaimTemplates`. Now annotations and labels can be set in volume
        claims using `persistence.annotations` and `persistence.labels` values.
        If the previous deployment has already set `commonAnnotations` and/or
        `commonLabels` values, to ensure a clean upgrade from previous version
        without loosing data, please set `persistence.annotations` and/or
        `persistence.labels` values with the same content as the common values.


        ### To 10.0.0


        This new version of the chart adds support for server-server
        authentication.

        The chart previously supported client-server authentication, to avoid
        confusion, the previous parameters have been renamed from `auth.*` to
        `auth.client.*`.


        ### To 9.0.0


        This new version of the chart includes the new ZooKeeper major version
        3.8.0. Upgrade compatibility is not guaranteed.


        ### To 8.0.0


        This major release renames several values in this chart and adds missing
        features, in order to be inline with the rest of assets in the Bitnami
        charts repository.


        Affected values:


        - `allowAnonymousLogin` is deprecated.

        - `containerPort`, `tlsContainerPort`, `followerContainerPort` and
        `electionContainerPort` have been regrouped under the `containerPorts`
        map.

        - `service.port`, `service.tlsClientPort`, `service.followerPort`, and 
        `service.electionPort` have been regrouped under the `service.ports`
        map.

        - `updateStrategy` (string) and `rollingUpdatePartition` are regrouped
        under the `updateStrategy` map.

        - `podDisruptionBudget.*` parameters are renamed to `pdb.*`.


        ### To 7.0.0


        This new version renames the parameters used to configure TLS for both
        client and quorum.


        - `service.tls.disable_base_client_port` is renamed to
        `service.disableBaseClientPort`

        - `service.tls.client_port` is renamed to `service.tlsClientPort`

        - `service.tls.client_enable` is renamed to `tls.client.enabled`

        - `service.tls.client_keystore_path` is renamed to
        `tls.client.keystorePath`

        - `service.tls.client_truststore_path` is renamed to
        `tls.client.truststorePath`

        - `service.tls.client_keystore_password` is renamed to
        `tls.client.keystorePassword`

        - `service.tls.client_truststore_password` is renamed to
        `tls.client.truststorePassword`

        - `service.tls.quorum_enable` is renamed to `tls.quorum.enabled`

        - `service.tls.quorum_keystore_path` is renamed to
        `tls.quorum.keystorePath`

        - `service.tls.quorum_truststore_path` is renamed to
        `tls.quorum.truststorePath`

        - `service.tls.quorum_keystore_password` is renamed to
        `tls.quorum.keystorePassword`

        - `service.tls.quorum_truststore_password` is renamed to
        `tls.quorum.truststorePassword`


        ### To 6.1.0


        This version introduces `bitnami/common`, a [library
        chart](https://helm.sh/docs/topics/library_charts/#helm) as a
        dependency. More documentation about this new utility could be found
        [here](https://github.com/bitnami/charts/tree/main/bitnami/common#bitnami-common-library-chart).
        Please, make sure that you have updated the chart dependencies before
        executing any upgrade.


        ### To 6.0.0


        [On November 13, 2020, Helm v2 support was formally
        finished](https://github.com/helm/charts#status-of-the-project), this
        major version is the result of the required changes applied to the Helm
        Chart to be able to incorporate the different features added in Helm v3
        and to be consistent with the Helm project itself regarding the Helm v2
        EOL.


        ### To 5.21.0


        A couple of parameters related to Zookeeper metrics were renamed or
        disappeared in favor of new ones:


        - `metrics.port` is renamed to `metrics.containerPort`.

        - `metrics.annotations` is deprecated in favor of
        `metrics.service.annotations`.


        ### To 3.0.0


        This new version of the chart includes the new ZooKeeper major version
        3.5.5. Note that to perform an automatic upgrade

        of the application, each node will need to have at least one snapshot
        file created in the data directory. If not, the

        new version of the application won't be able to start the service.
        Please refer to
        [ZOOKEEPER-3056](https://issues.apache.org/jira/browse/ZOOKEEPER-3056)

        in order to find ways to workaround this issue in case you are facing
        it.


        ### To 2.0.0


        Backwards compatibility is not guaranteed unless you modify the labels
        used on the chart's statefulsets.

        Use the workaround below to upgrade from versions previous to 2.0.0. The
        following example assumes that the release name is `zookeeper`:


        ```console

        kubectl delete statefulset zookeeper-zookeeper --cascade=false

        ```


        ### To 1.0.0


        Backwards compatibility is not guaranteed unless you modify the labels
        used on the chart's deployments.

        Use the workaround below to upgrade from versions previous to 1.0.0. The
        following example assumes that the release name is zookeeper:


        ```console

        kubectl delete statefulset zookeeper-zookeeper --cascade=false

        ```


        ## License


        Copyright &copy; 2024 Broadcom. The term "Broadcom" refers to Broadcom
        Inc. and/or its subsidiaries.


        Licensed under the Apache License, Version 2.0 (the "License");

        you may not use this file except in compliance with the License.

        You may obtain a copy of the License at


        <http://www.apache.org/licenses/LICENSE-2.0>


        Unless required by applicable law or agreed to in writing, software

        distributed under the License is distributed on an "AS IS" BASIS,

        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

        See the License for the specific language governing permissions and

        limitations under the License.
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/README.md
    - content: >
        annotations:
          category: Infrastructure
          licenses: Apache-2.0
        apiVersion: v2

        appVersion: 2.28.0

        description: A Library Helm Chart for grouping common logic between
        bitnami charts.
          This chart is not deployable by itself.
        home: https://bitnami.com

        icon: https://bitnami.com/downloads/logos/bitnami-mark.png

        keywords:

        - common

        - helper

        - template

        - function

        - bitnami

        maintainers:

        - name: Broadcom, Inc. All Rights Reserved.
          url: https://github.com/bitnami/charts
        name: common

        sources:

        - https://github.com/bitnami/charts/tree/main/bitnami/common

        type: library

        version: 2.28.0
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/Chart.yaml
    - content: >
        # Bitnami Common Library Chart


        A [Helm Library Chart](https://helm.sh/docs/topics/library_charts/#helm)
        for grouping common logic between Bitnami charts.


        ## TL;DR


        ```yaml

        dependencies:
          - name: common
            version: 2.x.x
            repository: oci://registry-1.docker.io/bitnamicharts
        ```


        ```console

        helm dependency update

        ```


        ```yaml

        apiVersion: v1

        kind: ConfigMap

        metadata:
          name: {{ include "common.names.fullname" . }}
        data:
          myvalue: "Hello World"
        ```


        Looking to use our applications in production? Try [VMware Tanzu
        Application Catalog](https://bitnami.com/enterprise), the commercial
        edition of the Bitnami catalog.


        ## Introduction


        This chart provides a common template helpers which can be used to
        develop new charts using [Helm](https://helm.sh) package manager.


        Bitnami charts can be used with [Kubeapps](https://kubeapps.dev/) for
        deployment and management of Helm Charts in clusters.


        ## Prerequisites


        - Kubernetes 1.23+

        - Helm 3.8.0+


        ## Parameters


        ## Special input schemas


        ### ImageRoot


        ```yaml

        registry:
          type: string
          description: Docker registry where the image is located
          example: docker.io

        repository:
          type: string
          description: Repository and image name
          example: bitnami/nginx

        tag:
          type: string
          description: image tag
          example: 1.16.1-debian-10-r63

        pullPolicy:
          type: string
          description: Specify a imagePullPolicy.'

        pullSecrets:
          type: array
          items:
            type: string
          description: Optionally specify an array of imagePullSecrets (evaluated as templates).

        debug:
          type: boolean
          description: Set to true if you would like to see extra information on logs
          example: false

        ## An instance would be:

        # registry: docker.io

        # repository: bitnami/nginx

        # tag: 1.16.1-debian-10-r63

        # pullPolicy: IfNotPresent

        # debug: false

        ```


        ### Persistence


        ```yaml

        enabled:
          type: boolean
          description: Whether enable persistence.
          example: true

        storageClass:
          type: string
          description: Ghost data Persistent Volume Storage Class, If set to "-", storageClassName: "" which disables dynamic provisioning.
          example: "-"

        accessMode:
          type: string
          description: Access mode for the Persistent Volume Storage.
          example: ReadWriteOnce

        size:
          type: string
          description: Size the Persistent Volume Storage.
          example: 8Gi

        path:
          type: string
          description: Path to be persisted.
          example: /bitnami

        ## An instance would be:

        # enabled: true

        # storageClass: "-"

        # accessMode: ReadWriteOnce

        # size: 8Gi

        # path: /bitnami

        ```


        ### ExistingSecret


        ```yaml

        name:
          type: string
          description: Name of the existing secret.
          example: mySecret
        keyMapping:
          description: Mapping between the expected key name and the name of the key in the existing secret.
          type: object

        ## An instance would be:

        # name: mySecret

        # keyMapping:

        #   password: myPasswordKey

        ```


        #### Example of use


        When we store sensitive data for a deployment in a secret, some times we
        want to give to users the possibility of using theirs existing secrets.


        ```yaml

        # templates/secret.yaml

        ---

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ include "common.names.fullname" . }}
          labels:
            app: {{ include "common.names.fullname" . }}
        type: Opaque

        data:
          password: {{ .Values.password | b64enc | quote }}

        # templates/dpl.yaml

        ---

        ...
              env:
                - name: PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ include "common.secrets.name" (dict "existingSecret" .Values.existingSecret "context" $) }}
                      key: {{ include "common.secrets.key" (dict "existingSecret" .Values.existingSecret "key" "password") }}
        ...


        # values.yaml

        ---

        name: mySecret

        keyMapping:
          password: myPasswordKey
        ```


        ### ValidateValue


        #### NOTES.txt


        ```console

        {{- $validateValueConf00 := (dict "valueKey" "path.to.value00" "secret"
        "secretName" "field" "password-00") -}}

        {{- $validateValueConf01 := (dict "valueKey" "path.to.value01" "secret"
        "secretName" "field" "password-01") -}}


        {{ include "common.validations.values.multiple.empty" (dict "required"
        (list $validateValueConf00 $validateValueConf01) "context" $) }}

        ```


        If we force those values to be empty we will see some alerts


        ```console

        helm install test mychart --set path.to.value00="",path.to.value01=""
            'path.to.value00' must not be empty, please add '--set path.to.value00=$PASSWORD_00' to the command. To get the current value:

                export PASSWORD_00=$(kubectl get secret --namespace default secretName -o jsonpath="{.data.password-00}" | base64 -d)

            'path.to.value01' must not be empty, please add '--set path.to.value01=$PASSWORD_01' to the command. To get the current value:

                export PASSWORD_01=$(kubectl get secret --namespace default secretName -o jsonpath="{.data.password-01}" | base64 -d)
        ```


        ## Upgrading


        ### To 1.0.0


        [On November 13, 2020, Helm v2 support was formally
        finished](https://github.com/helm/charts#status-of-the-project), this
        major version is the result of the required changes applied to the Helm
        Chart to be able to incorporate the different features added in Helm v3
        and to be consistent with the Helm project itself regarding the Helm v2
        EOL.


        #### What changes were introduced in this major version?


        - Previous versions of this Helm Chart use `apiVersion: v1` (installable
        by both Helm 2 and 3), this Helm Chart was updated to `apiVersion: v2`
        (installable by Helm 3 only).
        [Here](https://helm.sh/docs/topics/charts/#the-apiversion-field) you can
        find more information about the `apiVersion` field.

        - Use `type: library`.
        [Here](https://v3.helm.sh/docs/faq/#library-chart-support) you can find
        more information.

        - The different fields present in the *Chart.yaml* file has been ordered
        alphabetically in a homogeneous way for all the Bitnami Helm Charts


        #### Considerations when upgrading to this version


        - If you want to upgrade to this version from a previous one installed
        with Helm v3, you shouldn't face any issues

        - If you want to upgrade to this version using Helm v2, this scenario is
        not supported as this version doesn't support Helm v2 anymore

        - If you installed the previous version with Helm v2 and wants to
        upgrade to this version with Helm v3, please refer to the [official Helm
        documentation](https://helm.sh/docs/topics/v2_v3_migration/#migration-use-cases)
        about migrating from Helm v2 to v3


        #### Useful links


        -
        <https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-resolve-helm2-helm3-post-migration-issues-index.html>

        - <https://helm.sh/docs/topics/v2_v3_migration/>

        - <https://helm.sh/blog/migrate-from-helm-v2-to-helm-v3/>


        ## License


        Copyright &copy; 2024 Broadcom. The term "Broadcom" refers to Broadcom
        Inc. and/or its subsidiaries.


        Licensed under the Apache License, Version 2.0 (the "License");

        you may not use this file except in compliance with the License.

        You may obtain a copy of the License at


        <http://www.apache.org/licenses/LICENSE-2.0>


        Unless required by applicable law or agreed to in writing, software

        distributed under the License is distributed on an "AS IS" BASIS,

        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

        See the License for the specific language governing permissions and

        limitations under the License.
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/README.md
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return a soft nodeAffinity definition

        {{ include "common.affinities.nodes.soft" (dict "key" "FOO" "values"
        (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.nodes.soft" -}}

        preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
                - key: {{ .key }}
                  operator: In
                  values:
                    {{- range .values }}
                    - {{ . | quote }}
                    {{- end }}
            weight: 1
        {{- end -}}


        {{/*

        Return a hard nodeAffinity definition

        {{ include "common.affinities.nodes.hard" (dict "key" "FOO" "values"
        (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.nodes.hard" -}}

        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: {{ .key }}
                  operator: In
                  values:
                    {{- range .values }}
                    - {{ . | quote }}
                    {{- end }}
        {{- end -}}


        {{/*

        Return a nodeAffinity definition

        {{ include "common.affinities.nodes" (dict "type" "soft" "key" "FOO"
        "values" (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.nodes" -}}
          {{- if eq .type "soft" }}
            {{- include "common.affinities.nodes.soft" . -}}
          {{- else if eq .type "hard" }}
            {{- include "common.affinities.nodes.hard" . -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Return a topologyKey definition

        {{ include "common.affinities.topologyKey" (dict "topologyKey" "BAR")
        -}}

        */}}

        {{- define "common.affinities.topologyKey" -}}

        {{ .topologyKey | default "kubernetes.io/hostname" -}}

        {{- end -}}


        {{/*

        Return a soft podAffinity/podAntiAffinity definition

        {{ include "common.affinities.pods.soft" (dict "component" "FOO"
        "customLabels" .Values.podLabels "extraMatchLabels"
        .Values.extraMatchLabels "topologyKey" "BAR" "extraPodAffinityTerms"
        .Values.extraPodAffinityTerms "extraNamespaces" (list "namespace1"
        "namespace2") "context" $) -}}

        */}}

        {{- define "common.affinities.pods.soft" -}}

        {{- $component := default "" .component -}}

        {{- $customLabels := default (dict) .customLabels -}}

        {{- $extraMatchLabels := default (dict) .extraMatchLabels -}}

        {{- $extraPodAffinityTerms := default (list) .extraPodAffinityTerms -}}

        {{- $extraNamespaces := default (list) .extraNamespaces -}}

        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" .context )) | nindent 10 }}
                  {{- if not (empty $component) }}
                  {{ printf "app.kubernetes.io/component: %s" $component }}
                  {{- end }}
                  {{- range $key, $value := $extraMatchLabels }}
                  {{ $key }}: {{ $value | quote }}
                  {{- end }}
              {{- if $extraNamespaces }}
              namespaces:
                - {{ .context.Release.Namespace }}
                {{- with $extraNamespaces }}
                {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
                {{- end }}
              {{- end }}
              topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
            weight: 1
          {{- range $extraPodAffinityTerms }}
          - podAffinityTerm:
              labelSelector:
                matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" $.context )) | nindent 10 }}
                  {{- if not (empty $component) }}
                  {{ printf "app.kubernetes.io/component: %s" $component }}
                  {{- end }}
                  {{- range $key, $value := .extraMatchLabels }}
                  {{ $key }}: {{ $value | quote }}
                  {{- end }}
              topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
            weight: {{ .weight | default 1 -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Return a hard podAffinity/podAntiAffinity definition

        {{ include "common.affinities.pods.hard" (dict "component" "FOO"
        "customLabels" .Values.podLabels "extraMatchLabels"
        .Values.extraMatchLabels "topologyKey" "BAR" "extraPodAffinityTerms"
        .Values.extraPodAffinityTerms "extraNamespaces" (list "namespace1"
        "namespace2") "context" $) -}}

        */}}

        {{- define "common.affinities.pods.hard" -}}

        {{- $component := default "" .component -}}

        {{- $customLabels := default (dict) .customLabels -}}

        {{- $extraMatchLabels := default (dict) .extraMatchLabels -}}

        {{- $extraPodAffinityTerms := default (list) .extraPodAffinityTerms -}}

        {{- $extraNamespaces := default (list) .extraNamespaces -}}

        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" .context )) | nindent 8 }}
                {{- if not (empty $component) }}
                {{ printf "app.kubernetes.io/component: %s" $component }}
                {{- end }}
                {{- range $key, $value := $extraMatchLabels }}
                {{ $key }}: {{ $value | quote }}
                {{- end }}
              {{- if $extraNamespaces }}
              namespaces:
                - {{ .context.Release.Namespace }}
                {{- with $extraNamespaces }}
                {{ include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
                {{- end }}
              {{- end }}
            topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
          {{- range $extraPodAffinityTerms }}
          - labelSelector:
              matchLabels: {{- (include "common.labels.matchLabels" ( dict "customLabels" $customLabels "context" $.context )) | nindent 8 }}
                {{- if not (empty $component) }}
                {{ printf "app.kubernetes.io/component: %s" $component }}
                {{- end }}
                {{- range $key, $value := .extraMatchLabels }}
                {{ $key }}: {{ $value | quote }}
                {{- end }}
            topologyKey: {{ include "common.affinities.topologyKey" (dict "topologyKey" .topologyKey) }}
          {{- end -}}
        {{- end -}}


        {{/*

        Return a podAffinity/podAntiAffinity definition

        {{ include "common.affinities.pods" (dict "type" "soft" "key" "FOO"
        "values" (list "BAR" "BAZ")) -}}

        */}}

        {{- define "common.affinities.pods" -}}
          {{- if eq .type "soft" }}
            {{- include "common.affinities.pods.soft" . -}}
          {{- else if eq .type "hard" }}
            {{- include "common.affinities.pods.hard" . -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_affinities.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return the target Kubernetes version

        */}}

        {{- define "common.capabilities.kubeVersion" -}}

        {{- default (default .Capabilities.KubeVersion.Version
        .Values.kubeVersion) ((.Values.global).kubeVersion) -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for poddisruptionbudget.

        */}}

        {{- define "common.capabilities.policy.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.21-0"
        $kubeVersion) -}}

        {{- print "policy/v1beta1" -}}

        {{- else -}}

        {{- print "policy/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for networkpolicy.

        */}}

        {{- define "common.capabilities.networkPolicy.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.7-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else -}}

        {{- print "networking.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for cronjob.

        */}}

        {{- define "common.capabilities.cronjob.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.21-0"
        $kubeVersion) -}}

        {{- print "batch/v1beta1" -}}

        {{- else -}}

        {{- print "batch/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for daemonset.

        */}}

        {{- define "common.capabilities.daemonset.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else -}}

        {{- print "apps/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for deployment.

        */}}

        {{- define "common.capabilities.deployment.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else -}}

        {{- print "apps/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for statefulset.

        */}}

        {{- define "common.capabilities.statefulset.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "apps/v1beta1" -}}

        {{- else -}}

        {{- print "apps/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for ingress.

        */}}

        {{- define "common.capabilities.ingress.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if (.Values.ingress).apiVersion -}}

        {{- .Values.ingress.apiVersion -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.14-0"
        $kubeVersion) -}}

        {{- print "extensions/v1beta1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.19-0"
        $kubeVersion) -}}

        {{- print "networking.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "networking.k8s.io/v1" -}}

        {{- end }}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for RBAC resources.

        */}}

        {{- define "common.capabilities.rbac.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.17-0"
        $kubeVersion) -}}

        {{- print "rbac.authorization.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "rbac.authorization.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for CRDs.

        */}}

        {{- define "common.capabilities.crd.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.19-0"
        $kubeVersion) -}}

        {{- print "apiextensions.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "apiextensions.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for APIService.

        */}}

        {{- define "common.capabilities.apiService.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.10-0"
        $kubeVersion) -}}

        {{- print "apiregistration.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "apiregistration.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for Horizontal Pod Autoscaler.

        */}}

        {{- define "common.capabilities.hpa.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" .context
        -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.23-0"
        $kubeVersion) -}}

        {{- if .beta2 -}}

        {{- print "autoscaling/v2beta2" -}}

        {{- else -}}

        {{- print "autoscaling/v2beta1" -}}

        {{- end -}}

        {{- else -}}

        {{- print "autoscaling/v2" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for Vertical Pod Autoscaler.

        */}}

        {{- define "common.capabilities.vpa.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" .context
        -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.11-0"
        $kubeVersion) -}}

        {{- print "autoscaling/v1beta1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.25-0"
        $kubeVersion) -}}

        {{- print "autoscaling/v1beta2" -}}

        {{- else -}}

        {{- print "autoscaling/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if PodSecurityPolicy is supported

        */}}

        {{- define "common.capabilities.psp.supported" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if or (empty $kubeVersion) (semverCompare "<1.25-0" $kubeVersion)
        -}}
          {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if AdmissionConfiguration is supported

        */}}

        {{- define "common.capabilities.admissionConfiguration.supported" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if or (empty $kubeVersion) (not (semverCompare "<1.23-0"
        $kubeVersion)) -}}
          {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for AdmissionConfiguration.

        */}}

        {{- define "common.capabilities.admissionConfiguration.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.23-0"
        $kubeVersion) -}}

        {{- print "apiserver.config.k8s.io/v1alpha1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.25-0"
        $kubeVersion) -}}

        {{- print "apiserver.config.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "apiserver.config.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return the appropriate apiVersion for PodSecurityConfiguration.

        */}}

        {{- define "common.capabilities.podSecurityConfiguration.apiVersion" -}}

        {{- $kubeVersion := include "common.capabilities.kubeVersion" . -}}

        {{- if and (not (empty $kubeVersion)) (semverCompare "<1.23-0"
        $kubeVersion) -}}

        {{- print "pod-security.admission.config.k8s.io/v1alpha1" -}}

        {{- else if and (not (empty $kubeVersion)) (semverCompare "<1.25-0"
        $kubeVersion) -}}

        {{- print "pod-security.admission.config.k8s.io/v1beta1" -}}

        {{- else -}}

        {{- print "pod-security.admission.config.k8s.io/v1" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if the used Helm version is 3.3+.

        A way to check the used Helm version was not introduced until version
        3.3.0 with .Capabilities.HelmVersion, which contains an additional
        "{}}"  structure.

        This check is introduced as a regexMatch instead of {{ if
        .Capabilities.HelmVersion }} because checking for the key HelmVersion in
        <3.3 results in a "interface not found" error.

        **To be removed when the catalog's minimun Helm version is 3.3**

        */}}

        {{- define "common.capabilities.supportsHelmVersion" -}}

        {{- if regexMatch "{(v[0-9])*[^}]*}}$" (.Capabilities | toString ) }}
          {{- true -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_capabilities.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/* 

        Return true if the detected platform is Openshift

        Usage:

        {{- include "common.compatibility.isOpenshift" . -}}

        */}}

        {{- define "common.compatibility.isOpenshift" -}}

        {{- if .Capabilities.APIVersions.Has "security.openshift.io/v1" -}}

        {{- true -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Render a compatible securityContext depending on the platform. By
        default it is maintained as it is. In other platforms like Openshift we
        remove default user/group values that do not work out of the box with
        the restricted-v1 SCC

        Usage:

        {{- include "common.compatibility.renderSecurityContext" (dict
        "secContext" .Values.containerSecurityContext "context" $) -}}

        */}}

        {{- define "common.compatibility.renderSecurityContext" -}}

        {{- $adaptedContext := .secContext -}}


        {{- if (((.context.Values.global).compatibility).openshift) -}}
          {{- if or (eq .context.Values.global.compatibility.openshift.adaptSecurityContext "force") (and (eq .context.Values.global.compatibility.openshift.adaptSecurityContext "auto") (include "common.compatibility.isOpenshift" .context)) -}}
            {{/* Remove incompatible user/group values that do not work in Openshift out of the box */}}
            {{- $adaptedContext = omit $adaptedContext "fsGroup" "runAsUser" "runAsGroup" -}}
            {{- if not .secContext.seLinuxOptions -}}
            {{/* If it is an empty object, we remove it from the resulting context because it causes validation issues */}}
            {{- $adaptedContext = omit $adaptedContext "seLinuxOptions" -}}
            {{- end -}}
          {{- end -}}
        {{- end -}}

        {{/* Remove empty seLinuxOptions object if
        global.compatibility.omitEmptySeLinuxOptions is set to true */}}

        {{- if and
        (((.context.Values.global).compatibility).omitEmptySeLinuxOptions) (not
        .secContext.seLinuxOptions) -}}
          {{- $adaptedContext = omit $adaptedContext "seLinuxOptions" -}}
        {{- end -}}

        {{/* Remove fields that are disregarded when running the container in
        privileged mode */}}

        {{- if $adaptedContext.privileged -}}
          {{- $adaptedContext = omit $adaptedContext "capabilities" "seLinuxOptions" -}}
        {{- end -}}

        {{- omit $adaptedContext "enabled" | toYaml -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_compatibility.tpl
    - content: >-
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Throw error when upgrading using empty passwords values that must not be
        empty.


        Usage:

        {{- $validationError00 := include
        "common.validations.values.single.empty" (dict "valueKey"
        "path.to.password00" "secret" "secretName" "field" "password-00") -}}

        {{- $validationError01 := include
        "common.validations.values.single.empty" (dict "valueKey"
        "path.to.password01" "secret" "secretName" "field" "password-01") -}}

        {{ include "common.errors.upgrade.passwords.empty" (dict
        "validationErrors" (list $validationError00 $validationError01)
        "context" $) }}


        Required password params:
          - validationErrors - String - Required. List of validation strings to be return, if it is empty it won't throw error.
          - context - Context - Required. Parent context.
        */}}

        {{- define "common.errors.upgrade.passwords.empty" -}}
          {{- $validationErrors := join "" .validationErrors -}}
          {{- if and $validationErrors .context.Release.IsUpgrade -}}
            {{- $errorString := "\nPASSWORDS ERROR: You must provide your current passwords when upgrading the release." -}}
            {{- $errorString = print $errorString "\n                 Note that even after reinstallation, old credentials may be needed as they may be kept in persistent volume claims." -}}
            {{- $errorString = print $errorString "\n                 Further information can be obtained at https://docs.bitnami.com/general/how-to/troubleshoot-helm-chart-issues/#credential-errors-while-upgrading-chart-releases" -}}
            {{- $errorString = print $errorString "\n%s" -}}
            {{- printf $errorString $validationErrors | fail -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Throw error when original container images are replaced.

        The error can be bypassed by setting the
        "global.security.allowInsecureImages" to true. In this case,

        a warning message will be shown instead.


        Usage:

        {{ include "common.errors.insecureImages" (dict "images" (list
        .Values.path.to.the.imageRoot) "context" $) }}

        */}}

        {{- define "common.errors.insecureImages" -}}

        {{- $relocatedImages := list -}}

        {{- $replacedImages := list -}}

        {{- $retaggedImages := list -}}

        {{- $globalRegistry := ((.context.Values.global).imageRegistry) -}}

        {{- $originalImages := .context.Chart.Annotations.images -}}

        {{- range .images -}}
          {{- $registryName := default .registry $globalRegistry -}}
          {{- $fullImageNameNoTag := printf "%s/%s" $registryName .repository -}}
          {{- $fullImageName := printf "%s:%s" $fullImageNameNoTag .tag -}}
          {{- if not (contains $fullImageNameNoTag $originalImages) -}}
            {{- if not (contains $registryName $originalImages) -}}
              {{- $relocatedImages = append $relocatedImages $fullImageName  -}}
            {{- else if not (contains .repository $originalImages) -}}
              {{- $replacedImages = append $replacedImages $fullImageName  -}}
            {{- end -}}
          {{- end -}}
          {{- if not (contains (printf "%s:%s" .repository .tag) $originalImages) -}}
            {{- $retaggedImages = append $retaggedImages $fullImageName  -}}
          {{- end -}}
        {{- end -}}


        {{- if and (or (gt (len $relocatedImages) 0) (gt (len $replacedImages)
        0)) (((.context.Values.global).security).allowInsecureImages) -}}
          {{- print "\n\n⚠ SECURITY WARNING: Verifying original container images was skipped. Please note this Helm chart was designed, tested, and validated on multiple platforms using a specific set of Bitnami and Tanzu Application Catalog containers. Substituting other containers is likely to cause degraded security and performance, broken chart features, and missing environment variables.\n" -}}
        {{- else if (or (gt (len $relocatedImages) 0) (gt (len $replacedImages)
        0)) -}}
          {{- $errorString := "Original containers have been substituted for unrecognized ones. Deploying this chart with non-standard containers is likely to cause degraded security and performance, broken chart features, and missing environment variables." -}}
          {{- $errorString = print $errorString "\n\nUnrecognized images:" -}}
          {{- range (concat $relocatedImages $replacedImages) -}}
            {{- $errorString = print $errorString "\n  - " . -}}
          {{- end -}}
          {{- if or (contains "docker.io/bitnami/" $originalImages) (contains "docker.io/bitnamiprem/" $originalImages) -}}
            {{- $errorString = print "\n\n⚠ ERROR: " $errorString -}}
            {{- $errorString = print $errorString "\n\nIf you are sure you want to proceed with non-standard containers, you can skip container image verification by setting the global parameter 'global.security.allowInsecureImages' to true." -}}
            {{- $errorString = print $errorString "\nFurther information can be obtained at https://github.com/bitnami/charts/issues/30850" -}}
            {{- print $errorString | fail -}}
          {{- else if gt (len $replacedImages) 0 -}}
            {{- $errorString = print "\n\n⚠ WARNING: " $errorString -}}
            {{- print $errorString -}}
          {{- end -}}
        {{- else if gt (len $retaggedImages) 0 -}}
          {{- $warnString := "\n\n⚠ WARNING: Original containers have been retagged. Please note this Helm chart was tested, and validated on multiple platforms using a specific set of Tanzu Application Catalog containers. Substituting original image tags could cause unexpected behavior." -}}
          {{- $warnString = print $warnString "\n\nRetagged images:" -}}
          {{- range $retaggedImages -}}
            {{- $warnString = print $warnString "\n  - " . -}}
          {{- end -}}
          {{- print $warnString -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_errors.tpl
    - content: >+
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Return the proper image name.

        If image tag and digest are not defined, termination fallbacks to chart
        appVersion.

        {{ include "common.images.image" ( dict "imageRoot"
        .Values.path.to.the.image "global" .Values.global "chart" .Chart ) }}

        */}}

        {{- define "common.images.image" -}}

        {{- $registryName := default .imageRoot.registry
        ((.global).imageRegistry) -}}

        {{- $repositoryName := .imageRoot.repository -}}

        {{- $separator := ":" -}}

        {{- $termination := .imageRoot.tag | toString -}}


        {{- if not .imageRoot.tag }}
          {{- if .chart }}
            {{- $termination = .chart.AppVersion | toString -}}
          {{- end -}}
        {{- end -}}

        {{- if .imageRoot.digest }}
            {{- $separator = "@" -}}
            {{- $termination = .imageRoot.digest | toString -}}
        {{- end -}}

        {{- if $registryName }}
            {{- printf "%s/%s%s%s" $registryName $repositoryName $separator $termination -}}
        {{- else -}}
            {{- printf "%s%s%s"  $repositoryName $separator $termination -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the proper Docker Image Registry Secret Names (deprecated: use
        common.images.renderPullSecrets instead)

        {{ include "common.images.pullSecrets" ( dict "images" (list
        .Values.path.to.the.image1, .Values.path.to.the.image2) "global"
        .Values.global) }}

        */}}

        {{- define "common.images.pullSecrets" -}}
          {{- $pullSecrets := list }}

          {{- range ((.global).imagePullSecrets) -}}
            {{- if kindIs "map" . -}}
              {{- $pullSecrets = append $pullSecrets .name -}}
            {{- else -}}
              {{- $pullSecrets = append $pullSecrets . -}}
            {{- end }}
          {{- end -}}

          {{- range .images -}}
            {{- range .pullSecrets -}}
              {{- if kindIs "map" . -}}
                {{- $pullSecrets = append $pullSecrets .name -}}
              {{- else -}}
                {{- $pullSecrets = append $pullSecrets . -}}
              {{- end -}}
            {{- end -}}
          {{- end -}}

          {{- if (not (empty $pullSecrets)) -}}
        imagePullSecrets:
            {{- range $pullSecrets | uniq }}
          - name: {{ . }}
            {{- end }}
          {{- end }}
        {{- end -}}


        {{/*

        Return the proper Docker Image Registry Secret Names evaluating values
        as templates

        {{ include "common.images.renderPullSecrets" ( dict "images" (list
        .Values.path.to.the.image1, .Values.path.to.the.image2) "context" $) }}

        */}}

        {{- define "common.images.renderPullSecrets" -}}
          {{- $pullSecrets := list }}
          {{- $context := .context }}

          {{- range (($context.Values.global).imagePullSecrets) -}}
            {{- if kindIs "map" . -}}
              {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" .name "context" $context)) -}}
            {{- else -}}
              {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" . "context" $context)) -}}
            {{- end -}}
          {{- end -}}

          {{- range .images -}}
            {{- range .pullSecrets -}}
              {{- if kindIs "map" . -}}
                {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" .name "context" $context)) -}}
              {{- else -}}
                {{- $pullSecrets = append $pullSecrets (include "common.tplvalues.render" (dict "value" . "context" $context)) -}}
              {{- end -}}
            {{- end -}}
          {{- end -}}

          {{- if (not (empty $pullSecrets)) -}}
        imagePullSecrets:
            {{- range $pullSecrets | uniq }}
          - name: {{ . }}
            {{- end }}
          {{- end }}
        {{- end -}}


        {{/*

        Return the proper image version (ingores image revision/prerelease info
        & fallbacks to chart appVersion)

        {{ include "common.images.version" ( dict "imageRoot"
        .Values.path.to.the.image "chart" .Chart ) }}

        */}}

        {{- define "common.images.version" -}}

        {{- $imageTag := .imageRoot.tag | toString -}}

        {{/* regexp from
        https://github.com/Masterminds/semver/blob/23f51de38a0866c5ef0bfc42b3f735c73107b700/version.go#L41-L44
        */}}

        {{- if regexMatch
        `^([0-9]+)(\.[0-9]+)?(\.[0-9]+)?(-([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?(\+([0-9A-Za-z\-]+(\.[0-9A-Za-z\-]+)*))?$`
        $imageTag -}}
            {{- $version := semver $imageTag -}}
            {{- printf "%d.%d.%d" $version.Major $version.Minor $version.Patch -}}
        {{- else -}}
            {{- print .chart.AppVersion -}}
        {{- end -}}

        {{- end -}}

      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_images.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Generate backend entry that is compatible with all Kubernetes API
        versions.


        Usage:

        {{ include "common.ingress.backend" (dict "serviceName" "backendName"
        "servicePort" "backendPort" "context" $) }}


        Params:
          - serviceName - String. Name of an existing service backend
          - servicePort - String/Int. Port name (or number) of the service. It will be translated to different yaml depending if it is a string or an integer.
          - context - Dict - Required. The context for the template evaluation.
        */}}

        {{- define "common.ingress.backend" -}}

        {{- $apiVersion := (include "common.capabilities.ingress.apiVersion"
        .context) -}}

        {{- if or (eq $apiVersion "extensions/v1beta1") (eq $apiVersion
        "networking.k8s.io/v1beta1") -}}

        serviceName: {{ .serviceName }}

        servicePort: {{ .servicePort }}

        {{- else -}}

        service:
          name: {{ .serviceName }}
          port:
            {{- if typeIs "string" .servicePort }}
            name: {{ .servicePort }}
            {{- else if or (typeIs "int" .servicePort) (typeIs "float64" .servicePort) }}
            number: {{ .servicePort | int }}
            {{- end }}
        {{- end -}}

        {{- end -}}


        {{/*

        Print "true" if the API pathType field is supported

        Usage:

        {{ include "common.ingress.supportsPathType" . }}

        */}}

        {{- define "common.ingress.supportsPathType" -}}

        {{- if (semverCompare "<1.18-0" (include
        "common.capabilities.kubeVersion" .)) -}}

        {{- print "false" -}}

        {{- else -}}

        {{- print "true" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns true if the ingressClassname field is supported

        Usage:

        {{ include "common.ingress.supportsIngressClassname" . }}

        */}}

        {{- define "common.ingress.supportsIngressClassname" -}}

        {{- if semverCompare "<1.18-0" (include
        "common.capabilities.kubeVersion" .) -}}

        {{- print "false" -}}

        {{- else -}}

        {{- print "true" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return true if cert-manager required annotations for TLS signed

        certificates are set in the Ingress annotations

        Ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations

        Usage:

        {{ include "common.ingress.certManagerRequest" ( dict "annotations"
        .Values.path.to.the.ingress.annotations ) }}

        */}}

        {{- define "common.ingress.certManagerRequest" -}}

        {{ if or (hasKey .annotations "cert-manager.io/cluster-issuer") (hasKey
        .annotations "cert-manager.io/issuer") (hasKey .annotations
        "kubernetes.io/tls-acme") }}
            {{- true -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_ingress.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Kubernetes standard labels

        {{ include "common.labels.standard" (dict "customLabels"
        .Values.commonLabels "context" $) -}}

        */}}

        {{- define "common.labels.standard" -}}

        {{- if and (hasKey . "customLabels") (hasKey . "context") -}}

        {{- $default := dict "app.kubernetes.io/name" (include
        "common.names.name" .context) "helm.sh/chart" (include
        "common.names.chart" .context) "app.kubernetes.io/instance"
        .context.Release.Name "app.kubernetes.io/managed-by"
        .context.Release.Service -}}

        {{- with .context.Chart.AppVersion -}}

        {{- $_ := set $default "app.kubernetes.io/version" . -}}

        {{- end -}}

        {{ template "common.tplvalues.merge" (dict "values" (list .customLabels
        $default) "context" .context) }}

        {{- else -}}

        app.kubernetes.io/name: {{ include "common.names.name" . }}

        helm.sh/chart: {{ include "common.names.chart" . }}

        app.kubernetes.io/instance: {{ .Release.Name }}

        app.kubernetes.io/managed-by: {{ .Release.Service }}

        {{- with .Chart.AppVersion }}

        app.kubernetes.io/version: {{ . | quote }}

        {{- end -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Labels used on immutable fields such as deploy.spec.selector.matchLabels
        or svc.spec.selector

        {{ include "common.labels.matchLabels" (dict "customLabels"
        .Values.podLabels "context" $) -}}


        We don't want to loop over custom labels appending them to the selector

        since it's very likely that it will break deployments, services, etc.

        However, it's important to overwrite the standard labels if the user

        overwrote them on metadata.labels fields.

        */}}

        {{- define "common.labels.matchLabels" -}}

        {{- if and (hasKey . "customLabels") (hasKey . "context") -}}

        {{ merge (pick (include "common.tplvalues.render" (dict "value"
        .customLabels "context" .context) | fromYaml) "app.kubernetes.io/name"
        "app.kubernetes.io/instance") (dict "app.kubernetes.io/name" (include
        "common.names.name" .context) "app.kubernetes.io/instance"
        .context.Release.Name ) | toYaml }}

        {{- else -}}

        app.kubernetes.io/name: {{ include "common.names.name" . }}

        app.kubernetes.io/instance: {{ .Release.Name }}

        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_labels.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Expand the name of the chart.

        */}}

        {{- define "common.names.name" -}}

        {{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-"
        -}}

        {{- end -}}


        {{/*

        Create chart name and version as used by the chart label.

        */}}

        {{- define "common.names.chart" -}}

        {{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc
        63 | trimSuffix "-" -}}

        {{- end -}}


        {{/*

        Create a default fully qualified app name.

        We truncate at 63 chars because some Kubernetes name fields are limited
        to this (by the DNS naming spec).

        If release name contains chart name it will be used as a full name.

        */}}

        {{- define "common.names.fullname" -}}

        {{- if .Values.fullnameOverride -}}

        {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- $name := default .Chart.Name .Values.nameOverride -}}

        {{- if contains $name .Release.Name -}}

        {{- .Release.Name | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" -}}

        {{- end -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Create a default fully qualified dependency name.

        We truncate at 63 chars because some Kubernetes name fields are limited
        to this (by the DNS naming spec).

        If release name contains chart name it will be used as a full name.

        Usage:

        {{ include "common.names.dependency.fullname" (dict "chartName"
        "dependency-chart-name" "chartValues" .Values.dependency-chart "context"
        $) }}

        */}}

        {{- define "common.names.dependency.fullname" -}}

        {{- if .chartValues.fullnameOverride -}}

        {{- .chartValues.fullnameOverride | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- $name := default .chartName .chartValues.nameOverride -}}

        {{- if contains $name .context.Release.Name -}}

        {{- .context.Release.Name | trunc 63 | trimSuffix "-" -}}

        {{- else -}}

        {{- printf "%s-%s" .context.Release.Name $name | trunc 63 | trimSuffix
        "-" -}}

        {{- end -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Allow the release namespace to be overridden for multi-namespace
        deployments in combined charts.

        */}}

        {{- define "common.names.namespace" -}}

        {{- default .Release.Namespace .Values.namespaceOverride | trunc 63 |
        trimSuffix "-" -}}

        {{- end -}}


        {{/*

        Create a fully qualified app name adding the installation's namespace.

        */}}

        {{- define "common.names.fullname.namespace" -}}

        {{- printf "%s-%s" (include "common.names.fullname" .) (include
        "common.names.namespace" .) | trunc 63 | trimSuffix "-" -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_names.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return a resource request/limit object based on a given preset.

        These presets are for basic testing and not meant to be used in
        production

        {{ include "common.resources.preset" (dict "type" "nano") -}}

        */}}

        {{- define "common.resources.preset" -}}

        {{/* The limits are the requests increased by 50% (except
        ephemeral-storage and xlarge/2xlarge sizes)*/}}

        {{- $presets := dict 
          "nano" (dict 
              "requests" (dict "cpu" "100m" "memory" "128Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "150m" "memory" "192Mi" "ephemeral-storage" "2Gi")
           )
          "micro" (dict 
              "requests" (dict "cpu" "250m" "memory" "256Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "375m" "memory" "384Mi" "ephemeral-storage" "2Gi")
           )
          "small" (dict 
              "requests" (dict "cpu" "500m" "memory" "512Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "750m" "memory" "768Mi" "ephemeral-storage" "2Gi")
           )
          "medium" (dict 
              "requests" (dict "cpu" "500m" "memory" "1024Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "750m" "memory" "1536Mi" "ephemeral-storage" "2Gi")
           )
          "large" (dict 
              "requests" (dict "cpu" "1.0" "memory" "2048Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "1.5" "memory" "3072Mi" "ephemeral-storage" "2Gi")
           )
          "xlarge" (dict 
              "requests" (dict "cpu" "1.0" "memory" "3072Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "3.0" "memory" "6144Mi" "ephemeral-storage" "2Gi")
           )
          "2xlarge" (dict 
              "requests" (dict "cpu" "1.0" "memory" "3072Mi" "ephemeral-storage" "50Mi")
              "limits" (dict "cpu" "6.0" "memory" "12288Mi" "ephemeral-storage" "2Gi")
           )
         }}
        {{- if hasKey $presets .type -}}

        {{- index $presets .type | toYaml -}}

        {{- else -}}

        {{- printf "ERROR: Preset key '%s' invalid. Allowed values are %s" .type
        (join "," (keys $presets)) | fail -}}

        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_resources.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Generate secret name.


        Usage:

        {{ include "common.secrets.name" (dict "existingSecret"
        .Values.path.to.the.existingSecret "defaultNameSuffix" "mySuffix"
        "context" $) }}


        Params:
          - existingSecret - ExistingSecret/String - Optional. The path to the existing secrets in the values.yaml given by the user
            to be used instead of the default one. Allows for it to be of type String (just the secret name) for backwards compatibility.
            +info: https://github.com/bitnami/charts/tree/main/bitnami/common#existingsecret
          - defaultNameSuffix - String - Optional. It is used only if we have several secrets in the same deployment.
          - context - Dict - Required. The context for the template evaluation.
        */}}

        {{- define "common.secrets.name" -}}

        {{- $name := (include "common.names.fullname" .context) -}}


        {{- if .defaultNameSuffix -}}

        {{- $name = printf "%s-%s" $name .defaultNameSuffix | trunc 63 |
        trimSuffix "-" -}}

        {{- end -}}


        {{- with .existingSecret -}}

        {{- if not (typeIs "string" .) -}}

        {{- with .name -}}

        {{- $name = . -}}

        {{- end -}}

        {{- else -}}

        {{- $name = . -}}

        {{- end -}}

        {{- end -}}


        {{- printf "%s" $name -}}

        {{- end -}}


        {{/*

        Generate secret key.


        Usage:

        {{ include "common.secrets.key" (dict "existingSecret"
        .Values.path.to.the.existingSecret "key" "keyName") }}


        Params:
          - existingSecret - ExistingSecret/String - Optional. The path to the existing secrets in the values.yaml given by the user
            to be used instead of the default one. Allows for it to be of type String (just the secret name) for backwards compatibility.
            +info: https://github.com/bitnami/charts/tree/main/bitnami/common#existingsecret
          - key - String - Required. Name of the key in the secret.
        */}}

        {{- define "common.secrets.key" -}}

        {{- $key := .key -}}


        {{- if .existingSecret -}}
          {{- if not (typeIs "string" .existingSecret) -}}
            {{- if .existingSecret.keyMapping -}}
              {{- $key = index .existingSecret.keyMapping $.key -}}
            {{- end -}}
          {{- end }}
        {{- end -}}


        {{- printf "%s" $key -}}

        {{- end -}}


        {{/*

        Generate secret password or retrieve one if already created.


        Usage:

        {{ include "common.secrets.passwords.manage" (dict "secret"
        "secret-name" "key" "keyName" "providedValues" (list "path.to.password1"
        "path.to.password2") "length" 10 "strong" false "chartName" "chartName"
        "honorProvidedValues" false "context" $) }}


        Params:
          - secret - String - Required - Name of the 'Secret' resource where the password is stored.
          - key - String - Required - Name of the key in the secret.
          - providedValues - List<String> - Required - The path to the validating value in the values.yaml, e.g: "mysql.password". Will pick first parameter with a defined value.
          - length - int - Optional - Length of the generated random password.
          - strong - Boolean - Optional - Whether to add symbols to the generated random password.
          - chartName - String - Optional - Name of the chart used when said chart is deployed as a subchart.
          - context - Context - Required - Parent context.
          - failOnNew - Boolean - Optional - Default to true. If set to false, skip errors adding new keys to existing secrets.
          - skipB64enc - Boolean - Optional - Default to false. If set to true, no the secret will not be base64 encrypted.
          - skipQuote - Boolean - Optional - Default to false. If set to true, no quotes will be added around the secret.
          - honorProvidedValues - Boolean - Optional - Default to false. If set to true, the values in providedValues have higher priority than an existing secret
        The order in which this function returns a secret password:
          1. Password provided via the values.yaml if honorProvidedValues = true
             (If one of the keys passed to the 'providedValues' parameter to this function is a valid path to a key in the values.yaml and has a value, the value of the first key with a value will be returned)
          2. Already existing 'Secret' resource
             (If a 'Secret' resource is found under the name provided to the 'secret' parameter to this function and that 'Secret' resource contains a key with the name passed as the 'key' parameter to this function then the value of this existing secret password will be returned)
          3. Password provided via the values.yaml if honorProvidedValues = false
             (If one of the keys passed to the 'providedValues' parameter to this function is a valid path to a key in the values.yaml and has a value, the value of the first key with a value will be returned)
          4. Randomly generated secret password
             (A new random secret password with the length specified in the 'length' parameter will be generated and returned)

        */}}

        {{- define "common.secrets.passwords.manage" -}}


        {{- $password := "" }}

        {{- $subchart := "" }}

        {{- $chartName := default "" .chartName }}

        {{- $passwordLength := default 10 .length }}

        {{- $providedPasswordKey := include "common.utils.getKeyFromList" (dict
        "keys" .providedValues "context" $.context) }}

        {{- $providedPasswordValue := include "common.utils.getValueFromKey"
        (dict "key" $providedPasswordKey "context" $.context) }}

        {{- $secretData := (lookup "v1" "Secret" (include
        "common.names.namespace" .context) .secret).data }}

        {{- if $secretData }}
          {{- if hasKey $secretData .key }}
            {{- $password = index $secretData .key | b64dec }}
          {{- else if not (eq .failOnNew false) }}
            {{- printf "\nPASSWORDS ERROR: The secret \"%s\" does not contain the key \"%s\"\n" .secret .key | fail -}}
          {{- end -}}
        {{- end }}


        {{- if and $providedPasswordValue .honorProvidedValues }}
          {{- $password = $providedPasswordValue | toString }}
        {{- end }}


        {{- if not $password }}
          {{- if $providedPasswordValue }}
            {{- $password = $providedPasswordValue | toString }}
          {{- else }}
            {{- if .context.Values.enabled }}
              {{- $subchart = $chartName }}
            {{- end -}}

            {{- if not (eq .failOnNew false) }}
              {{- $requiredPassword := dict "valueKey" $providedPasswordKey "secret" .secret "field" .key "subchart" $subchart "context" $.context -}}
              {{- $requiredPasswordError := include "common.validations.values.single.empty" $requiredPassword -}}
              {{- $passwordValidationErrors := list $requiredPasswordError -}}
              {{- include "common.errors.upgrade.passwords.empty" (dict "validationErrors" $passwordValidationErrors "context" $.context) -}}
            {{- end }}

            {{- if .strong }}
              {{- $subStr := list (lower (randAlpha 1)) (randNumeric 1) (upper (randAlpha 1)) | join "_" }}
              {{- $password = randAscii $passwordLength }}
              {{- $password = regexReplaceAllLiteral "\\W" $password "@" | substr 5 $passwordLength }}
              {{- $password = printf "%s%s" $subStr $password | toString | shuffle }}
            {{- else }}
              {{- $password = randAlphaNum $passwordLength }}
            {{- end }}
          {{- end -}}
        {{- end -}}

        {{- if not .skipB64enc }}

        {{- $password = $password | b64enc }}

        {{- end -}}

        {{- if .skipQuote -}}

        {{- printf "%s" $password -}}

        {{- else -}}

        {{- printf "%s" $password | quote -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Reuses the value from an existing secret, otherwise sets its value to a
        default value.


        Usage:

        {{ include "common.secrets.lookup" (dict "secret" "secret-name" "key"
        "keyName" "defaultValue" .Values.myValue "context" $) }}


        Params:
          - secret - String - Required - Name of the 'Secret' resource where the password is stored.
          - key - String - Required - Name of the key in the secret.
          - defaultValue - String - Required - The path to the validating value in the values.yaml, e.g: "mysql.password". Will pick first parameter with a defined value.
          - context - Context - Required - Parent context.

        */}}

        {{- define "common.secrets.lookup" -}}

        {{- $value := "" -}}

        {{- $secretData := (lookup "v1" "Secret" (include
        "common.names.namespace" .context) .secret).data -}}

        {{- if and $secretData (hasKey $secretData .key) -}}
          {{- $value = index $secretData .key -}}
        {{- else if .defaultValue -}}
          {{- $value = .defaultValue | toString | b64enc -}}
        {{- end -}}

        {{- if $value -}}

        {{- printf "%s" $value -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Returns whether a previous generated secret already exists


        Usage:

        {{ include "common.secrets.exists" (dict "secret" "secret-name"
        "context" $) }}


        Params:
          - secret - String - Required - Name of the 'Secret' resource where the password is stored.
          - context - Context - Required - Parent context.
        */}}

        {{- define "common.secrets.exists" -}}

        {{- $secret := (lookup "v1" "Secret" (include "common.names.namespace"
        .context) .secret) }}

        {{- if $secret }}
          {{- true -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_secrets.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return  the proper Storage Class

        {{ include "common.storage.class" ( dict "persistence"
        .Values.path.to.the.persistence "global" $) }}

        */}}

        {{- define "common.storage.class" -}}

        {{- $storageClass := (.global).storageClass | default
        .persistence.storageClass | default (.global).defaultStorageClass |
        default "" -}}

        {{- if $storageClass -}}
          {{- if (eq "-" $storageClass) -}}
              {{- printf "storageClassName: \"\"" -}}
          {{- else -}}
              {{- printf "storageClassName: %s" $storageClass -}}
          {{- end -}}
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_storage.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Renders a value that contains template perhaps with scope if the scope
        is present.

        Usage:

        {{ include "common.tplvalues.render" ( dict "value"
        .Values.path.to.the.Value "context" $ ) }}

        {{ include "common.tplvalues.render" ( dict "value"
        .Values.path.to.the.Value "context" $ "scope" $app ) }}

        */}}

        {{- define "common.tplvalues.render" -}}

        {{- $value := typeIs "string" .value | ternary .value (.value | toYaml)
        }}

        {{- if contains "{{" (toJson .value) }}
          {{- if .scope }}
              {{- tpl (cat "{{- with $.RelativeScope -}}" $value "{{- end }}") (merge (dict "RelativeScope" .scope) .context) }}
          {{- else }}
            {{- tpl $value .context }}
          {{- end }}
        {{- else }}
            {{- $value }}
        {{- end }}

        {{- end -}}


        {{/*

        Merge a list of values that contains template after rendering them.

        Merge precedence is consistent with
        http://masterminds.github.io/sprig/dicts.html#merge-mustmerge

        Usage:

        {{ include "common.tplvalues.merge" ( dict "values" (list
        .Values.path.to.the.Value1 .Values.path.to.the.Value2) "context" $ ) }}

        */}}

        {{- define "common.tplvalues.merge" -}}

        {{- $dst := dict -}}

        {{- range .values -}}

        {{- $dst = include "common.tplvalues.render" (dict "value" . "context"
        $.context "scope" $.scope) | fromYaml | merge $dst -}}

        {{- end -}}

        {{ $dst | toYaml }}

        {{- end -}}


        {{/*

        Merge a list of values that contains template after rendering them.

        Merge precedence is consistent with
        https://masterminds.github.io/sprig/dicts.html#mergeoverwrite-mustmergeoverwrite

        Usage:

        {{ include "common.tplvalues.merge-overwrite" ( dict "values" (list
        .Values.path.to.the.Value1 .Values.path.to.the.Value2) "context" $ ) }}

        */}}

        {{- define "common.tplvalues.merge-overwrite" -}}

        {{- $dst := dict -}}

        {{- range .values -}}

        {{- $dst = include "common.tplvalues.render" (dict "value" . "context"
        $.context "scope" $.scope) | fromYaml | mergeOverwrite $dst -}}

        {{- end -}}

        {{ $dst | toYaml }}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_tplvalues.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Print instructions to get a secret value.

        Usage:

        {{ include "common.utils.secret.getvalue" (dict "secret" "secret-name"
        "field" "secret-value-field" "context" $) }}

        */}}

        {{- define "common.utils.secret.getvalue" -}}

        {{- $varname := include "common.utils.fieldToEnvVar" . -}}

        export {{ $varname }}=$(kubectl get secret --namespace {{ include
        "common.names.namespace" .context | quote }} {{ .secret }} -o
        jsonpath="{.data.{{ .field }}}" | base64 -d)

        {{- end -}}


        {{/*

        Build env var name given a field

        Usage:

        {{ include "common.utils.fieldToEnvVar" dict "field" "my-password" }}

        */}}

        {{- define "common.utils.fieldToEnvVar" -}}
          {{- $fieldNameSplit := splitList "-" .field -}}
          {{- $upperCaseFieldNameSplit := list -}}

          {{- range $fieldNameSplit -}}
            {{- $upperCaseFieldNameSplit = append $upperCaseFieldNameSplit ( upper . ) -}}
          {{- end -}}

          {{ join "_" $upperCaseFieldNameSplit }}
        {{- end -}}


        {{/*

        Gets a value from .Values given

        Usage:

        {{ include "common.utils.getValueFromKey" (dict "key" "path.to.key"
        "context" $) }}

        */}}

        {{- define "common.utils.getValueFromKey" -}}

        {{- $splitKey := splitList "." .key -}}

        {{- $value := "" -}}

        {{- $latestObj := $.context.Values -}}

        {{- range $splitKey -}}
          {{- if not $latestObj -}}
            {{- printf "please review the entire path of '%s' exists in values" $.key | fail -}}
          {{- end -}}
          {{- $value = ( index $latestObj . ) -}}
          {{- $latestObj = $value -}}
        {{- end -}}

        {{- printf "%v" (default "" $value) -}} 

        {{- end -}}


        {{/*

        Returns first .Values key with a defined value or first of the list if
        all non-defined

        Usage:

        {{ include "common.utils.getKeyFromList" (dict "keys" (list
        "path.to.key1" "path.to.key2") "context" $) }}

        */}}

        {{- define "common.utils.getKeyFromList" -}}

        {{- $key := first .keys -}}

        {{- $reverseKeys := reverse .keys }}

        {{- range $reverseKeys }}
          {{- $value := include "common.utils.getValueFromKey" (dict "key" . "context" $.context ) }}
          {{- if $value -}}
            {{- $key = . }}
          {{- end -}}
        {{- end -}}

        {{- printf "%s" $key -}} 

        {{- end -}}


        {{/*

        Checksum a template at "path" containing a *single* resource
        (ConfigMap,Secret) for use in pod annotations, excluding the metadata
        (see #18376).

        Usage:

        {{ include "common.utils.checksumTemplate" (dict "path"
        "/configmap.yaml" "context" $) }}

        */}}

        {{- define "common.utils.checksumTemplate" -}}

        {{- $obj := include (print .context.Template.BasePath .path) .context |
        fromYaml -}}

        {{ omit $obj "apiVersion" "kind" "metadata" | toYaml | sha256sum }}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_utils.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Warning about using rolling tag.

        Usage:

        {{ include "common.warnings.rollingTag" .Values.path.to.the.imageRoot }}

        */}}

        {{- define "common.warnings.rollingTag" -}}


        {{- if and (contains "bitnami/" .repository) (not (.tag | toString |
        regexFind "-r\\d+$|sha256:")) }}

        WARNING: Rolling tag detected ({{ .repository }}:{{ .tag }}), please
        note that it is strongly recommended to avoid using rolling tags in a
        production environment.

        +info
        https://techdocs.broadcom.com/us/en/vmware-tanzu/application-catalog/tanzu-application-catalog/services/tac-doc/apps-tutorials-understand-rolling-tags-containers-index.html

        {{- end }}

        {{- end -}}


        {{/*

        Warning about replaced images from the original.

        Usage:

        {{ include "common.warnings.modifiedImages" (dict "images" (list
        .Values.path.to.the.imageRoot) "context" $) }}

        */}}

        {{- define "common.warnings.modifiedImages" -}}

        {{- $affectedImages := list -}}

        {{- $printMessage := false -}}

        {{- $originalImages := .context.Chart.Annotations.images -}}

        {{- range .images -}}
          {{- $fullImageName := printf (printf "%s/%s:%s" .registry .repository .tag) -}}
          {{- if not (contains $fullImageName $originalImages) }}
            {{- $affectedImages = append $affectedImages (printf "%s/%s:%s" .registry .repository .tag) -}}
            {{- $printMessage = true -}}
          {{- end -}}
        {{- end -}}

        {{- if $printMessage }}


        ⚠ SECURITY WARNING: Original containers have been substituted. This Helm
        chart was designed, tested, and validated on multiple platforms using a
        specific set of Bitnami and Tanzu Application Catalog containers.
        Substituting other containers is likely to cause degraded security and
        performance, broken chart features, and missing environment variables.


        Substituted images detected:

        {{- range $affectedImages }}
          - {{ . }}
        {{- end }}

        {{- end -}}

        {{- end -}}


        {{/*

        Warning about not setting the resource object in all deployments.

        Usage:

        {{ include "common.warnings.resources" (dict "sections" (list "path1"
        "path2") context $) }}

        Example:

        {{- include "common.warnings.resources" (dict "sections" (list
        "csiProvider.provider" "server" "volumePermissions" "") "context" $) }}

        The list in the example assumes that the following values exist:
          - csiProvider.provider.resources
          - server.resources
          - volumePermissions.resources
          - resources
        */}}

        {{- define "common.warnings.resources" -}}

        {{- $values := .context.Values -}}

        {{- $printMessage := false -}}

        {{ $affectedSections := list -}}

        {{- range .sections -}}
          {{- if eq . "" -}}
            {{/* Case where the resources section is at the root (one main deployment in the chart) */}}
            {{- if not (index $values "resources") -}}
            {{- $affectedSections = append $affectedSections "resources" -}}
            {{- $printMessage = true -}}
            {{- end -}}
          {{- else -}}
            {{/* Case where the are multiple resources sections (more than one main deployment in the chart) */}}
            {{- $keys := split "." . -}}
            {{/* We iterate through the different levels until arriving to the resource section. Example: a.b.c.resources */}}
            {{- $section := $values -}}
            {{- range $keys -}}
              {{- $section = index $section . -}}
            {{- end -}}
            {{- if not (index $section "resources") -}}
              {{/* If the section has enabled=false or replicaCount=0, do not include it */}}
              {{- if and (hasKey $section "enabled") -}}
                {{- if index $section "enabled" -}}
                  {{/* enabled=true */}}
                  {{- $affectedSections = append $affectedSections (printf "%s.resources" .) -}}
                  {{- $printMessage = true -}}
                {{- end -}}
              {{- else if and (hasKey $section "replicaCount")  -}}
                {{/* We need a casting to int because number 0 is not treated as an int by default */}}
                {{- if (gt (index $section "replicaCount" | int) 0) -}}
                  {{/* replicaCount > 0 */}}
                  {{- $affectedSections = append $affectedSections (printf "%s.resources" .) -}}
                  {{- $printMessage = true -}}
                {{- end -}}
              {{- else -}}
                {{/* Default case, add it to the affected sections */}}
                {{- $affectedSections = append $affectedSections (printf "%s.resources" .) -}}
                {{- $printMessage = true -}}
              {{- end -}}
            {{- end -}}
          {{- end -}}
        {{- end -}}

        {{- if $printMessage }}


        WARNING: There are "resources" sections in the chart not set. Using
        "resourcesPreset" is not recommended for production. For production
        installations, please set the following values according to your
        workload needs:

        {{- range $affectedSections }}
          - {{ . }}
        {{- end }}

        +info
        https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/

        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/_warnings.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.cassandra.values.existingSecret" (dict "context" $)
        }}

        Params:
          - subchart - Boolean - Optional. Whether Cassandra is used as subchart or not. Default: false
        */}}

        {{- define "common.cassandra.values.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.cassandra.dbUser.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.dbUser.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled cassandra.


        Usage:

        {{ include "common.cassandra.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.cassandra.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.cassandra.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key dbUser


        Usage:

        {{ include "common.cassandra.values.key.dbUser" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether Cassandra is used as subchart or not. Default: false
        */}}

        {{- define "common.cassandra.values.key.dbUser" -}}
          {{- if .subchart -}}
            cassandra.dbUser
          {{- else -}}
            dbUser
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_cassandra.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Validate MariaDB required passwords are not empty.


        Usage:

        {{ include "common.validations.values.mariadb.passwords" (dict "secret"
        "secretName" "subchart" false "context" $) }}

        Params:
          - secret - String - Required. Name of the secret where MariaDB values are stored, e.g: "mysql-passwords-secret"
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.validations.values.mariadb.passwords" -}}
          {{- $existingSecret := include "common.mariadb.values.auth.existingSecret" . -}}
          {{- $enabled := include "common.mariadb.values.enabled" . -}}
          {{- $architecture := include "common.mariadb.values.architecture" . -}}
          {{- $authPrefix := include "common.mariadb.values.key.auth" . -}}
          {{- $valueKeyRootPassword := printf "%s.rootPassword" $authPrefix -}}
          {{- $valueKeyUsername := printf "%s.username" $authPrefix -}}
          {{- $valueKeyPassword := printf "%s.password" $authPrefix -}}
          {{- $valueKeyReplicationPassword := printf "%s.replicationPassword" $authPrefix -}}

          {{- if and (or (not $existingSecret) (eq $existingSecret "\"\"")) (eq $enabled "true") -}}
            {{- $requiredPasswords := list -}}

            {{- $requiredRootPassword := dict "valueKey" $valueKeyRootPassword "secret" .secret "field" "mariadb-root-password" -}}
            {{- $requiredPasswords = append $requiredPasswords $requiredRootPassword -}}

            {{- $valueUsername := include "common.utils.getValueFromKey" (dict "key" $valueKeyUsername "context" .context) }}
            {{- if not (empty $valueUsername) -}}
                {{- $requiredPassword := dict "valueKey" $valueKeyPassword "secret" .secret "field" "mariadb-password" -}}
                {{- $requiredPasswords = append $requiredPasswords $requiredPassword -}}
            {{- end -}}

            {{- if (eq $architecture "replication") -}}
                {{- $requiredReplicationPassword := dict "valueKey" $valueKeyReplicationPassword "secret" .secret "field" "mariadb-replication-password" -}}
                {{- $requiredPasswords = append $requiredPasswords $requiredReplicationPassword -}}
            {{- end -}}

            {{- include "common.validations.values.multiple.empty" (dict "required" $requiredPasswords "context" .context) -}}

          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.mariadb.values.auth.existingSecret" (dict "context"
        $) }}

        Params:
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.mariadb.values.auth.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.mariadb.auth.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.auth.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled mariadb.


        Usage:

        {{ include "common.mariadb.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.mariadb.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.mariadb.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for architecture


        Usage:

        {{ include "common.mariadb.values.architecture" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.mariadb.values.architecture" -}}
          {{- if .subchart -}}
            {{- .context.Values.mariadb.architecture -}}
          {{- else -}}
            {{- .context.Values.architecture -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key auth


        Usage:

        {{ include "common.mariadb.values.key.auth" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MariaDB is used as subchart or not. Default: false
        */}}

        {{- define "common.mariadb.values.key.auth" -}}
          {{- if .subchart -}}
            mariadb.auth
          {{- else -}}
            auth
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_mariadb.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.mongodb.values.auth.existingSecret" (dict "context"
        $) }}

        Params:
          - subchart - Boolean - Optional. Whether MongoDb is used as subchart or not. Default: false
        */}}

        {{- define "common.mongodb.values.auth.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.mongodb.auth.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.auth.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled mongodb.


        Usage:

        {{ include "common.mongodb.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.mongodb.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.mongodb.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key auth


        Usage:

        {{ include "common.mongodb.values.key.auth" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MongoDB&reg; is used as subchart or not. Default: false
        */}}

        {{- define "common.mongodb.values.key.auth" -}}
          {{- if .subchart -}}
            mongodb.auth
          {{- else -}}
            auth
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for architecture


        Usage:

        {{ include "common.mongodb.values.architecture" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MongoDB&reg; is used as subchart or not. Default: false
        */}}

        {{- define "common.mongodb.values.architecture" -}}
          {{- if .subchart -}}
            {{- .context.Values.mongodb.architecture -}}
          {{- else -}}
            {{- .context.Values.architecture -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_mongodb.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.mysql.values.auth.existingSecret" (dict "context" $)
        }}

        Params:
          - subchart - Boolean - Optional. Whether MySQL is used as subchart or not. Default: false
        */}}

        {{- define "common.mysql.values.auth.existingSecret" -}}
          {{- if .subchart -}}
            {{- .context.Values.mysql.auth.existingSecret | quote -}}
          {{- else -}}
            {{- .context.Values.auth.existingSecret | quote -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled mysql.


        Usage:

        {{ include "common.mysql.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.mysql.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.mysql.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for architecture


        Usage:

        {{ include "common.mysql.values.architecture" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MySQL is used as subchart or not. Default: false
        */}}

        {{- define "common.mysql.values.architecture" -}}
          {{- if .subchart -}}
            {{- .context.Values.mysql.architecture -}}
          {{- else -}}
            {{- .context.Values.architecture -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key auth


        Usage:

        {{ include "common.mysql.values.key.auth" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether MySQL is used as subchart or not. Default: false
        */}}

        {{- define "common.mysql.values.key.auth" -}}
          {{- if .subchart -}}
            mysql.auth
          {{- else -}}
            auth
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_mysql.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to decide whether evaluate global values.


        Usage:

        {{ include "common.postgresql.values.use.global" (dict "key"
        "key-of-global" "context" $) }}

        Params:
          - key - String - Required. Field to be evaluated within global, e.g: "existingSecret"
        */}}

        {{- define "common.postgresql.values.use.global" -}}
          {{- if .context.Values.global -}}
            {{- if .context.Values.global.postgresql -}}
              {{- index .context.Values.global.postgresql .key | quote -}}
            {{- end -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for existingSecret.


        Usage:

        {{ include "common.postgresql.values.existingSecret" (dict "context" $)
        }}

        */}}

        {{- define "common.postgresql.values.existingSecret" -}}
          {{- $globalValue := include "common.postgresql.values.use.global" (dict "key" "existingSecret" "context" .context) -}}

          {{- if .subchart -}}
            {{- default (.context.Values.postgresql.existingSecret | quote) $globalValue -}}
          {{- else -}}
            {{- default (.context.Values.existingSecret | quote) $globalValue -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled postgresql.


        Usage:

        {{ include "common.postgresql.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.postgresql.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.postgresql.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key postgressPassword.


        Usage:

        {{ include "common.postgresql.values.key.postgressPassword" (dict
        "subchart" "true" "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether postgresql is used as subchart or not. Default: false
        */}}

        {{- define "common.postgresql.values.key.postgressPassword" -}}
          {{- $globalValue := include "common.postgresql.values.use.global" (dict "key" "postgresqlUsername" "context" .context) -}}

          {{- if not $globalValue -}}
            {{- if .subchart -}}
              postgresql.postgresqlPassword
            {{- else -}}
              postgresqlPassword
            {{- end -}}
          {{- else -}}
            global.postgresql.postgresqlPassword
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for enabled.replication.


        Usage:

        {{ include "common.postgresql.values.enabled.replication" (dict
        "subchart" "true" "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether postgresql is used as subchart or not. Default: false
        */}}

        {{- define "common.postgresql.values.enabled.replication" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.postgresql.replication.enabled -}}
          {{- else -}}
            {{- printf "%v" .context.Values.replication.enabled -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right value for the key
        replication.password.


        Usage:

        {{ include "common.postgresql.values.key.replicationPassword" (dict
        "subchart" "true" "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether postgresql is used as subchart or not. Default: false
        */}}

        {{- define "common.postgresql.values.key.replicationPassword" -}}
          {{- if .subchart -}}
            postgresql.replication.password
          {{- else -}}
            replication.password
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_postgresql.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}



        {{/* vim: set filetype=mustache: */}}

        {{/*

        Auxiliary function to get the right value for enabled redis.


        Usage:

        {{ include "common.redis.values.enabled" (dict "context" $) }}

        */}}

        {{- define "common.redis.values.enabled" -}}
          {{- if .subchart -}}
            {{- printf "%v" .context.Values.redis.enabled -}}
          {{- else -}}
            {{- printf "%v" (not .context.Values.enabled) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Auxiliary function to get the right prefix path for the values


        Usage:

        {{ include "common.redis.values.key.prefix" (dict "subchart" "true"
        "context" $) }}

        Params:
          - subchart - Boolean - Optional. Whether redis is used as subchart or not. Default: false
        */}}

        {{- define "common.redis.values.keys.prefix" -}}
          {{- if .subchart -}}redis.{{- else -}}{{- end -}}
        {{- end -}}


        {{/*

        Checks whether the redis chart's includes the standarizations (version
        >= 14)


        Usage:

        {{ include "common.redis.values.standarized.version" (dict "context" $)
        }}

        */}}

        {{- define "common.redis.values.standarized.version" -}}

          {{- $standarizedAuth := printf "%s%s" (include "common.redis.values.keys.prefix" .) "auth" -}}
          {{- $standarizedAuthValues := include "common.utils.getValueFromKey" (dict "key" $standarizedAuth "context" .context) }}

          {{- if $standarizedAuthValues -}}
            {{- true -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_redis.tpl
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}

        {{/*

        Validate values must not be empty.


        Usage:

        {{- $validateValueConf00 := (dict "valueKey" "path.to.value" "secret"
        "secretName" "field" "password-00") -}}

        {{- $validateValueConf01 := (dict "valueKey" "path.to.value" "secret"
        "secretName" "field" "password-01") -}}

        {{ include "common.validations.values.empty" (dict "required" (list
        $validateValueConf00 $validateValueConf01) "context" $) }}


        Validate value params:
          - valueKey - String - Required. The path to the validating value in the values.yaml, e.g: "mysql.password"
          - secret - String - Optional. Name of the secret where the validating value is generated/stored, e.g: "mysql-passwords-secret"
          - field - String - Optional. Name of the field in the secret data, e.g: "mysql-password"
        */}}

        {{- define "common.validations.values.multiple.empty" -}}
          {{- range .required -}}
            {{- include "common.validations.values.single.empty" (dict "valueKey" .valueKey "secret" .secret "field" .field "context" $.context) -}}
          {{- end -}}
        {{- end -}}


        {{/*

        Validate a value must not be empty.


        Usage:

        {{ include "common.validations.value.empty" (dict "valueKey"
        "mariadb.password" "secret" "secretName" "field" "my-password"
        "subchart" "subchart" "context" $) }}


        Validate value params:
          - valueKey - String - Required. The path to the validating value in the values.yaml, e.g: "mysql.password"
          - secret - String - Optional. Name of the secret where the validating value is generated/stored, e.g: "mysql-passwords-secret"
          - field - String - Optional. Name of the field in the secret data, e.g: "mysql-password"
          - subchart - String - Optional - Name of the subchart that the validated password is part of.
        */}}

        {{- define "common.validations.values.single.empty" -}}
          {{- $value := include "common.utils.getValueFromKey" (dict "key" .valueKey "context" .context) }}
          {{- $subchart := ternary "" (printf "%s." .subchart) (empty .subchart) }}

          {{- if not $value -}}
            {{- $varname := "my-value" -}}
            {{- $getCurrentValue := "" -}}
            {{- if and .secret .field -}}
              {{- $varname = include "common.utils.fieldToEnvVar" . -}}
              {{- $getCurrentValue = printf " To get the current value:\n\n        %s\n" (include "common.utils.secret.getvalue" .) -}}
            {{- end -}}
            {{- printf "\n    '%s' must not be empty, please add '--set %s%s=$%s' to the command.%s" .valueKey $subchart .valueKey $varname $getCurrentValue -}}
          {{- end -}}
        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/templates/validations/_validations.tpl
    - content: |
        # Copyright Broadcom, Inc. All Rights Reserved.
        # SPDX-License-Identifier: APACHE-2.0

        ## bitnami/common
        ## It is required by CI/CD tools and processes.
        ## @skip exampleValue
        ##
        exampleValue: common-chart
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/charts/common/values.yaml
    - content: >
        CHART NAME: {{ .Chart.Name }}

        CHART VERSION: {{ .Chart.Version }}

        APP VERSION: {{ .Chart.AppVersion }}


        Did you know there are enterprise versions of the Bitnami catalog? For
        enhanced secure software supply chain features, unlimited pulls from
        Docker, LTS support, or application customization, see Bitnami Premium
        or Tanzu Application Catalog. See
        https://www.arrow.com/globalecs/na/vendors/bitnami for more information.


        {{- if and (not .Values.auth.client.enabled) (eq .Values.service.type
        "LoadBalancer") }}

        -------------------------------------------------------------------------------
         WARNING

            By specifying "serviceType=LoadBalancer" and not specifying "auth.enabled=true"
            you have most likely exposed the ZooKeeper service externally without any
            authentication mechanism.

            For security reasons, we strongly suggest that you switch to "ClusterIP" or
            "NodePort". As alternative, you can also specify a valid password on the
            "auth.clientPassword" parameter.

        -------------------------------------------------------------------------------

        {{- end }}


        ** Please be patient while the chart is being deployed **


        {{- if .Values.diagnosticMode.enabled }}

        The chart has been deployed in diagnostic mode. All probes have been
        disabled and the command has been overwritten with:

          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 4 }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 4 }}

        Get the list of pods by executing:

          kubectl get pods --namespace {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}

        Access the pod you want to debug by executing

          kubectl exec --namespace {{ .Release.Namespace }} -ti <NAME OF THE POD> -- bash

        In order to replicate the container startup scripts execute this
        command:

            /opt/bitnami/scripts/zookeeper/entrypoint.sh /opt/bitnami/scripts/zookeeper/run.sh

        {{- else }}


        ZooKeeper can be accessed via port {{ .Values.service.ports.client }} on
        the following DNS name from within your cluster:

            {{ template "common.names.fullname" . }}.{{ template "zookeeper.namespace" . }}.svc.{{ .Values.clusterDomain }}

        To connect to your ZooKeeper server run the following commands:

            export POD_NAME=$(kubectl get pods --namespace {{ template "zookeeper.namespace" . }} -l "app.kubernetes.io/name={{ template "common.names.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=zookeeper" -o jsonpath="{.items[0].metadata.name}")
            kubectl exec -it $POD_NAME -- zkCli.sh

        To connect to your ZooKeeper server from outside the cluster execute the
        following commands:


        {{- if eq .Values.service.type "NodePort" }}

            export NODE_IP=$(kubectl get nodes --namespace {{ template "zookeeper.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
            export NODE_PORT=$(kubectl get --namespace {{ template "zookeeper.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "common.names.fullname" . }})
            zkCli.sh $NODE_IP:$NODE_PORT

        {{- else if eq .Values.service.type "LoadBalancer" }}

          NOTE: It may take a few minutes for the LoadBalancer IP to be available.
                Watch the status with: 'kubectl get svc --namespace {{ template "zookeeper.namespace" . }} -w {{ template "common.names.fullname" . }}'

            export SERVICE_IP=$(kubectl get svc --namespace {{ template "zookeeper.namespace" . }} {{ template "common.names.fullname" . }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
            zkCli.sh $SERVICE_IP:{{ .Values.service.ports.client }}

        {{- else if eq .Values.service.type "ClusterIP" }}

            kubectl port-forward --namespace {{ template "zookeeper.namespace" . }} svc/{{ template "common.names.fullname" . }} {{ .Values.service.ports.client }}:{{ .Values.containerPorts.client }} &
            zkCli.sh 127.0.0.1:{{ .Values.service.ports.client }}

        {{- end }}

        {{- end }}


        {{- include "zookeeper.validateValues" . }}

        {{- include "zookeeper.checkRollingTags" . }}

        {{- include "common.warnings.resources" (dict "sections" (list "" "tls"
        "volumePermissions") "context" $) }}

        {{- include "common.warnings.modifiedImages" (dict "images" (list
        .Values.image .Values.volumePermissions.image) "context" $) }}

        {{- include "common.errors.insecureImages" (dict "images" (list
        .Values.image .Values.volumePermissions.image) "context" $) }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/NOTES.txt
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Return the proper ZooKeeper image name

        */}}

        {{- define "zookeeper.image" -}}

        {{ include "common.images.image" (dict "imageRoot" .Values.image
        "global" .Values.global) }}

        {{- end -}}


        {{/*

        Return the proper image name (for the init container volume-permissions
        image)

        */}}

        {{- define "zookeeper.volumePermissions.image" -}}

        {{ include "common.images.image" (dict "imageRoot"
        .Values.volumePermissions.image "global" .Values.global) }}

        {{- end -}}


        {{/*

        Return the proper Docker Image Registry Secret Names

        */}}

        {{- define "zookeeper.imagePullSecrets" -}}

        {{- include "common.images.pullSecrets" (dict "images" (list
        .Values.image .Values.volumePermissions.image) "global" .Values.global)
        -}}

        {{- end -}}


        {{/*

        Check if there are rolling tags in the images

        */}}

        {{- define "zookeeper.checkRollingTags" -}}

        {{- include "common.warnings.rollingTag" .Values.image }}

        {{- include "common.warnings.rollingTag" .Values.volumePermissions.image
        }}

        {{- end -}}


        {{/*

        Return ZooKeeper Namespace to use

        */}}

        {{- define "zookeeper.namespace" -}}

        {{- if .Values.namespaceOverride -}}
            {{- .Values.namespaceOverride -}}
        {{- else -}}
            {{- .Release.Namespace -}}
        {{- end -}}

        {{- end -}}


        {{/*
         Create the name of the service account to use
         */}}
        {{- define "zookeeper.serviceAccountName" -}}

        {{- if .Values.serviceAccount.create -}}
            {{ default (include "common.names.fullname" .) .Values.serviceAccount.name }}
        {{- else -}}
            {{ default "default" .Values.serviceAccount.name }}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the ZooKeeper client-server authentication credentials secret

        */}}

        {{- define "zookeeper.client.secretName" -}}

        {{- if .Values.auth.client.existingSecret -}}
            {{- printf "%s" (tpl .Values.auth.client.existingSecret $) -}}
        {{- else -}}
            {{- printf "%s-client-auth" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the ZooKeeper server-server authentication credentials secret

        */}}

        {{- define "zookeeper.quorum.secretName" -}}

        {{- if .Values.auth.quorum.existingSecret -}}
            {{- printf "%s" (tpl .Values.auth.quorum.existingSecret $) -}}
        {{- else -}}
            {{- printf "%s-quorum-auth" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a ZooKeeper client-server authentication credentials
        secret object should be created

        */}}

        {{- define "zookeeper.client.createSecret" -}}

        {{- if and .Values.auth.client.enabled (empty
        .Values.auth.client.existingSecret) -}}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a ZooKeeper server-server authentication credentials
        secret object should be created

        */}}

        {{- define "zookeeper.quorum.createSecret" -}}

        {{- if and .Values.auth.quorum.enabled (empty
        .Values.auth.quorum.existingSecret) -}}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the ZooKeeper configuration ConfigMap name

        */}}

        {{- define "zookeeper.configmapName" -}}

        {{- if .Values.existingConfigmap -}}
            {{- printf "%s" (tpl .Values.existingConfigmap $) -}}
        {{- else -}}
            {{- printf "%s" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a ConfigMap object should be created for ZooKeeper
        configuration

        */}}

        {{- define "zookeeper.createConfigmap" -}}

        {{- if and .Values.configuration (not .Values.existingConfigmap) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a TLS secret should be created for ZooKeeper quorum

        */}}

        {{- define "zookeeper.quorum.createTlsSecret" -}}

        {{- if and .Values.tls.quorum.enabled .Values.tls.quorum.autoGenerated
        (not .Values.tls.quorum.existingSecret) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the secret containing ZooKeeper quorum TLS certificates

        */}}

        {{- define "zookeeper.quorum.tlsSecretName" -}}

        {{- $secretName := .Values.tls.quorum.existingSecret -}}

        {{- if $secretName -}}
            {{- printf "%s" (tpl $secretName $) -}}
        {{- else -}}
            {{- printf "%s-quorum-crt" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a secret containing the Keystore and Truststore password
        should be created for ZooKeeper quorum

        */}}

        {{- define "zookeeper.quorum.createTlsPasswordsSecret" -}}

        {{- if and .Values.tls.quorum.enabled (not
        .Values.tls.quorum.passwordsSecretName) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the name of the secret containing the Keystore and Truststore
        password

        */}}

        {{- define "zookeeper.quorum.tlsPasswordsSecret" -}}

        {{- $secretName := .Values.tls.quorum.passwordsSecretName -}}

        {{- if $secretName -}}
            {{- printf "%s" (tpl $secretName $) -}}
        {{- else -}}
            {{- printf "%s-quorum-tls-pass" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a TLS secret should be created for ZooKeeper client

        */}}

        {{- define "zookeeper.client.createTlsSecret" -}}

        {{- if and .Values.tls.client.enabled .Values.tls.client.autoGenerated
        (not .Values.tls.client.existingSecret) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the secret containing ZooKeeper client TLS certificates

        */}}

        {{- define "zookeeper.client.tlsSecretName" -}}

        {{- $secretName := .Values.tls.client.existingSecret -}}

        {{- if $secretName -}}
            {{- printf "%s" (tpl $secretName $) -}}
        {{- else -}}
            {{- printf "%s-client-crt" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the quorum keystore key to be retrieved from
        tls.quorum.existingSecret.

        */}}

        {{- define "zookeeper.quorum.tlsKeystoreKey" -}}

        {{- if and .Values.tls.quorum.existingSecret
        .Values.tls.quorum.existingSecretKeystoreKey -}}
            {{- printf "%s" .Values.tls.quorum.existingSecretKeystoreKey -}}
        {{- else -}}
            {{- printf "zookeeper.keystore.jks" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the quorum truststore key to be retrieved from
        tls.quorum.existingSecret.

        */}}

        {{- define "zookeeper.quorum.tlsTruststoreKey" -}}

        {{- if and .Values.tls.quorum.existingSecret
        .Values.tls.quorum.existingSecretTruststoreKey -}}
            {{- printf "%s" .Values.tls.quorum.existingSecretTruststoreKey -}}
        {{- else -}}
            {{- printf "zookeeper.truststore.jks" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the client keystore key to be retrieved from
        tls.client.existingSecret.

        */}}

        {{- define "zookeeper.client.tlsKeystoreKey" -}}

        {{- if and .Values.tls.client.existingSecret
        .Values.tls.client.existingSecretKeystoreKey -}}
            {{- printf "%s" .Values.tls.client.existingSecretKeystoreKey -}}
        {{- else -}}
            {{- printf "zookeeper.keystore.jks" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the client truststore key to be retrieved from
        tls.client.existingSecret.

        */}}

        {{- define "zookeeper.client.tlsTruststoreKey" -}}

        {{- if and .Values.tls.client.existingSecret
        .Values.tls.client.existingSecretTruststoreKey -}}
            {{- printf "%s" .Values.tls.client.existingSecretTruststoreKey -}}
        {{- else -}}
            {{- printf "zookeeper.truststore.jks" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a secret containing the Keystore and Truststore password
        should be created for ZooKeeper client

        */}}

        {{- define "zookeeper.client.createTlsPasswordsSecret" -}}

        {{- if and .Values.tls.client.enabled (not
        .Values.tls.client.passwordsSecretName) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the name of the secret containing the Keystore and Truststore
        password

        */}}

        {{- define "zookeeper.client.tlsPasswordsSecret" -}}

        {{- $secretName := .Values.tls.client.passwordsSecretName -}}

        {{- if $secretName -}}
            {{- printf "%s" (tpl $secretName $) -}}
        {{- else -}}
            {{- printf "%s-client-tls-pass" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the quorum keystore password key to be retrieved from
        tls.quorum.passwordSecretName.

        */}}

        {{- define "zookeeper.quorum.tlsPasswordKeystoreKey" -}}

        {{- if and .Values.tls.quorum.passwordsSecretName
        .Values.tls.quorum.passwordsSecretKeystoreKey -}}
            {{- printf "%s" .Values.tls.quorum.passwordsSecretKeystoreKey -}}
        {{- else -}}
            {{- printf "keystore-password" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the quorum truststore password key to be retrieved from
        tls.quorum.passwordSecretName.

        */}}

        {{- define "zookeeper.quorum.tlsPasswordTruststoreKey" -}}

        {{- if and .Values.tls.quorum.passwordsSecretName
        .Values.tls.quorum.passwordsSecretTruststoreKey -}}
            {{- printf "%s" .Values.tls.quorum.passwordsSecretTruststoreKey -}}
        {{- else -}}
            {{- printf "truststore-password" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the client keystore password key to be retrieved from
        tls.client.passwordSecretName.

        */}}

        {{- define "zookeeper.client.tlsPasswordKeystoreKey" -}}

        {{- if and .Values.tls.client.passwordsSecretName
        .Values.tls.client.passwordsSecretKeystoreKey -}}
            {{- printf "%s" .Values.tls.client.passwordsSecretKeystoreKey -}}
        {{- else -}}
            {{- printf "keystore-password" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Get the client truststore password key to be retrieved from
        tls.client.passwordSecretName.

        */}}

        {{- define "zookeeper.client.tlsPasswordTruststoreKey" -}}

        {{- if and .Values.tls.client.passwordsSecretName
        .Values.tls.client.passwordsSecretTruststoreKey -}}
            {{- printf "%s" .Values.tls.client.passwordsSecretTruststoreKey -}}
        {{- else -}}
            {{- printf "truststore-password" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Compile all warnings into a single message.

        */}}

        {{- define "zookeeper.validateValues" -}}

        {{- $messages := list -}}

        {{- $messages := append $messages (include
        "zookeeper.validateValues.client.auth" .) -}}

        {{- $messages := append $messages (include
        "zookeeper.validateValues.quorum.auth" .) -}}

        {{- $messages := append $messages (include
        "zookeeper.validateValues.client.tls" .) -}}

        {{- $messages := append $messages (include
        "zookeeper.validateValues.quorum.tls" .) -}}

        {{- $messages := without $messages "" -}}

        {{- $message := join "\n" $messages -}}


        {{- if $message -}}

        {{-   printf "\nVALUES VALIDATION:\n%s" $message | fail -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Validate values of ZooKeeper - Authentication enabled

        */}}

        {{- define "zookeeper.validateValues.client.auth" -}}

        {{- if and .Values.auth.client.enabled (not
        .Values.auth.client.existingSecret) (or (not
        .Values.auth.client.clientUser) (not .Values.auth.client.serverUsers))
        }}

        zookeeper: auth.client.enabled
            In order to enable client-server authentication, you need to provide the list
            of users to be created and the user to use for clients authentication.
        {{- end -}}

        {{- end -}}


        {{/*

        Validate values of ZooKeeper - Authentication enabled

        */}}

        {{- define "zookeeper.validateValues.quorum.auth" -}}

        {{- if and .Values.auth.quorum.enabled (not
        .Values.auth.quorum.existingSecret) (or (not
        .Values.auth.quorum.learnerUser) (not .Values.auth.quorum.serverUsers))
        }}

        zookeeper: auth.quorum.enabled
            In order to enable server-server authentication, you need to provide the list
            of users to be created and the user to use for quorum authentication.
        {{- end -}}

        {{- end -}}


        {{/*

        Validate values of ZooKeeper - Client TLS enabled

        */}}

        {{- define "zookeeper.validateValues.client.tls" -}}

        {{- if and .Values.tls.client.enabled (not
        .Values.tls.client.autoGenerated) (not
        .Values.tls.client.existingSecret) }}

        zookeeper: tls.client.enabled
            In order to enable Client TLS encryption, you also need to provide
            an existing secret containing the Keystore and Truststore or
            enable auto-generated certificates.
        {{- end -}}

        {{- end -}}


        {{/*

        Validate values of ZooKeeper - Quorum TLS enabled

        */}}

        {{- define "zookeeper.validateValues.quorum.tls" -}}

        {{- if and .Values.tls.quorum.enabled (not
        .Values.tls.quorum.autoGenerated) (not
        .Values.tls.quorum.existingSecret) }}

        zookeeper: tls.quorum.enabled
            In order to enable Quorum TLS, you also need to provide
            an existing secret containing the Keystore and Truststore or
            enable auto-generated certificates.
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/_helpers.tpl
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if (include "zookeeper.createConfigmap" .) }}
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        data:
          zoo.cfg: |-
            {{- include "common.tplvalues.render" ( dict "value" .Values.configuration "context" $ ) | nindent 4 }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/configmap.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- range .Values.extraDeploy }}
        ---
        {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/extra-list.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if .Values.metrics.enabled }}
        apiVersion: v1
        kind: Service
        metadata:
          name: {{ template "common.names.fullname" . }}-metrics
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: metrics
          {{- if or .Values.metrics.service.annotations .Values.commonAnnotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.metrics.service.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          type: {{ .Values.metrics.service.type }}
          ports:
            - name: http-metrics
              port: {{ .Values.metrics.service.port }}
              targetPort: metrics
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/metrics-svc.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if .Values.networkPolicy.enabled }}

        kind: NetworkPolicy

        apiVersion: {{ include "common.capabilities.networkPolicy.apiVersion" .
        }}

        metadata:
          name: {{ include "common.names.fullname" . }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          podSelector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
          policyTypes:
            - Ingress
            - Egress
          {{- if .Values.networkPolicy.allowExternalEgress }}
          egress:
            - {}
          {{- else }}
          egress:
            # Allow dns resolution
            - ports:
                - port: 53
                  protocol: UDP
                - port: 53
                  protocol: TCP
            # Allow internal communications between nodes
            - ports:
                - port: {{ .Values.containerPorts.follower }}
                - port: {{ .Values.containerPorts.election }}
              to:
                - podSelector:
                    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 14 }}
            {{- if .Values.networkPolicy.extraEgress }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.rts.networkPolicy.extraEgress "context" $ ) | nindent 4 }}
            {{- end }}
          {{- end }}
          ingress:
            # Allow inbound connections to ZooKeeper
            - ports:
                - port: {{ .Values.containerPorts.client }}
                {{- if .Values.metrics.enabled }}
                - port: {{ coalesce .Values.metrics.containerPort .Values.containerPorts.metrics }}
                {{- end }}
              {{- if not .Values.networkPolicy.allowExternal }}
              from:
                - podSelector:
                    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 14 }}
                - podSelector:
                    matchLabels:
                      {{ include "common.names.fullname" . }}-client: "true"
                - podSelector:
                    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 14 }}
                {{- if .Values.networkPolicy.ingressNSMatchLabels }}
                - namespaceSelector:
                    matchLabels:
                      {{- range $key, $value := .Values.networkPolicy.ingressNSMatchLabels }}
                      {{ $key | quote }}: {{ $value | quote }}
                      {{- end }}
                  {{- if .Values.networkPolicy.ingressNSPodMatchLabels }}
                  podSelector:
                    matchLabels:
                      {{- range $key, $value := .Values.networkPolicy.ingressNSPodMatchLabels }}
                      {{ $key | quote }}: {{ $value | quote }}
                      {{- end }}
                  {{- end }}
                {{- end }}
              {{- end }}
            # Allow internal communications between nodes
            - ports:
                - port: {{ .Values.containerPorts.follower }}
                - port: {{ .Values.containerPorts.election }}
              from:
                - podSelector:
                    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 14 }}
            {{- if .Values.networkPolicy.extraIngress }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.networkPolicy.extraIngress "context" $ ) | nindent 4 }}
            {{- end }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/networkpolicy.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if .Values.pdb.create }}
        apiVersion: {{ include "common.capabilities.policy.apiVersion" . }}
        kind: PodDisruptionBudget
        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          {{- if .Values.pdb.minAvailable }}
          minAvailable: {{ .Values.pdb.minAvailable }}
          {{- end  }}
          {{- if or .Values.pdb.maxUnavailable (not .Values.pdb.minAvailable) }}
          maxUnavailable: {{ .Values.pdb.maxUnavailable | default 1 }}
          {{- end  }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
              app.kubernetes.io/component: zookeeper
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/pdb.yaml
    - content: >+
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if and .Values.metrics.enabled
        .Values.metrics.prometheusRule.enabled
        .Values.metrics.prometheusRule.rules }}

        apiVersion: monitoring.coreos.com/v1

        kind: PrometheusRule

        metadata:
          name: {{ include "common.names.fullname" . }}
          namespace: {{ default .Release.Namespace .Values.metrics.prometheusRule.namespace | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: metrics
            {{- if .Values.metrics.prometheusRule.additionalLabels }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.prometheusRule.additionalLabels "context" $ ) | nindent 4 }}
            {{- end }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          groups:
            - name: {{ include "common.names.fullname" . }}
              rules: {{- toYaml .Values.metrics.prometheusRule.rules | nindent 8 }}
        {{- end }}

      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/prometheusrule.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: {{ printf "%s-scripts" (include "common.names.fullname" .) }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        data:
          init-certs.sh: |-
            #!/bin/bash

            {{- if .Values.tls.client.enabled }}
            if [[ -f "/certs/client/tls.key" ]] && [[ -f "/certs/client/tls.crt" ]] && [[ -f "/certs/client/ca.crt" ]]; then
                if [[ -f "/opt/bitnami/zookeeper/config/certs/client/.initialized" ]]; then
                    exit 0
                fi
                openssl pkcs12 -export -in "/certs/client/tls.crt" \
                  -passout pass:"${ZOO_TLS_CLIENT_KEYSTORE_PASSWORD}" \
                  -inkey "/certs/client/tls.key" \
                  -out "/tmp/keystore.p12"
                keytool -importkeystore -srckeystore "/tmp/keystore.p12" \
                  -srcstoretype PKCS12 \
                  -srcstorepass "${ZOO_TLS_CLIENT_KEYSTORE_PASSWORD}" \
                  -deststorepass "${ZOO_TLS_CLIENT_KEYSTORE_PASSWORD}" \
                  -destkeystore "/opt/bitnami/zookeeper/config/certs/client/zookeeper.keystore.jks"
                rm "/tmp/keystore.p12"
                keytool -import -file "/certs/client/ca.crt" \
                      -keystore "/opt/bitnami/zookeeper/config/certs/client/zookeeper.truststore.jks" \
                      -storepass "${ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD}" \
                      -noprompt
                touch /opt/bitnami/zookeeper/config/certs/client/.initialized
            {{- if .Values.tls.client.autoGenerated }}
            else
                echo "Couldn't find the expected PEM certificates! They are mandatory when Client encryption via TLS is enabled."
                exit 1
            fi
            {{- else }}
            elif [[ -f {{ printf "/certs/client/%s" (include "zookeeper.client.tlsTruststoreKey" .) | quote }} ]] && [[ -f {{ printf "/certs/client/%s" (include "zookeeper.client.tlsKeystoreKey" .) | quote }} ]]; then
                cp {{ printf "/certs/client/%s" (include "zookeeper.client.tlsTruststoreKey" .) | quote }} "/opt/bitnami/zookeeper/config/certs/client/zookeeper.truststore.jks"
                cp {{ printf "/certs/client/%s" (include "zookeeper.client.tlsKeystoreKey" .) | quote }} "/opt/bitnami/zookeeper/config/certs/client/zookeeper.keystore.jks"
            else
                echo "Couldn't find the expected Java Key Stores (JKS) files! They are mandatory when Client encryption via TLS is enabled."
                exit 1
            fi
            {{- end }}
            {{- end }}
            {{- if .Values.tls.quorum.enabled }}
            if [[ -f "/certs/quorum/tls.key" ]] && [[ -f "/certs/quorum/tls.crt" ]] && [[ -f "/certs/quorum/ca.crt" ]]; then
                openssl pkcs12 -export -in "/certs/quorum/tls.crt" \
                  -passout pass:"${ZOO_TLS_QUORUM_KEYSTORE_PASSWORD}" \
                  -inkey "/certs/quorum/tls.key" \
                  -out "/tmp/keystore.p12"
                keytool -importkeystore -srckeystore "/tmp/keystore.p12" \
                  -srcstoretype PKCS12 \
                  -srcstorepass "${ZOO_TLS_QUORUM_KEYSTORE_PASSWORD}" \
                  -deststorepass "${ZOO_TLS_QUORUM_KEYSTORE_PASSWORD}" \
                  -destkeystore "/opt/bitnami/zookeeper/config/certs/quorum/zookeeper.keystore.jks"
                rm "/tmp/keystore.p12"
                keytool -import -file "/certs/quorum/ca.crt" \
                      -keystore "/opt/bitnami/zookeeper/config/certs/quorum/zookeeper.truststore.jks" \
                      -storepass "${ZOO_TLS_QUORUM_TRUSTSTORE_PASSWORD}" \
                      -noprompt
            {{- if .Values.tls.quorum.autoGenerated }}
            else
                echo "Couldn't find the expected PEM certificates! They are mandatory when encryption Quorum via TLS is enabled."
                exit 1
            fi
            {{- else }}
            elif [[ -f {{ printf "/certs/quorum/%s" (include "zookeeper.quorum.tlsTruststoreKey" .) | quote }} ]] && [[ -f {{ printf "/certs/quorum/%s" (include "zookeeper.quorum.tlsKeystoreKey" .) | quote }} ]]; then
                cp {{ printf "/certs/quorum/%s" (include "zookeeper.quorum.tlsTruststoreKey" .) | quote }} "/opt/bitnami/zookeeper/config/certs/quorum/zookeeper.truststore.jks"
                cp {{ printf "/certs/quorum/%s" (include "zookeeper.quorum.tlsKeystoreKey" .) | quote }} "/opt/bitnami/zookeeper/config/certs/quorum/zookeeper.keystore.jks"
            else
                echo "Couldn't find the expected Java Key Stores (JKS) files! They are mandatory when Quorum encryption via TLS is enabled."
                exit 1
            fi
            {{- end }}
            {{- end }}
          setup.sh: |-
            #!/bin/bash

            # Execute entrypoint as usual after obtaining ZOO_SERVER_ID
            # check ZOO_SERVER_ID in persistent volume via myid
            # if not present, set based on POD hostname
            if [[ -f "/bitnami/zookeeper/data/myid" ]]; then
                export ZOO_SERVER_ID="$(cat /bitnami/zookeeper/data/myid)"
            else
                HOSTNAME="$(hostname -s)"
                if [[ $HOSTNAME =~ (.*)-([0-9]+)$ ]]; then
                    ORD=${BASH_REMATCH[2]}
                    export ZOO_SERVER_ID="$((ORD + {{ .Values.minServerId }} ))"
                else
                    echo "Failed to get index from hostname $HOSTNAME"
                    exit 1
                fi
            fi
            exec /entrypoint.sh /run.sh
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/scripts-configmap.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if (include "zookeeper.client.createSecret" .) }}
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ printf "%s-client-auth" (include "common.names.fullname" .) }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: Opaque
        data:
          client-password: {{ include "common.secrets.passwords.manage" (dict "secret" (printf "%s-client-auth" (include "common.names.fullname" .)) "key" "client-password" "providedValues" (list "auth.client.clientPassword") "context" $) }}
          server-password: {{ include "common.secrets.passwords.manage" (dict "secret" (printf "%s-client-auth" (include "common.names.fullname" .)) "key" "server-password" "providedValues" (list "auth.client.serverPasswords") "context" $) }}
        {{- end }}
        {{- if (include "zookeeper.quorum.createSecret" .) }}
        ---
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ printf "%s-quorum-auth" (include "common.names.fullname" .) }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: Opaque
        data:
          quorum-learner-password: {{ include "common.secrets.passwords.manage" (dict "secret" (printf "%s-quorum-auth" (include "common.names.fullname" .)) "key" "quorum-learner-password" "providedValues" (list "auth.quorum.learnerPassword") "context" $) }}
          quorum-server-password: {{ include "common.secrets.passwords.manage" (dict "secret" (printf "%s-quorum-auth" (include "common.names.fullname" .)) "key" "quorum-server-password" "providedValues" (list "auth.quorum.serverPasswords") "context" $) }}
        {{- end }}
        {{- if (include "zookeeper.client.createTlsPasswordsSecret" .) }}
        ---
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ template "common.names.fullname" . }}-client-tls-pass
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: Opaque
        data:
          keystore-password: {{ default (randAlphaNum 10) .Values.tls.client.keystorePassword | b64enc | quote }}
          truststore-password: {{ default (randAlphaNum 10) .Values.tls.client.truststorePassword | b64enc | quote }}
        {{- end }}
        {{- if (include "zookeeper.quorum.createTlsPasswordsSecret" .) }}
        ---
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ template "common.names.fullname" . }}-quorum-tls-pass
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: Opaque
        data:
          keystore-password: {{ default (randAlphaNum 10) .Values.tls.quorum.keystorePassword | b64enc | quote }}
          truststore-password: {{ default (randAlphaNum 10) .Values.tls.quorum.truststorePassword | b64enc | quote }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/secrets.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if .Values.serviceAccount.create }}

        apiVersion: v1

        kind: ServiceAccount

        metadata:
          name: {{ template "zookeeper.serviceAccountName" . }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
            role: zookeeper
          {{- if or .Values.commonAnnotations .Values.serviceAccount.annotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.serviceAccount.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        automountServiceAccountToken: {{
        .Values.serviceAccount.automountServiceAccountToken }}

        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/serviceaccount.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if and .Values.metrics.enabled
        .Values.metrics.serviceMonitor.enabled }}

        apiVersion: monitoring.coreos.com/v1

        kind: ServiceMonitor

        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ default .Release.Namespace .Values.metrics.serviceMonitor.namespace | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: metrics
            {{- if .Values.metrics.serviceMonitor.additionalLabels }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.additionalLabels "context" $ ) | nindent 4 }}
            {{- end }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          {{- if .Values.metrics.serviceMonitor.jobLabel }}
          jobLabel: {{ .Values.metrics.serviceMonitor.jobLabel }}
          {{- end }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 6 }}
              {{- if .Values.metrics.serviceMonitor.selector }}
              {{- include "common.tplvalues.render" (dict "value" .Values.metrics.serviceMonitor.selector "context" $) | nindent 6 }}
              {{- end }}
              app.kubernetes.io/component: metrics
          endpoints:
            - port: http-metrics
              path: "/metrics"
              {{- if .Values.metrics.serviceMonitor.interval }}
              interval: {{ .Values.metrics.serviceMonitor.interval }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.scrapeTimeout }}
              scrapeTimeout: {{ .Values.metrics.serviceMonitor.scrapeTimeout }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.relabelings }}
              relabelings: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.relabelings "context" $) | nindent 6 }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.metricRelabelings }}
              metricRelabelings: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.metricRelabelings "context" $) | nindent 6 }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.honorLabels }}
              honorLabels: {{ .Values.metrics.serviceMonitor.honorLabels }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.scheme }}
              scheme: {{ .Values.metrics.serviceMonitor.scheme }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.tlsConfig }}
              tlsConfig: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.tlsConfig "context" $ ) | nindent 8 }}
              {{- end }}
          namespaceSelector:
            matchNames:
              - {{ template "zookeeper.namespace" . }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/servicemonitor.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
        kind: StatefulSet
        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
            role: zookeeper
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          replicas: {{ .Values.replicaCount }}
          revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
          podManagementPolicy: {{ .Values.podManagementPolicy }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
              app.kubernetes.io/component: zookeeper
          serviceName: {{ printf "%s-%s" (include "common.names.fullname" .) (default "headless" .Values.service.headless.servicenameOverride) | trunc 63 | trimSuffix "-" }}
          {{- if .Values.updateStrategy }}
          updateStrategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
          {{- end }}
          template:
            metadata:
              annotations:
                {{- if .Values.podAnnotations }}
                {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
                {{- end }}
                {{- if (include "zookeeper.createConfigmap" .) }}
                checksum/configuration: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
                {{- end }}
                {{- if or (include "zookeeper.quorum.createSecret" .) (include "zookeeper.client.createSecret" .) (include "zookeeper.client.createTlsPasswordsSecret" .) (include "zookeeper.quorum.createTlsPasswordsSecret" .) }}
                checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
                {{- end }}
                {{- if or (include "zookeeper.client.createTlsSecret" .) (include "zookeeper.quorum.createTlsSecret" .) }}
                checksum/tls-secrets: {{ include (print $.Template.BasePath "/tls-secrets.yaml") . | sha256sum }}
                {{- end }}
              labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
                app.kubernetes.io/component: zookeeper
            spec:
              enableServiceLinks: {{ .Values.enableServiceLinks }}
              serviceAccountName: {{ template "zookeeper.serviceAccountName" . }}
              {{- include "zookeeper.imagePullSecrets" . | nindent 6 }}
              automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
              {{- if .Values.hostAliases }}
              hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.affinity }}
              affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
              {{- else }}
              affinity:
                podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "zookeeper" "customLabels" $podLabels "context" $) | nindent 10 }}
                podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "zookeeper" "customLabels" $podLabels "context" $) | nindent 10 }}
                nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
              {{- end }}
              {{- if .Values.nodeSelector }}
              nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.tolerations }}
              tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.topologySpreadConstraints }}
              topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
              {{- end }}
              {{- if .Values.priorityClassName }}
              priorityClassName: {{ .Values.priorityClassName }}
              {{- end }}
              {{- if .Values.schedulerName }}
              schedulerName: {{ .Values.schedulerName }}
              {{- end }}
              {{- if .Values.podSecurityContext.enabled }}
              securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.dnsPolicy  }}
              dnsPolicy: {{ .Values.dnsPolicy }}
              {{- end }}
              {{- if .Values.dnsConfig }}
              dnsConfig: {{- include "common.tplvalues.render" (dict "value" .Values.dnsConfig "context" $) | nindent 8 }}
              {{- end }}
              initContainers:
                {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
                - name: volume-permissions
                  image: {{ template "zookeeper.volumePermissions.image" . }}
                  imagePullPolicy: {{ default "" .Values.volumePermissions.image.pullPolicy | quote }}
                  command:
                    - /bin/bash
                  args:
                    - -ec
                    - |
                      mkdir -p /bitnami/zookeeper
                      chown -R {{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} /bitnami/zookeeper
                      find /bitnami/zookeeper -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R {{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}
                      {{- if .Values.dataLogDir }}
                      mkdir -p {{ .Values.dataLogDir }}
                      chown -R {{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} {{ .Values.dataLogDir }}
                      find {{ .Values.dataLogDir }} -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R {{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}
                      {{- end }}
                  {{- if .Values.volumePermissions.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.volumePermissions.resources }}
                  resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
                  {{- else if ne .Values.volumePermissions.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.volumePermissions.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /tmp
                      subPath: tmp-dir
                    - name: data
                      mountPath: /bitnami/zookeeper
                    {{- if .Values.dataLogDir }}
                    - name: data-log
                      mountPath: {{ .Values.dataLogDir }}
                    {{- end }}
                {{- end }}
                {{- if or .Values.tls.client.enabled .Values.tls.quorum.enabled }}
                - name: init-certs
                  image: {{ include "zookeeper.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  command:
                    - /scripts/init-certs.sh
                  env:
                    - name: MY_POD_NAME
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.name
                    {{- if or .Values.tls.client.passwordsSecretName (include "zookeeper.client.createTlsPasswordsSecret" .) }}
                    - name: ZOO_TLS_CLIENT_KEYSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.client.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.client.tlsPasswordKeystoreKey" . }}
                    - name: ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.client.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.client.tlsPasswordTruststoreKey" . }}
                    {{- end }}
                    {{- if or .Values.tls.quorum.passwordsSecretName (include "zookeeper.quorum.createTlsPasswordsSecret" .) }}
                    - name: ZOO_TLS_QUORUM_KEYSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.quorum.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.quorum.tlsPasswordKeystoreKey" . }}
                    - name: ZOO_TLS_QUORUM_TRUSTSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.quorum.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.quorum.tlsPasswordTruststoreKey" . }}
                    {{- end }}
                  {{- if .Values.tls.resources }}
                  resources: {{- toYaml .Values.tls.resources | nindent 12 }}
                  {{- else if ne .Values.tls.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.tls.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /tmp
                      subPath: tmp-dir
                    - name: scripts
                      mountPath: /scripts/init-certs.sh
                      subPath: init-certs.sh
                    {{- if or .Values.tls.client.enabled }}
                    - name: client-certificates
                      mountPath: /certs/client
                    - name: client-shared-certs
                      mountPath: /opt/bitnami/zookeeper/config/certs/client
                    {{- end }}
                    {{- if or .Values.tls.quorum.enabled }}
                    - name: quorum-certificates
                      mountPath: /certs/quorum
                    - name: quorum-shared-certs
                      mountPath: /opt/bitnami/zookeeper/config/certs/quorum
                    {{- end }}
                {{- end }}
                {{- if .Values.initContainers }}
                {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | trim | nindent 8 }}
                {{- end }}
              containers:
                - name: zookeeper
                  image: {{ template "zookeeper.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.diagnosticMode.enabled }}
                  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
                  {{- else if .Values.command }}
                  command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.diagnosticMode.enabled }}
                  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
                  {{- else if .Values.args }}
                  args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.resources }}
                  resources: {{- toYaml .Values.resources | nindent 12 }}
                  {{- else if ne .Values.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  env:
                    - name: BITNAMI_DEBUG
                      value: {{ ternary "true" "false" (or .Values.image.debug .Values.diagnosticMode.enabled) | quote }}
                    - name: ZOO_DATA_LOG_DIR
                      value: {{ .Values.dataLogDir | quote }}
                    - name: ZOO_PORT_NUMBER
                      value: {{ .Values.containerPorts.client | quote }}
                    - name: ZOO_TICK_TIME
                      value: {{ .Values.tickTime | quote }}
                    - name: ZOO_INIT_LIMIT
                      value: {{ .Values.initLimit | quote }}
                    - name: ZOO_SYNC_LIMIT
                      value: {{ .Values.syncLimit | quote }}
                    - name: ZOO_PRE_ALLOC_SIZE
                      value: {{ .Values.preAllocSize | quote }}
                    - name: ZOO_SNAPCOUNT
                      value: {{ .Values.snapCount | quote }}
                    - name: ZOO_MAX_CLIENT_CNXNS
                      value: {{ .Values.maxClientCnxns | quote }}
                    - name: ZOO_4LW_COMMANDS_WHITELIST
                      value: {{ .Values.fourlwCommandsWhitelist | quote }}
                    - name: ZOO_LISTEN_ALLIPS_ENABLED
                      value: {{ ternary "yes" "no" .Values.listenOnAllIPs | quote }}
                    - name: ZOO_AUTOPURGE_INTERVAL
                      value: {{ .Values.autopurge.purgeInterval | quote }}
                    - name: ZOO_AUTOPURGE_RETAIN_COUNT
                      value: {{ .Values.autopurge.snapRetainCount | quote }}
                    - name: ZOO_MAX_SESSION_TIMEOUT
                      value: {{ .Values.maxSessionTimeout | quote }}
                    - name: ZOO_SERVERS
                      {{- $replicaCount := int .Values.replicaCount }}
                      {{- $minServerId := int .Values.minServerId }}
                      {{- $followerPort := int .Values.containerPorts.follower }}
                      {{- $electionPort := int .Values.containerPorts.election }}
                      {{- $releaseNamespace := include "zookeeper.namespace" . }}
                      {{- $zookeeperFullname := include "common.names.fullname" . }}
                      {{- $zookeeperHeadlessServiceName := printf "%s-%s" $zookeeperFullname "headless" | trunc 63  }}
                      {{- $clusterDomain := .Values.clusterDomain }}
                      {{- if .Values.zooServers }}
                      value: {{ include "common.tplvalues.render" (dict "value" .Values.zooServers "context" $) | quote }}
                      {{- else }}
                      value: {{ range $i, $e := until $replicaCount }}{{ $zookeeperFullname }}-{{ $e }}.{{ $zookeeperHeadlessServiceName }}.{{ $releaseNamespace }}.svc.{{ $clusterDomain }}:{{ $followerPort }}:{{ $electionPort }}::{{ add $e $minServerId }} {{ end }}
                      {{- end }}
                    - name: ZOO_ENABLE_AUTH
                      value: {{ ternary "yes" "no" .Values.auth.client.enabled | quote }}
                    {{- if .Values.auth.client.enabled }}
                    - name: ZOO_CLIENT_USER
                      value: {{ .Values.auth.client.clientUser | quote }}
                    - name: ZOO_CLIENT_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.client.secretName" . }}
                          key: client-password
                    - name: ZOO_SERVER_USERS
                      value: {{ .Values.auth.client.serverUsers | quote }}
                    - name: ZOO_SERVER_PASSWORDS
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.client.secretName" . }}
                          key: server-password
                    {{- end }}
                    - name: ZOO_ENABLE_QUORUM_AUTH
                      value: {{ ternary "yes" "no" .Values.auth.quorum.enabled | quote }}
                    {{- if .Values.auth.quorum.enabled }}
                    - name: ZOO_QUORUM_LEARNER_USER
                      value: {{ .Values.auth.quorum.learnerUser | quote }}
                    - name: ZOO_QUORUM_LEARNER_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.quorum.secretName" . }}
                          key: quorum-learner-password
                    - name: ZOO_QUORUM_SERVER_USERS
                      value: {{ .Values.auth.quorum.serverUsers | quote }}
                    - name: ZOO_QUORUM_SERVER_PASSWORDS
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.quorum.secretName" . }}
                          key: quorum-server-password
                    {{- end }}
                    - name: ZOO_HEAP_SIZE
                      value: {{ .Values.heapSize | quote }}
                    - name: ZOO_LOG_LEVEL
                      value: {{ .Values.logLevel | quote }}
                    - name: ALLOW_ANONYMOUS_LOGIN
                      value: {{ ternary "no" "yes" .Values.auth.client.enabled | quote }}
                    {{- if .Values.jvmFlags }}
                    - name: JVMFLAGS
                      value: {{ .Values.jvmFlags | quote }}
                    {{- end }}
                    {{- if .Values.metrics.enabled }}
                    - name: ZOO_ENABLE_PROMETHEUS_METRICS
                      value: "yes"
                    - name: ZOO_PROMETHEUS_METRICS_PORT_NUMBER
                      value: {{ coalesce .Values.metrics.containerPort .Values.containerPorts.metrics | quote }}
                    {{- end }}
                    {{- if .Values.tls.client.enabled }}
                    - name: ZOO_TLS_PORT_NUMBER
                      value: {{ .Values.containerPorts.tls | quote }}
                    - name: ZOO_TLS_CLIENT_ENABLE
                      value: {{ .Values.tls.client.enabled | quote }}
                    - name: ZOO_TLS_CLIENT_AUTH
                      value: {{ .Values.tls.client.auth | quote }}
                    - name: ZOO_TLS_CLIENT_KEYSTORE_FILE
                      value: {{ .Values.tls.client.keystorePath | quote }}
                    - name: ZOO_TLS_CLIENT_TRUSTSTORE_FILE
                      value: {{ .Values.tls.client.truststorePath | quote }}
                    {{- if or .Values.tls.client.keystorePassword .Values.tls.client.passwordsSecretName .Values.tls.client.autoGenerated }}
                    - name: ZOO_TLS_CLIENT_KEYSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.client.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.client.tlsPasswordKeystoreKey" . }}
                    {{- end }}
                    {{- if or .Values.tls.client.truststorePassword .Values.tls.client.passwordsSecretName .Values.tls.client.autoGenerated }}
                    - name: ZOO_TLS_CLIENT_TRUSTSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.client.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.client.tlsPasswordTruststoreKey" . }}
                    {{- end }}
                    {{- end }}
                    {{- if .Values.tls.quorum.enabled }}
                    - name: ZOO_TLS_QUORUM_ENABLE
                      value: {{ .Values.tls.quorum.enabled | quote }}
                    - name: ZOO_TLS_QUORUM_CLIENT_AUTH
                      value: {{ .Values.tls.quorum.auth | quote }}
                    - name: ZOO_TLS_QUORUM_KEYSTORE_FILE
                      value: {{ .Values.tls.quorum.keystorePath | quote }}
                    - name: ZOO_TLS_QUORUM_TRUSTSTORE_FILE
                      value: {{ .Values.tls.quorum.truststorePath | quote }}
                    {{- if or .Values.tls.quorum.keystorePassword .Values.tls.quorum.passwordsSecretName .Values.tls.quorum.autoGenerated }}
                    - name: ZOO_TLS_QUORUM_KEYSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.quorum.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.quorum.tlsPasswordKeystoreKey" . }}
                    {{- end }}
                    {{- if or .Values.tls.quorum.truststorePassword .Values.tls.quorum.passwordsSecretName .Values.tls.quorum.autoGenerated }}
                    - name: ZOO_TLS_QUORUM_TRUSTSTORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "zookeeper.quorum.tlsPasswordsSecret" . }}
                          key: {{ include "zookeeper.quorum.tlsPasswordTruststoreKey" . }}
                    {{- end }}
                    {{- end }}
                    - name: POD_NAME
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.name
                    - name: ZOO_ADMIN_SERVER_PORT_NUMBER
                      value: {{ .Values.containerPorts.adminServer | quote }}
                    {{- if .Values.extraEnvVars }}
                    {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
                    {{- end }}
                  {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
                  envFrom:
                    {{- if .Values.extraEnvVarsCM }}
                    - configMapRef:
                        name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
                    {{- end }}
                    {{- if .Values.extraEnvVarsSecret }}
                    - secretRef:
                        name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
                    {{- end }}
                  {{- end }}
                  ports:
                    {{- if not .Values.service.disableBaseClientPort }}
                    - name: client
                      containerPort: {{ .Values.containerPorts.client }}
                    {{- end }}
                    {{- if .Values.tls.client.enabled }}
                    - name: client-tls
                      containerPort: {{ .Values.containerPorts.tls }}
                    {{- end }}
                    {{- if gt (int .Values.replicaCount) 1 }}
                    {{- /* These ports are only open when there are more than 1 replica */}}
                    - name: follower
                      containerPort: {{ .Values.containerPorts.follower }}
                    - name: election
                      containerPort: {{ .Values.containerPorts.election }}
                    {{- end }}
                    {{- if .Values.metrics.enabled }}
                    - name: metrics
                      containerPort: {{ coalesce .Values.metrics.containerPort .Values.containerPorts.metrics }}
                    {{- end }}
                    - name: http-admin
                      containerPort: {{ .Values.containerPorts.adminServer }}
                  {{- if not .Values.diagnosticMode.enabled }}
                  {{- if .Values.customLivenessProbe }}
                  livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
                  {{- else if .Values.livenessProbe.enabled }}
                  livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled" "probeCommandTimeout") "context" $) | nindent 12 }}
                    exec:
                      command:
                        - /bin/bash
                        - -ec
                        - ZOO_HC_TIMEOUT={{ .Values.livenessProbe.probeCommandTimeout }} /opt/bitnami/scripts/zookeeper/healthcheck.sh
                  {{- end }}
                  {{- if .Values.customReadinessProbe }}
                  readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
                  {{- else if .Values.readinessProbe.enabled }}
                  readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled" "probeCommandTimeout") "context" $) | nindent 12 }}
                    exec:
                      command:
                        - /bin/bash
                        - -ec
                        - ZOO_HC_TIMEOUT={{ .Values.readinessProbe.probeCommandTimeout }} /opt/bitnami/scripts/zookeeper/healthcheck.sh
                  {{- end }}
                  {{- if .Values.customStartupProbe }}
                  startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
                  {{- else if .Values.startupProbe.enabled }}
                  startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
                    tcpSocket:
                      {{- if not .Values.service.disableBaseClientPort }}
                      port: client
                      {{- else }}
                      port: follower
                      {{- end }}
                  {{- end }}
                  {{- end }}
                  {{- if .Values.lifecycleHooks }}
                  lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
                  {{- end }}
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /tmp
                      subPath: tmp-dir
                    - name: empty-dir
                      mountPath: /opt/bitnami/zookeeper/conf
                      subPath: app-conf-dir
                    - name: empty-dir
                      mountPath: /opt/bitnami/zookeeper/logs
                      subPath: app-logs-dir
                    - name: scripts
                      mountPath: /scripts/setup.sh
                      subPath: setup.sh
                    - name: data
                      mountPath: /bitnami/zookeeper
                    {{- if .Values.dataLogDir }}
                    - name: data-log
                      mountPath: {{ .Values.dataLogDir }}
                    {{- end }}
                    {{- if or .Values.configuration .Values.existingConfigmap }}
                    - name: config
                      mountPath: /opt/bitnami/zookeeper/conf/zoo.cfg
                      subPath: zoo.cfg
                    {{- end }}
                    {{- if .Values.tls.client.enabled }}
                    - name: client-shared-certs
                      mountPath: /opt/bitnami/zookeeper/config/certs/client
                      readOnly: true
                    {{- end }}
                    {{- if .Values.tls.quorum.enabled }}
                    - name: quorum-shared-certs
                      mountPath: /opt/bitnami/zookeeper/config/certs/quorum
                      readOnly: true
                    {{- end }}
                    {{- if .Values.extraVolumeMounts }}
                    {{- include "common.tplvalues.render" ( dict "value" .Values.extraVolumeMounts "context" $ ) | nindent 12 }}
                    {{- end }}
                {{- if .Values.sidecars }}
                {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $ ) | nindent 8 }}
                {{- end }}
              volumes:
                - name: empty-dir
                  emptyDir: {}
                - name: scripts
                  configMap:
                    name: {{ printf "%s-scripts" (include "common.names.fullname" .) }}
                    defaultMode: 493
                {{- if or .Values.configuration .Values.existingConfigmap }}
                - name: config
                  configMap:
                    name: {{ include "zookeeper.configmapName" . }}
                {{- end }}
                {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
                - name: data
                  persistentVolumeClaim:
                    claimName: {{ printf "%s" (tpl .Values.persistence.existingClaim .) }}
                {{- else if not .Values.persistence.enabled }}
                - name: data
                  emptyDir: {}
                {{- end }}
                {{- if and .Values.persistence.enabled .Values.persistence.dataLogDir.existingClaim }}
                - name: data-log
                  persistentVolumeClaim:
                    claimName: {{ printf "%s" (tpl .Values.persistence.dataLogDir.existingClaim .) }}
                {{- else if and ( not .Values.persistence.enabled ) .Values.dataLogDir }}
                - name: data-log
                  emptyDir: {}
                {{- end }}
                {{- if .Values.tls.client.enabled }}
                - name: client-certificates
                  secret:
                    secretName: {{ include "zookeeper.client.tlsSecretName" . }}
                    defaultMode: 256
                - name: client-shared-certs
                  emptyDir: {}
                {{- end }}
                {{- if .Values.tls.quorum.enabled }}
                - name: quorum-certificates
                  secret:
                    secretName: {{ include "zookeeper.quorum.tlsSecretName" . }}
                    defaultMode: 256
                - name: quorum-shared-certs
                  emptyDir: {}
                {{- end }}
                {{- if .Values.extraVolumes }}
                {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
                {{- end }}
          {{- if and .Values.persistence.enabled (not (and .Values.persistence.existingClaim .Values.persistence.dataLogDir.existingClaim) ) }}
          volumeClaimTemplates:
            {{- if not .Values.persistence.existingClaim }}
            - apiVersion: v1
              kind: PersistentVolumeClaim
              metadata:
                name: data
                {{- if .Values.persistence.annotations }}
                annotations: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
                {{- end }}
                {{- if .Values.persistence.labels }}
                labels: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.labels "context" $) | nindent 10 }}
                {{- end }}
              spec:
                accessModes:
                {{- range .Values.persistence.accessModes }}
                  - {{ . | quote }}
                {{- end }}
                resources:
                  requests:
                    storage: {{ .Values.persistence.size | quote }}
                {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
                {{- if .Values.persistence.selector }}
                selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
                {{- end }}
            {{- end }}
            {{- if and (not .Values.persistence.dataLogDir.existingClaim) .Values.dataLogDir }}
            - apiVersion: v1
              kind: PersistentVolumeClaim
              metadata:
                name: data-log
                {{- if .Values.persistence.annotations }}
                annotations: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
                {{- end }}
                {{- if .Values.persistence.labels }}
                labels: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.labels "context" $) | nindent 10 }}
                {{- end }}
              spec:
                accessModes:
                {{- range .Values.persistence.accessModes }}
                  - {{ . | quote }}
                {{- end }}
                resources:
                  requests:
                    storage: {{ .Values.persistence.dataLogDir.size | quote }}
                {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
                {{- if .Values.persistence.dataLogDir.selector }}
                selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.dataLogDir.selector "context" $) | nindent 10 }}
                {{- end }}
            {{- end }}
          {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/statefulset.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: v1
        kind: Service
        metadata:
          name: {{ printf "%s-%s" (include "common.names.fullname" .) (default "headless" .Values.service.headless.servicenameOverride) | trunc 63 | trimSuffix "-" }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if or .Values.commonAnnotations .Values.service.headless.annotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.service.headless.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          type: ClusterIP
          clusterIP: None
          publishNotReadyAddresses: {{ .Values.service.headless.publishNotReadyAddresses }}
          ports:
            {{- if not .Values.service.disableBaseClientPort }}
            - name: tcp-client
              port: {{ .Values.service.ports.client }}
              targetPort: client
            {{- end }}
            {{- if .Values.tls.client.enabled }}
            - name: tcp-client-tls
              port: {{ .Values.service.ports.tls }}
              targetPort: client-tls
            {{- end }}
            - name: tcp-follower
              port: {{ .Values.service.ports.follower }}
              targetPort: follower
            - name: tcp-election
              port: {{ .Values.service.ports.election }}
              targetPort: election
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/svc-headless.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: v1
        kind: Service
        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
          {{- if or .Values.commonAnnotations .Values.service.annotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.service.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          type: {{ .Values.service.type }}
          {{- if and .Values.service.clusterIP (eq .Values.service.type "ClusterIP") }}
          clusterIP: {{ .Values.service.clusterIP }}
          {{- end }}
          {{- if or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "NodePort") }}
          externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | quote }}
          {{- end }}
          {{- if and (eq .Values.service.type "LoadBalancer") (not (empty .Values.service.loadBalancerSourceRanges)) }}
          loadBalancerSourceRanges: {{ .Values.service.loadBalancerSourceRanges }}
          {{- end }}
          {{- if and (eq .Values.service.type "LoadBalancer") (not (empty .Values.service.loadBalancerIP)) }}
          loadBalancerIP: {{ .Values.service.loadBalancerIP }}
          {{- end }}
          {{- if .Values.service.sessionAffinity }}
          sessionAffinity: {{ .Values.service.sessionAffinity }}
          {{- end }}
          {{- if .Values.service.sessionAffinityConfig }}
          sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.service.sessionAffinityConfig "context" $) | nindent 4 }}
          {{- end }}
          ports:
            {{- if not .Values.service.disableBaseClientPort }}
            - name: tcp-client
              port: {{ .Values.service.ports.client }}
              targetPort: client
              {{- if and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.nodePorts.client)) }}
              nodePort: {{ .Values.service.nodePorts.client }}
              {{- else if eq .Values.service.type "ClusterIP" }}
              nodePort: null
              {{- end }}
            {{- end }}
            {{- if .Values.tls.client.enabled }}
            - name: tcp-client-tls
              port: {{ .Values.service.ports.tls }}
              targetPort: client-tls
              {{- if and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.nodePorts.tls)) }}
              nodePort: {{ .Values.service.nodePorts.tls }}
              {{- else if eq .Values.service.type "ClusterIP" }}
              nodePort: null
              {{- end }}
            {{- end }}
            {{- if gt (int .Values.replicaCount) 1 }}
            {{- /* These ports are only open when there are more than 1 replica */}}
            - name: tcp-follower
              port: {{ .Values.service.ports.follower }}
              targetPort: follower
            - name: tcp-election
              port: {{ .Values.service.ports.election }}
              targetPort: election
            {{- end }}
            {{- if .Values.service.extraPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.service.extraPorts "context" $) | nindent 4 }}
            {{- end }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: zookeeper
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/svc.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if (include "zookeeper.client.createTlsSecret" .) }}

        {{- $secretName := printf "%s-client-crt" (include
        "common.names.fullname" .) }}

        {{- $ca := genCA "zookeeper-client-ca" 365 }}

        {{- $releaseNamespace := .Release.Namespace }}

        {{- $clusterDomain := .Values.clusterDomain }}

        {{- $fullname := include "common.names.fullname" . }}

        {{- $serviceName := include "common.names.fullname" . }}

        {{- $headlessServiceName := printf "%s-headless" (include
        "common.names.fullname" .) }}

        {{- $altNames := list (printf "*.%s.%s.svc.%s" $headlessServiceName
        $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s"
        $headlessServiceName $releaseNamespace $clusterDomain) (printf
        "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf
        "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain)
        "127.0.0.1" "localhost" $fullname }}

        {{- $cert := genSignedCert $fullname nil $altNames 365 $ca }}

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ $secretName }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: kubernetes.io/tls

        data:
          tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
          tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
          ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
        {{- end }}

        {{- if (include "zookeeper.quorum.createTlsSecret" .) }}

        {{- $secretName := printf "%s-quorum-crt" (include
        "common.names.fullname" .) }}

        {{- $ca := genCA "zookeeper-quorum-ca" 365 }}

        {{- $releaseNamespace := .Release.Namespace }}

        {{- $clusterDomain := .Values.clusterDomain }}

        {{- $fullname := include "common.names.fullname" . }}

        {{- $serviceName := include "common.names.fullname" . }}

        {{- $headlessServiceName := printf "%s-headless" (include
        "common.names.fullname" .) }}

        {{- $altNames := list (printf "*.%s.%s.svc.%s" $headlessServiceName
        $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s"
        $headlessServiceName $releaseNamespace $clusterDomain) (printf
        "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf
        "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) $fullname
        }}

        {{- $cert := genSignedCert $fullname nil $altNames 365 $ca }}

        ---

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ $secretName }}
          namespace: {{ template "zookeeper.namespace" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: kubernetes.io/tls

        data:
          tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
          tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
          ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/templates/tls-secrets.yaml
    - content: >
        # Copyright Broadcom, Inc. All Rights Reserved.

        # SPDX-License-Identifier: APACHE-2.0


        ## @section Global parameters

        ## Global Docker image parameters

        ## Please, note that this will override the image parameters, including
        dependencies, configured to use the global value

        ## Current available global Docker image parameters: imageRegistry,
        imagePullSecrets and storageClass

        ##


        ## @param global.imageRegistry Global Docker image registry

        ## @param global.imagePullSecrets Global Docker registry secret names as
        an array

        ## @param global.defaultStorageClass Global default StorageClass for
        Persistent Volume(s)

        ## @param global.storageClass DEPRECATED: use global.defaultStorageClass
        instead

        ##

        global:
          imageRegistry: ""
          ## E.g.
          ## imagePullSecrets:
          ##   - myRegistryKeySecretName
          ##
          imagePullSecrets: []
          defaultStorageClass: ""
          storageClass: ""
          ## Security parameters
          ##
          security:
            ## @param global.security.allowInsecureImages Allows skipping image verification
            allowInsecureImages: false
          ## Compatibility adaptations for Kubernetes platforms
          ##
          compatibility:
            ## Compatibility adaptations for Openshift
            ##
            openshift:
              ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
              ##
              adaptSecurityContext: auto
        ## @section Common parameters

        ##


        ## @param kubeVersion Override Kubernetes version

        ##

        kubeVersion: ""

        ## @param nameOverride String to partially override
        common.names.fullname template (will maintain the release name)

        ##

        nameOverride: ""

        ## @param fullnameOverride String to fully override
        common.names.fullname template

        ##

        fullnameOverride: ""

        ## @param clusterDomain Kubernetes Cluster Domain

        ##

        clusterDomain: cluster.local

        ## @param extraDeploy Extra objects to deploy (evaluated as a template)

        ##

        extraDeploy: []

        ## @param commonLabels Add labels to all the deployed resources

        ##

        commonLabels: {}

        ## @param commonAnnotations Add annotations to all the deployed
        resources

        ##

        commonAnnotations: {}

        ## @param namespaceOverride Override namespace for ZooKeeper resources

        ## Useful when including ZooKeeper as a chart dependency, so it can be
        released into a different namespace than the parent

        ##

        namespaceOverride: ""

        ## Enable diagnostic mode in the statefulset

        ##

        diagnosticMode:
          ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
          ##
          enabled: false
          ## @param diagnosticMode.command Command to override all containers in the statefulset
          ##
          command:
            - sleep
          ## @param diagnosticMode.args Args to override all containers in the statefulset
          ##
          args:
            - infinity
        ## @section ZooKeeper chart parameters


        ## Bitnami ZooKeeper image version

        ## ref: https://hub.docker.com/r/bitnami/zookeeper/tags/

        ## @param image.registry [default: REGISTRY_NAME] ZooKeeper image
        registry

        ## @param image.repository [default: REPOSITORY_NAME/zookeeper]
        ZooKeeper image repository

        ## @skip image.tag ZooKeeper image tag (immutable tags are recommended)

        ## @param image.digest ZooKeeper image digest in the way sha256:aa....
        Please note this parameter, if set, will override the tag

        ## @param image.pullPolicy ZooKeeper image pull policy

        ## @param image.pullSecrets Specify docker-registry secret names as an
        array

        ## @param image.debug Specify if debug values should be set

        ##

        image:
          registry: docker.io
          repository: bitnami/zookeeper
          tag: 3.9.3-debian-12-r2
          digest: ""
          ## Specify a imagePullPolicy
          ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
          ##
          pullPolicy: IfNotPresent
          ## Optionally specify an array of imagePullSecrets.
          ## Secrets must be manually created in the namespace.
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
          ## Example:
          ## pullSecrets:
          ##   - myRegistryKeySecretName
          ##
          pullSecrets: []
          ## Set to true if you would like to see extra information on logs
          ##
          debug: false
        ## Authentication parameters

        ##

        auth:
          client:
            ## @param auth.client.enabled Enable ZooKeeper client-server authentication. It uses SASL/Digest-MD5
            ##
            enabled: false
            ## @param auth.client.clientUser User that will use ZooKeeper clients to auth
            ##
            clientUser: ""
            ## @param auth.client.clientPassword Password that will use ZooKeeper clients to auth
            ##
            clientPassword: ""
            ## @param auth.client.serverUsers Comma, semicolon or whitespace separated list of user to be created
            ## Specify them as a string, for example: "user1,user2,admin"
            ##
            serverUsers: ""
            ## @param auth.client.serverPasswords Comma, semicolon or whitespace separated list of passwords to assign to users when created
            ## Specify them as a string, for example: "pass4user1, pass4user2, pass4admin"
            ##
            serverPasswords: ""
            ## @param auth.client.existingSecret Use existing secret (ignores previous passwords)
            ##
            existingSecret: ""
          quorum:
            ## @param auth.quorum.enabled Enable ZooKeeper server-server authentication. It uses SASL/Digest-MD5
            ##
            enabled: false
            ## @param auth.quorum.learnerUser User that the ZooKeeper quorumLearner will use to authenticate to quorumServers.
            ## Note: Make sure the user is included in auth.quorum.serverUsers
            ##
            learnerUser: ""
            ## @param auth.quorum.learnerPassword Password that the ZooKeeper quorumLearner will use to authenticate to quorumServers.
            ##
            learnerPassword: ""
            ## @param auth.quorum.serverUsers Comma, semicolon or whitespace separated list of users for the quorumServers.
            ## Specify them as a string, for example: "user1,user2,admin"
            ##
            serverUsers: ""
            ## @param auth.quorum.serverPasswords Comma, semicolon or whitespace separated list of passwords to assign to users when created
            ## Specify them as a string, for example: "pass4user1, pass4user2, pass4admin"
            ##
            serverPasswords: ""
            ## @param auth.quorum.existingSecret Use existing secret (ignores previous passwords)
            ##
            existingSecret: ""
        ## @param tickTime Basic time unit (in milliseconds) used by ZooKeeper
        for heartbeats

        ##

        tickTime: 2000

        ## @param initLimit ZooKeeper uses to limit the length of time the
        ZooKeeper servers in quorum have to connect to a leader

        ##

        initLimit: 10

        ## @param syncLimit How far out of date a server can be from a leader

        ##

        syncLimit: 5

        ## @param preAllocSize Block size for transaction log file

        ##

        preAllocSize: 65536

        ## @param snapCount The number of transactions recorded in the
        transaction log before a snapshot can be taken (and the transaction log
        rolled)

        ##

        snapCount: 100000

        ## @param maxClientCnxns Limits the number of concurrent connections
        that a single client may make to a single member of the ZooKeeper
        ensemble

        ##

        maxClientCnxns: 60

        ## @param maxSessionTimeout Maximum session timeout (in milliseconds)
        that the server will allow the client to negotiate

        ## Defaults to 20 times the tickTime

        ##

        maxSessionTimeout: 40000

        ## @param heapSize Size (in MB) for the Java Heap options (Xmx and Xms)

        ## This env var is ignored if Xmx an Xms are configured via `jvmFlags`

        ##

        heapSize: 1024

        ## @param fourlwCommandsWhitelist A list of comma separated Four Letter
        Words commands that can be executed

        ##

        fourlwCommandsWhitelist: srvr, mntr, ruok

        ## @param minServerId Minimal SERVER_ID value, nodes increment their IDs
        respectively

        ## Servers increment their ID starting at this minimal value.

        ## E.g., with `minServerId=10` and 3 replicas, server IDs will be 10,
        11, 12 for z-0, z-1 and z-2 respectively.

        ##

        minServerId: 1

        ## @param listenOnAllIPs Allow ZooKeeper to listen for connections from
        its peers on all available IP addresses

        ##

        listenOnAllIPs: false

        ## @param zooServers ZooKeeper space separated servers list. Leave empty
        to use the default ZooKeeper server names.

        ##

        zooServers: ""

        ## Ongoing data directory cleanup configuration

        ##

        autopurge:
          ## @param autopurge.snapRetainCount The most recent snapshots amount (and corresponding transaction logs) to retain
          ##
          snapRetainCount: 10
          ## @param autopurge.purgeInterval The time interval (in hours) for which the purge task has to be triggered
          ## Set to a positive integer to enable the auto purging. Set to 0 to disable auto purging.
          ##
          purgeInterval: 1
        ## @param logLevel Log level for the ZooKeeper server. ERROR by default

        ## Have in mind if you set it to INFO or WARN the ReadinessProve will
        produce a lot of logs

        ##

        logLevel: ERROR

        ## @param jvmFlags Default JVM flags for the ZooKeeper process

        ##

        jvmFlags: ""

        ## @param dataLogDir Dedicated data log directory

        ## This allows a dedicated log device to be used, and helps avoid
        competition between logging and snapshots.

        ## E.g.

        ## dataLogDir: /bitnami/zookeeper/dataLog

        ##

        dataLogDir: ""

        ## @param configuration Configure ZooKeeper with a custom zoo.cfg file

        ## e.g:

        ## configuration: |-

        ##   deploy-working-dir=/bitnami/geode/data

        ##   log-level=info

        ##   ...

        ##

        configuration: ""

        ## @param existingConfigmap The name of an existing ConfigMap with your
        custom configuration for ZooKeeper

        ## NOTE: When it's set the `configuration` parameter is ignored

        ##

        existingConfigmap: ""

        ## @param extraEnvVars Array with extra environment variables to add to
        ZooKeeper nodes

        ## e.g:

        ## extraEnvVars:

        ##   - name: FOO

        ##     value: "bar"

        ##

        extraEnvVars: []

        ## @param extraEnvVarsCM Name of existing ConfigMap containing extra env
        vars for ZooKeeper nodes

        ##

        extraEnvVarsCM: ""

        ## @param extraEnvVarsSecret Name of existing Secret containing extra
        env vars for ZooKeeper nodes

        ##

        extraEnvVarsSecret: ""

        ## @param command Override default container command (useful when using
        custom images)

        ##

        command:
          - /scripts/setup.sh
        ## @param args Override default container args (useful when using custom
        images)

        ##

        args: []

        ## @section Statefulset parameters


        ## @param replicaCount Number of ZooKeeper nodes

        ##

        replicaCount: 1

        ## @param revisionHistoryLimit The number of old history to retain to
        allow rollback

        ##

        revisionHistoryLimit: 10

        ## @param containerPorts.client ZooKeeper client container port

        ## @param containerPorts.tls ZooKeeper TLS container port

        ## @param containerPorts.follower ZooKeeper follower container port

        ## @param containerPorts.election ZooKeeper election container port

        ## @param containerPorts.adminServer ZooKeeper admin server container
        port

        ## @param containerPorts.metrics ZooKeeper Prometheus Exporter container
        port

        ##

        containerPorts:
          client: 2181
          tls: 3181
          follower: 2888
          election: 3888
          adminServer: 8080
          metrics: 9141
        ## Configure extra options for ZooKeeper containers' liveness, readiness
        and startup probes

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes

        ## @param livenessProbe.enabled Enable livenessProbe on ZooKeeper
        containers

        ## @param livenessProbe.initialDelaySeconds Initial delay seconds for
        livenessProbe

        ## @param livenessProbe.periodSeconds Period seconds for livenessProbe

        ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe

        ## @param livenessProbe.failureThreshold Failure threshold for
        livenessProbe

        ## @param livenessProbe.successThreshold Success threshold for
        livenessProbe

        ## @param livenessProbe.probeCommandTimeout Probe command timeout for
        livenessProbe

        ##

        livenessProbe:
          enabled: true
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
          probeCommandTimeout: 3
        ## @param readinessProbe.enabled Enable readinessProbe on ZooKeeper
        containers

        ## @param readinessProbe.initialDelaySeconds Initial delay seconds for
        readinessProbe

        ## @param readinessProbe.periodSeconds Period seconds for readinessProbe

        ## @param readinessProbe.timeoutSeconds Timeout seconds for
        readinessProbe

        ## @param readinessProbe.failureThreshold Failure threshold for
        readinessProbe

        ## @param readinessProbe.successThreshold Success threshold for
        readinessProbe

        ## @param readinessProbe.probeCommandTimeout Probe command timeout for
        readinessProbe

        ##

        readinessProbe:
          enabled: true
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
          probeCommandTimeout: 2
        ## @param startupProbe.enabled Enable startupProbe on ZooKeeper
        containers

        ## @param startupProbe.initialDelaySeconds Initial delay seconds for
        startupProbe

        ## @param startupProbe.periodSeconds Period seconds for startupProbe

        ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe

        ## @param startupProbe.failureThreshold Failure threshold for
        startupProbe

        ## @param startupProbe.successThreshold Success threshold for
        startupProbe

        ##

        startupProbe:
          enabled: false
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 15
          successThreshold: 1
        ## @param customLivenessProbe Custom livenessProbe that overrides the
        default one

        ##

        customLivenessProbe: {}

        ## @param customReadinessProbe Custom readinessProbe that overrides the
        default one

        ##

        customReadinessProbe: {}

        ## @param customStartupProbe Custom startupProbe that overrides the
        default one

        ##

        customStartupProbe: {}

        ## @param lifecycleHooks for the ZooKeeper container(s) to automate
        configuration before or after startup

        ##

        lifecycleHooks: {}

        ## ZooKeeper resource requests and limits

        ## ref:
        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

        ## @param resourcesPreset Set container resources according to one
        common preset (allowed values: none, nano, micro, small, medium, large,
        xlarge, 2xlarge). This is ignored if resources is set (resources is
        recommended for production).

        ## More information:
        https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15

        ##

        resourcesPreset: "micro"

        ## @param resources Set container requests and limits for different
        resources like CPU or memory (essential for production workloads)

        ## Example:

        ## resources:

        ##   requests:

        ##     cpu: 2

        ##     memory: 512Mi

        ##   limits:

        ##     cpu: 3

        ##     memory: 1024Mi

        ##

        resources: {}

        ## Configure Pods Security Context

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod

        ## @param podSecurityContext.enabled Enabled ZooKeeper pods' Security
        Context

        ## @param podSecurityContext.fsGroupChangePolicy Set filesystem group
        change policy

        ## @param podSecurityContext.sysctls Set kernel settings using the
        sysctl interface

        ## @param podSecurityContext.supplementalGroups Set filesystem extra
        groups

        ## @param podSecurityContext.fsGroup Set ZooKeeper pod's Security
        Context fsGroup

        ##

        podSecurityContext:
          enabled: true
          fsGroupChangePolicy: Always
          sysctls: []
          supplementalGroups: []
          fsGroup: 1001
        ## Configure Container Security Context

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container

        ## @param containerSecurityContext.enabled Enabled containers' Security
        Context

        ## @param containerSecurityContext.seLinuxOptions [object,nullable] Set
        SELinux options in container

        ## @param containerSecurityContext.runAsUser Set containers' Security
        Context runAsUser

        ## @param containerSecurityContext.runAsGroup Set containers' Security
        Context runAsGroup

        ## @param containerSecurityContext.runAsNonRoot Set container's Security
        Context runAsNonRoot

        ## @param containerSecurityContext.privileged Set container's Security
        Context privileged

        ## @param containerSecurityContext.readOnlyRootFilesystem Set
        container's Security Context readOnlyRootFilesystem

        ## @param containerSecurityContext.allowPrivilegeEscalation Set
        container's Security Context allowPrivilegeEscalation

        ## @param containerSecurityContext.capabilities.drop List of
        capabilities to be dropped

        ## @param containerSecurityContext.seccompProfile.type Set container's
        Security Context seccomp profile

        ##

        containerSecurityContext:
          enabled: true
          seLinuxOptions: {}
          runAsUser: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: "RuntimeDefault"
        ## @param automountServiceAccountToken Mount Service Account token in
        pod

        ##

        automountServiceAccountToken: false

        ## @param hostAliases ZooKeeper pods host aliases

        ##
        https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/

        ##

        hostAliases: []

        ## @param podLabels Extra labels for ZooKeeper pods

        ## ref:
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/

        ##

        podLabels: {}

        ## @param podAnnotations Annotations for ZooKeeper pods

        ## ref:
        https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/

        ##

        podAnnotations: {}

        ## @param podAffinityPreset Pod affinity preset. Ignored if `affinity`
        is set. Allowed values: `soft` or `hard`

        ## ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity

        ##

        podAffinityPreset: ""

        ## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if
        `affinity` is set. Allowed values: `soft` or `hard`

        ## Ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity

        ##

        podAntiAffinityPreset: soft

        ## Node affinity preset

        ## Ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity

        ##

        nodeAffinityPreset:
          ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
          ##
          type: ""
          ## @param nodeAffinityPreset.key Node label key to match Ignored if `affinity` is set.
          ## E.g.
          ## key: "kubernetes.io/e2e-az-name"
          ##
          key: ""
          ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set.
          ## E.g.
          ## values:
          ##   - e2e-az1
          ##   - e2e-az2
          ##
          values: []
        ## @param affinity Affinity for pod assignment

        ## Ref:
        https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity

        ## Note: podAffinityPreset, podAntiAffinityPreset, and
        nodeAffinityPreset will be ignored when it's set

        ##

        affinity: {}

        ## @param nodeSelector Node labels for pod assignment

        ## Ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/

        ##

        nodeSelector: {}

        ## @param tolerations Tolerations for pod assignment

        ## Ref:
        https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/

        ##

        tolerations: []

        ## @param topologySpreadConstraints Topology Spread Constraints for pod
        assignment spread across your cluster among failure-domains. Evaluated
        as a template

        ## Ref:
        https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods

        ##

        topologySpreadConstraints: []

        ## @param podManagementPolicy StatefulSet controller supports relax its
        ordering guarantees while preserving its uniqueness and identity
        guarantees. There are two valid pod management policies: `OrderedReady`
        and `Parallel`

        ## ref:
        https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy

        ##

        podManagementPolicy: Parallel

        ## @param priorityClassName Name of the existing priority class to be
        used by ZooKeeper pods, priority class needs to be created beforehand

        ## Ref:
        https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/

        ##

        priorityClassName: ""

        ## @param schedulerName Kubernetes pod scheduler registry

        ##
        https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/

        ##

        schedulerName: ""

        ## @param updateStrategy.type ZooKeeper statefulset strategy type

        ## @param updateStrategy.rollingUpdate ZooKeeper statefulset rolling
        update configuration parameters

        ## ref:
        https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies

        ##

        updateStrategy:
          type: RollingUpdate
          rollingUpdate: {}
        ## @param extraVolumes Optionally specify extra list of additional
        volumes for the ZooKeeper pod(s)

        ## Example Use Case: mount certificates to enable TLS

        ## e.g:

        ## extraVolumes:

        ## - name: zookeeper-keystore

        ##   secret:

        ##     defaultMode: 288

        ##     secretName: zookeeper-keystore

        ## - name: zookeeper-truststore

        ##   secret:

        ##     defaultMode: 288

        ##     secretName: zookeeper-truststore

        ##

        extraVolumes: []

        ## @param extraVolumeMounts Optionally specify extra list of additional
        volumeMounts for the ZooKeeper container(s)

        ## Example Use Case: mount certificates to enable TLS

        ## e.g:

        ## extraVolumeMounts:

        ## - name: zookeeper-keystore

        ##   mountPath: /certs/keystore

        ##   readOnly: true

        ## - name: zookeeper-truststore

        ##   mountPath: /certs/truststore

        ##   readOnly: true

        ##

        extraVolumeMounts: []

        ## @param sidecars Add additional sidecar containers to the ZooKeeper
        pod(s)

        ## e.g:

        ## sidecars:

        ##   - name: your-image-name

        ##     image: your-image

        ##     imagePullPolicy: Always

        ##     ports:

        ##       - name: portname

        ##         containerPort: 1234

        ##

        sidecars: []

        ## @param initContainers Add additional init containers to the ZooKeeper
        pod(s)

        ## Example:

        ## initContainers:

        ##   - name: your-image-name

        ##     image: your-image

        ##     imagePullPolicy: Always

        ##     ports:

        ##       - name: portname

        ##         containerPort: 1234

        ##

        initContainers: []

        ## ZooKeeper Pod Disruption Budget

        ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/

        ## @param pdb.create Deploy a pdb object for the ZooKeeper pod

        ## @param pdb.minAvailable Minimum available ZooKeeper replicas

        ## @param pdb.maxUnavailable Maximum unavailable ZooKeeper replicas.
        Defaults to `1` if both `pdb.minAvailable` and `pdb.maxUnavailable` are
        empty.

        ##

        pdb:
          create: true
          minAvailable: ""
          maxUnavailable: ""
        ## @param enableServiceLinks Whether information about services should
        be injected into pod's environment variable

        ## The environment variables injected by service links are not used, but
        can lead to slow boot times or slow running of the scripts when there
        are many services in the current namespace.

        ## If you experience slow pod startups or slow running of the scripts
        you probably want to set this to `false`.

        ##

        enableServiceLinks: true

        ## DNS-Pod services

        ## Ref:
        https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/

        ## @param dnsPolicy Specifies the DNS policy for the zookeeper pods

        ## DNS policies can be set on a per-Pod basis. Currently Kubernetes
        supports the following Pod-specific DNS policies.

        ## Available options: Default, ClusterFirst, ClusterFirstWithHostNet,
        None

        ## Ref:
        https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy

        dnsPolicy: ""

        ## @param dnsConfig  allows users more control on the DNS settings for a
        Pod. Required if `dnsPolicy` is set to `None`

        ## The dnsConfig field is optional and it can work with any dnsPolicy
        settings.

        ## Ref:
        https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-dns-config

        ## E.g.

        ## dnsConfig:

        ##   nameservers:

        ##     - 192.0.2.1 # this is an example

        ##   searches:

        ##     - ns1.svc.cluster-domain.example

        ##     - my.dns.search.suffix

        ##   options:

        ##     - name: ndots

        ##       value: "2"

        ##     - name: edns0

        dnsConfig: {}

        ## @section Traffic Exposure parameters

        service:
          ## @param service.type Kubernetes Service type
          ##
          type: ClusterIP
          ## @param service.ports.client ZooKeeper client service port
          ## @param service.ports.tls ZooKeeper TLS service port
          ## @param service.ports.follower ZooKeeper follower service port
          ## @param service.ports.election ZooKeeper election service port
          ##
          ports:
            client: 2181
            tls: 3181
            follower: 2888
            election: 3888
          ## Node ports to expose
          ## NOTE: choose port between <30000-32767>
          ## @param service.nodePorts.client Node port for clients
          ## @param service.nodePorts.tls Node port for TLS
          ##
          nodePorts:
            client: ""
            tls: ""
          ## @param service.disableBaseClientPort Remove client port from service definitions.
          ##
          disableBaseClientPort: false
          ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
          ## Values: ClientIP or None
          ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
          ##
          sessionAffinity: None
          ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
          ## sessionAffinityConfig:
          ##   clientIP:
          ##     timeoutSeconds: 300
          ##
          sessionAffinityConfig: {}
          ## @param service.clusterIP ZooKeeper service Cluster IP
          ## e.g.:
          ## clusterIP: None
          ##
          clusterIP: ""
          ## @param service.loadBalancerIP ZooKeeper service Load Balancer IP
          ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
          ##
          loadBalancerIP: ""
          ## @param service.loadBalancerSourceRanges ZooKeeper service Load Balancer sources
          ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
          ## e.g:
          ## loadBalancerSourceRanges:
          ##   - 10.10.10.0/24
          ##
          loadBalancerSourceRanges: []
          ## @param service.externalTrafficPolicy ZooKeeper service external traffic policy
          ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
          ##
          externalTrafficPolicy: Cluster
          ## @param service.annotations Additional custom annotations for ZooKeeper service
          ##
          annotations: {}
          ## @param service.extraPorts Extra ports to expose in the ZooKeeper service (normally used with the `sidecar` value)
          ##
          extraPorts: []
          ## @param service.headless.annotations Annotations for the Headless Service
          ## @param service.headless.publishNotReadyAddresses If the ZooKeeper headless service should publish DNS records for not ready pods
          ## @param service.headless.servicenameOverride String to partially override headless service name
          ##
          headless:
            publishNotReadyAddresses: true
            annotations: {}
            servicenameOverride: ""
        ## Network policies

        ## Ref:
        https://kubernetes.io/docs/concepts/services-networking/network-policies/

        ##

        networkPolicy:
          ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
          ##
          enabled: true
          ## @param networkPolicy.allowExternal Don't require client label for connections
          ## When set to false, only pods with the correct client label will have network access to the port Redis&reg; is
          ## listening on. When true, zookeeper accept connections from any source (with the correct destination port).
          ##
          allowExternal: true
          ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
          ##
          allowExternalEgress: true
          ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
          ## e.g:
          ## extraIngress:
          ##   - ports:
          ##       - port: 1234
          ##     from:
          ##       - podSelector:
          ##           - matchLabels:
          ##               - role: frontend
          ##       - podSelector:
          ##           - matchExpressions:
          ##               - key: role
          ##                 operator: In
          ##                 values:
          ##                   - frontend
          extraIngress: []
          ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
          ## e.g:
          ## extraEgress:
          ##   - ports:
          ##       - port: 1234
          ##     to:
          ##       - podSelector:
          ##           - matchLabels:
          ##               - role: frontend
          ##       - podSelector:
          ##           - matchExpressions:
          ##               - key: role
          ##                 operator: In
          ##                 values:
          ##                   - frontend
          ##
          extraEgress: []
          ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
          ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
          ##
          ingressNSMatchLabels: {}
          ingressNSPodMatchLabels: {}
        ## @section Other Parameters


        ## Service account for ZooKeeper to use.

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/

        ##

        serviceAccount:
          ## @param serviceAccount.create Enable creation of ServiceAccount for ZooKeeper pod
          ##
          create: true
          ## @param serviceAccount.name The name of the ServiceAccount to use.
          ## If not set and create is true, a name is generated using the common.names.fullname template
          ##
          name: ""
          ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
          ## Can be set to false if pods using this serviceAccount do not need to use K8s API
          ##
          automountServiceAccountToken: false
          ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
          ##
          annotations: {}
        ## @section Persistence parameters


        ## Enable persistence using Persistent Volume Claims

        ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/

        ##

        persistence:
          ## @param persistence.enabled Enable ZooKeeper data persistence using PVC. If false, use emptyDir
          ##
          enabled: true
          ## @param persistence.existingClaim Name of an existing PVC to use (only when deploying a single replica)
          ##
          existingClaim: ""
          ## @param persistence.storageClass PVC Storage Class for ZooKeeper data volume
          ## If defined, storageClassName: <storageClass>
          ## If set to "-", storageClassName: "", which disables dynamic provisioning
          ## If undefined (the default) or set to null, no storageClassName spec is
          ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
          ##   GKE, AWS & OpenStack)
          ##
          storageClass: ""
          ## @param persistence.accessModes PVC Access modes
          ##
          accessModes:
            - ReadWriteOnce
          ## @param persistence.size PVC Storage Request for ZooKeeper data volume
          ##
          size: 8Gi
          ## @param persistence.annotations Annotations for the PVC
          ##
          annotations: {}
          ## @param persistence.labels Labels for the PVC
          ##
          labels: {}
          ## @param persistence.selector Selector to match an existing Persistent Volume for ZooKeeper's data PVC
          ## If set, the PVC can't have a PV dynamically provisioned for it
          ## E.g.
          ## selector:
          ##   matchLabels:
          ##     app: my-app
          ##
          selector: {}
          ## Persistence for a dedicated data log directory
          ##
          dataLogDir:
            ## @param persistence.dataLogDir.size PVC Storage Request for ZooKeeper's dedicated data log directory
            ##
            size: 8Gi
            ## @param persistence.dataLogDir.existingClaim Provide an existing `PersistentVolumeClaim` for ZooKeeper's data log directory
            ## If defined, PVC must be created manually before volume will be bound
            ## The value is evaluated as a template
            ##
            existingClaim: ""
            ## @param persistence.dataLogDir.selector Selector to match an existing Persistent Volume for ZooKeeper's data log PVC
            ## If set, the PVC can't have a PV dynamically provisioned for it
            ## E.g.
            ## selector:
            ##   matchLabels:
            ##     app: my-app
            ##
            selector: {}
        ## @section Volume Permissions parameters

        ##


        ## Init containers parameters:

        ## volumePermissions: Change the owner and group of the persistent
        volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node

        ##

        volumePermissions:
          ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume
          ##
          enabled: false
          ## @param volumePermissions.image.registry [default: REGISTRY_NAME] Init container volume-permissions image registry
          ## @param volumePermissions.image.repository [default: REPOSITORY_NAME/os-shell] Init container volume-permissions image repository
          ## @skip volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)
          ## @param volumePermissions.image.digest Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
          ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
          ## @param volumePermissions.image.pullSecrets Init container volume-permissions image pull secrets
          ##
          image:
            registry: docker.io
            repository: bitnami/os-shell
            tag: 12-debian-12-r33
            digest: ""
            pullPolicy: IfNotPresent
            ## Optionally specify an array of imagePullSecrets.
            ## Secrets must be manually created in the namespace.
            ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
            ## Example:
            ## pullSecrets:
            ##   - myRegistryKeySecretName
            ##
            pullSecrets: []
          ## Init container resource requests and limits
          ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          ## @param volumePermissions.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if volumePermissions.resources is set (volumePermissions.resources is recommended for production).
          ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
          ##
          resourcesPreset: "nano"
          ## @param volumePermissions.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
          ## Example:
          ## resources:
          ##   requests:
          ##     cpu: 2
          ##     memory: 512Mi
          ##   limits:
          ##     cpu: 3
          ##     memory: 1024Mi
          ##
          resources: {}
          ## Init container' Security Context
          ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser
          ## and not the below volumePermissions.containerSecurityContext.runAsUser
          ## @param volumePermissions.containerSecurityContext.enabled Enabled init container Security Context
          ## @param volumePermissions.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
          ## @param volumePermissions.containerSecurityContext.runAsUser User ID for the init container
          ##
          containerSecurityContext:
            enabled: true
            seLinuxOptions: {}
            runAsUser: 0
        ## @section Metrics parameters

        ##


        ## ZooKeeper Prometheus Exporter configuration

        ##

        metrics:
          ## @param metrics.enabled Enable Prometheus to access ZooKeeper metrics endpoint
          ##
          enabled: false
          ## Service configuration
          ##
          service:
            ## @param metrics.service.type ZooKeeper Prometheus Exporter service type
            ##
            type: ClusterIP
            ## @param metrics.service.port ZooKeeper Prometheus Exporter service port
            ##
            port: 9141
            ## @param metrics.service.annotations [object] Annotations for Prometheus to auto-discover the metrics endpoint
            ##
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "{{ .Values.metrics.service.port }}"
              prometheus.io/path: "/metrics"
          ## Prometheus Operator ServiceMonitor configuration
          ##
          serviceMonitor:
            ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator
            ##
            enabled: false
            ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
            ##
            namespace: ""
            ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
            ##
            interval: ""
            ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
            ##
            scrapeTimeout: ""
            ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
            ##
            additionalLabels: {}
            ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
            ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
            ##
            selector: {}
            ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
            ##
            relabelings: []
            ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
            ##
            metricRelabelings: []
            ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
            ##
            honorLabels: false
            ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
            ##
            jobLabel: ""
            ## @param metrics.serviceMonitor.scheme The explicit scheme for metrics scraping.
            ##
            scheme: ""
            ## @param metrics.serviceMonitor.tlsConfig [object] TLS configuration used for scrape endpoints used by Prometheus
            ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/master/Documentation/api.md#tlsconfig
            ## e.g:
            ## tlsConfig:
            ##   ca:
            ##     secret:
            ##       name: existingSecretName
            ##
            tlsConfig: {}
          ## Prometheus Operator PrometheusRule configuration
          ##
          prometheusRule:
            ## @param metrics.prometheusRule.enabled Create a PrometheusRule for Prometheus Operator
            ##
            enabled: false
            ## @param metrics.prometheusRule.namespace Namespace for the PrometheusRule Resource (defaults to the Release Namespace)
            ##
            namespace: ""
            ## @param metrics.prometheusRule.additionalLabels Additional labels that can be used so PrometheusRule will be discovered by Prometheus
            ##
            additionalLabels: {}
            ## @param metrics.prometheusRule.rules PrometheusRule definitions
            ##  - alert: ZooKeeperSyncedFollowers
            ##    annotations:
            ##      message: The number of synced followers for the leader node in ZooKeeper deployment my-release is less than 2. This usually means that some of the ZooKeeper nodes aren't communicating properly. If it doesn't resolve itself you can try killing the pods (one by one).
            ##    expr: max(synced_followers{service="my-release-metrics"}) < 2
            ##    for: 5m
            ##    labels:
            ##      severity: critical
            ##  - alert: ZooKeeperOutstandingRequests
            ##    annotations:
            ##      message: The number of outstanding requests for ZooKeeper pod {{ $labels.pod }} is greater than 10. This can indicate a performance issue with the Pod or cluster a whole.
            ##    expr: outstanding_requests{service="my-release-metrics"} > 10
            ##    for: 5m
            ##    labels:
            ##      severity: critical
            ##
            rules: []
        ## @section TLS/SSL parameters

        ##


        ## Enable SSL/TLS encryption

        ##

        tls:
          client:
            ## @param tls.client.enabled Enable TLS for client connections
            ##
            enabled: false
            ## @param tls.client.auth SSL Client auth. Can be "none", "want" or "need".
            ##
            auth: "none"
            ## @param tls.client.autoGenerated Generate automatically self-signed TLS certificates for ZooKeeper client communications
            ## Currently only supports PEM certificates
            ##
            autoGenerated: false
            ## @param tls.client.existingSecret Name of the existing secret containing the TLS certificates for ZooKeeper client communications
            ##
            existingSecret: ""
            ## @param tls.client.existingSecretKeystoreKey The secret key from the tls.client.existingSecret containing the Keystore.
            ##
            existingSecretKeystoreKey: ""
            ## @param tls.client.existingSecretTruststoreKey The secret key from the tls.client.existingSecret containing the Truststore.
            ##
            existingSecretTruststoreKey: ""
            ## @param tls.client.keystorePath Location of the KeyStore file used for Client connections
            ##
            keystorePath: /opt/bitnami/zookeeper/config/certs/client/zookeeper.keystore.jks
            ## @param tls.client.truststorePath Location of the TrustStore file used for Client connections
            ##
            truststorePath: /opt/bitnami/zookeeper/config/certs/client/zookeeper.truststore.jks
            ## @param tls.client.passwordsSecretName Existing secret containing Keystore and truststore passwords
            ##
            passwordsSecretName: ""
            ## @param tls.client.passwordsSecretKeystoreKey The secret key from the tls.client.passwordsSecretName containing the password for the Keystore.
            ##
            passwordsSecretKeystoreKey: ""
            ## @param tls.client.passwordsSecretTruststoreKey The secret key from the tls.client.passwordsSecretName containing the password for the Truststore.
            ##
            passwordsSecretTruststoreKey: ""
            ## @param tls.client.keystorePassword Password to access KeyStore if needed
            ##
            keystorePassword: ""
            ## @param tls.client.truststorePassword Password to access TrustStore if needed
            ##
            truststorePassword: ""
          quorum:
            ## @param tls.quorum.enabled Enable TLS for quorum protocol
            ##
            enabled: false
            ## @param tls.quorum.auth SSL Quorum Client auth. Can be "none", "want" or "need".
            ##
            auth: "none"
            ## @param tls.quorum.autoGenerated Create self-signed TLS certificates. Currently only supports PEM certificates.
            ##
            autoGenerated: false
            ## @param tls.quorum.existingSecret Name of the existing secret containing the TLS certificates for ZooKeeper quorum protocol
            ##
            existingSecret: ""
            ## @param tls.quorum.existingSecretKeystoreKey The secret key from the tls.quorum.existingSecret containing the Keystore.
            ##
            existingSecretKeystoreKey: ""
            ## @param tls.quorum.existingSecretTruststoreKey The secret key from the tls.quorum.existingSecret containing the Truststore.
            ##
            existingSecretTruststoreKey: ""
            ## @param tls.quorum.keystorePath Location of the KeyStore file used for Quorum protocol
            ##
            keystorePath: /opt/bitnami/zookeeper/config/certs/quorum/zookeeper.keystore.jks
            ## @param tls.quorum.truststorePath Location of the TrustStore file used for Quorum protocol
            ##
            truststorePath: /opt/bitnami/zookeeper/config/certs/quorum/zookeeper.truststore.jks
            ## @param tls.quorum.passwordsSecretName Existing secret containing Keystore and truststore passwords
            ##
            passwordsSecretName: ""
            ## @param tls.quorum.passwordsSecretKeystoreKey The secret key from the tls.quorum.passwordsSecretName containing the password for the Keystore.
            ##
            passwordsSecretKeystoreKey: ""
            ## @param tls.quorum.passwordsSecretTruststoreKey The secret key from the tls.quorum.passwordsSecretName containing the password for the Truststore.
            ##
            passwordsSecretTruststoreKey: ""
            ## @param tls.quorum.keystorePassword Password to access KeyStore if needed
            ##
            keystorePassword: ""
            ## @param tls.quorum.truststorePassword Password to access TrustStore if needed
            ##
            truststorePassword: ""
          ## Init container resource requests and limits
          ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          ## @param tls.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if tls.resources is set (tls.resources is recommended for production).
          ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
          ##
          resourcesPreset: "nano"
          ## @param tls.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
          ## Example:
          ## resources:
          ##   requests:
          ##     cpu: 2
          ##     memory: 512Mi
          ##   limits:
          ##     cpu: 3
          ##     memory: 1024Mi
          ##
          resources: {}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/charts/zookeeper/values.yaml
    - content: >
        CHART NAME: {{ .Chart.Name }}

        CHART VERSION: {{ .Chart.Version }}

        APP VERSION: {{ .Chart.AppVersion }}


        Did you know there are enterprise versions of the Bitnami catalog? For
        enhanced secure software supply chain features, unlimited pulls from
        Docker, LTS support, or application customization, see Bitnami Premium
        or Tanzu Application Catalog. See
        https://www.arrow.com/globalecs/na/vendors/bitnami for more information.


        {{- if (eq .Values.service.type "LoadBalancer") }}


        ---------------------------------------------------------------------------------------------
         WARNING

            By specifying "serviceType=LoadBalancer" and not configuring the authentication
            you have most likely exposed the solr externally without any
            authentication mechanism.

            For security reasons, we strongly suggest that you switch to "ClusterIP" or
            "NodePort". As alternative, you can also configure the Solr authentication.

        ---------------------------------------------------------------------------------------------

        {{- end }}


        ** Please be patient while the chart is being deployed **


        Solr can be accessed via port {{ .Values.service.ports.http }} on the
        following DNS name from within your cluster:

            {{ include "common.names.fullname" . }}.{{ include "common.names.namespace" . }}.svc.{{ .Values.clusterDomain }}:{{ .Values.service.ports.http }}

        {{- if .Values.auth.enabled }}


        To get the Solr credentials execute the following commands:

            echo Username: {{ .Values.auth.adminUsername }}
            echo Password: $(kubectl get secret --namespace {{ include "common.names.namespace" . }} {{ include "solr.secretName" . }} -o jsonpath="{.data.solr-password}" | base64 -d)

        {{- end }}


        To connect to your Solr cluster from outside the cluster, perform the
        following steps:


        {{- if contains "NodePort" .Values.service.type }}


        1. Obtain the NodePort IP and ports:

            export NODE_IP=$(kubectl get nodes --namespace {{ include "common.names.namespace" . }} -o jsonpath="{.items[0].status.addresses[0].address}")
            export NODE_PORT=$(kubectl get --namespace {{ include "common.names.namespace" . }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "common.names.fullname" . }})
            echo "Solr URL: ${NODE_IP}:${NODE_PORT}"

        {{- else if contains "LoadBalancer" .Values.service.type }}


        1. Obtain the LoadBalancer IP

          NOTE: It may take a few minutes for the LoadBalancer IP to be available.
                Watch the status with: 'kubectl get svc --namespace {{ include "common.names.namespace" . }} -w {{ include "common.names.fullname" . }}'

            export SERVICE_IP=$(kubectl get svc --namespace {{ include "common.names.namespace" . }} {{ include "common.names.fullname" . }} --template "{{ "{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}" }}")
            echo "Solr URL: ${SERVICE_IP}:{{ .Values.service.ports.http }}"

        {{- else if contains "ClusterIP" .Values.service.type }}


        1. Create a port-forward to the Solr client port:

            kubectl port-forward --namespace {{ include "common.names.namespace" . }} svc/{{ include "common.names.fullname" . }} {{ .Values.service.ports.http }}:{{ .Values.service.ports.http }} &
            echo "Solr URL: 127.0.0.1:{{ .Values.service.ports.http }}"

        {{- end }}


        2. Access the Solr cluster using using the obtained URL.


        {{- if .Values.metrics.enabled  }}


        Solr Prometheus metrics can be accessed via port {{
        .Values.metrics.service.ports.http }} on the following DNS name from
        within your cluster:

            {{ printf "%s-exporter" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}.{{ include "common.names.namespace" . }}.svc.{{ .Values.clusterDomain }}:{{ .Values.metrics.service.ports.http }}/metrics

        {{- end }}


        {{- include "solr.checkRollingTags" . }}

        {{- include "solr.validateValues" . }}

        {{- include "common.warnings.resources" (dict "sections" (list "metrics"
        "" "tls" "volumePermissions") "context" $) }}

        {{- include "common.warnings.modifiedImages" (dict "images" (list
        .Values.image .Values.volumePermissions.image) "context" $) }}

        {{- include "common.errors.insecureImages" (dict "images" (list
        .Values.image .Values.volumePermissions.image) "context" $) }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/NOTES.txt
    - content: >
        {{/*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{/* vim: set filetype=mustache: */}}


        {{/*

        Create a default fully qualified app name.

        We truncate at 63 chars because some Kubernetes name fields are limited
        to this (by the DNS naming spec).

        */}}

        {{- define "solr.zookeeper.fullname" -}}

        {{- include "common.names.dependency.fullname" (dict "chartName"
        "zookeeper" "chartValues" .Values.zookeeper "context" $) -}}

        {{- end -}}


        {{/*

        Return the proper Apache Solr image name

        */}}

        {{- define "solr.image" -}}

        {{- include "common.images.image" (dict "imageRoot" .Values.image
        "global" .Values.global) -}}

        {{- end -}}


        {{/*

        Return the proper image name (for the init container volume-permissions
        image)

        */}}

        {{- define "solr.volumePermissions.image" -}}

        {{- include "common.images.image" ( dict "imageRoot"
        .Values.volumePermissions.image "global" .Values.global ) -}}

        {{- end -}}


        {{/*

        Return the proper Docker Image Registry Secret Names

        */}}

        {{- define "solr.imagePullSecrets" -}}

        {{- include "common.images.pullSecrets" (dict "images" (list
        .Values.image .Values.volumePermissions.image) "global" .Values.global)
        -}}

        {{- end -}}


        {{/*

        Check if there are rolling tags in the images

        */}}

        {{- define "solr.checkRollingTags" -}}

        {{- include "common.warnings.rollingTag" .Values.image }}

        {{- include "common.warnings.rollingTag" .Values.volumePermissions.image
        }}

        {{- end -}}


        {{/*
         Create the name of the service account to use
         */}}
        {{- define "solr.serviceAccountName" -}}

        {{- if .Values.serviceAccount.create -}}
            {{- default (include "common.names.fullname" .) .Values.serviceAccount.name -}}
        {{- else -}}
            {{- default "default" .Values.serviceAccount.name -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the Solr authentication credentials secret

        */}}

        {{- define "solr.secretName" -}}

        {{- coalesce (tpl .Values.auth.existingSecret $) (include
        "common.names.fullname" .) -}}

        {{- end -}}


        {{/*

        Get the password key to be retrieved from the Solr auth secret.

        */}}

        {{- define "solr.secretPasswordKey" -}}

        {{- if and .Values.auth.existingSecret
        .Values.auth.existingSecretPasswordKey -}}

        {{- printf "%s" .Values.auth.existingSecretPasswordKey -}}

        {{- else -}}

        {{- printf "solr-password" -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a Solr authentication credentials secret object should be
        created

        */}}

        {{- define "solr.createSecret" -}}

        {{- if and .Values.auth.enabled (empty .Values.auth.existingSecret) -}}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return proper Zookeeper hosts

        */}}

        {{- define "solr.zookeeper.hosts" -}}

        {{- if .Values.externalZookeeper.servers -}}
            {{- include "common.tplvalues.render" (dict "value" (join "," .Values.externalZookeeper.servers) "context" $) -}}
        {{- else -}}
            {{- $zookeeperList := list -}}
            {{- $releaseNamespace :=  default (include "common.names.namespace" .) .Values.zookeeper.namespaceOverride -}}
            {{- $clusterDomain := .Values.clusterDomain -}}
            {{- $zookeeperFullname := include "solr.zookeeper.fullname" . -}}
            {{- range $e, $i := until (int .Values.zookeeper.replicaCount) -}}
                {{- $zookeeperList = append $zookeeperList (printf "%s-%d.%s-headless.%s.svc.%s:%d" $zookeeperFullname $i $zookeeperFullname $releaseNamespace $clusterDomain (int $.Values.zookeeper.containerPorts.client))  -}}
            {{- end -}}
            {{- include "common.tplvalues.render" (dict "value" (join "," $zookeeperList) "context" $) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return proper Zookeeper hosts

        */}}

        {{- define "solr.zookeeper.port" -}}

        {{- if .Values.externalZookeeper.servers -}}
            {{- include "solr.zookeeper.hosts" . | regexFind ":[0-9]+" | trimPrefix ":" | default "2181" | int -}}
        {{- else if .Values.zookeeper.enabled -}}
            {{- int .Values.zookeeper.containerPorts.client -}}
        {{- else -}}
            {{- int "2181" -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a TLS secret object should be created

        */}}

        {{- define "solr.createTlsSecret" -}}

        {{- if and .Values.tls.enabled .Values.tls.autoGenerated (not
        .Values.tls.certificatesSecretName) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return the Solr TLS credentials secret

        */}}

        {{- define "solr.tlsSecretName" -}}

        {{- $secretName := .Values.tls.certificatesSecretName -}}

        {{- if $secretName -}}
            {{- printf "%s" (tpl $secretName $) -}}
        {{- else -}}
            {{- printf "%s-crt" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a secret containing the Keystore and Truststore password
        should be created for Solr client

        */}}

        {{- define "solr.createTlsPasswordsSecret" -}}

        {{- if and .Values.tls.enabled (not .Values.tls.passwordsSecretName) }}
            {{- true -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Return true if a TLS credentials secret object should be created

        */}}

        {{- define "solr.tlsPasswordsSecret" -}}

        {{- $secretName := .Values.tls.passwordsSecretName -}}

        {{- if $secretName -}}
            {{- printf "%s" (tpl $secretName $) -}}
        {{- else -}}
            {{- printf "%s-tls-pass" (include "common.names.fullname" .) -}}
        {{- end -}}

        {{- end -}}


        {{/*

        Compile all warnings into a single message.

        */}}

        {{- define "solr.validateValues" -}}

        {{- $messages := list -}}

        {{- $messages := append $messages (include "solr.validateValues.tls" .)
        -}}

        {{- $messages := without $messages "" -}}

        {{- $message := join "\n" $messages -}}

        {{- if $message -}}

        {{-   printf "\nVALUES VALIDATION:\n%s" $message | fail -}}

        {{- end -}}

        {{- end -}}


        {{/*

        Validate values of Solr - TLS enabled

        */}}

        {{- define "solr.validateValues.tls" -}}

        {{- if and .Values.tls.enabled (not .Values.tls.autoGenerated) (not
        .Values.tls.certificatesSecretName) }}

        solr: tls.enabled
            In order to enable TLS, you also need to provide
            an existing secret containing the Keystore and Truststore or
            enable auto-generated certificates.
        {{- end -}}

        {{- end -}}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/_helpers.tpl
    - content: |-
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- range .Values.extraDeploy }}
        ---
        {{ include "common.tplvalues.render" (dict "value" . "context" $) }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/extra-list.yaml
    - content: >+
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if .Values.ingress.enabled }}

        {{- if .Values.ingress.secrets }}

        {{- range .Values.ingress.secrets }}

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ .name }}
          namespace: {{ include "common.names.namespace" $ | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" $.Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if $.Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: kubernetes.io/tls

        data:
          tls.crt: {{ .certificate | b64enc }}
          tls.key: {{ .key | b64enc }}
        ---

        {{- end }}

        {{- end }}

        {{- if and .Values.ingress.tls .Values.ingress.selfSigned }}

        {{- $secretName := printf "%s-tls" .Values.ingress.hostname | trunc 63 |
        trimSuffix "-" }}

        {{- $ca := genCA "solr-ca" 365 }}

        {{- $cert := genSignedCert .Values.ingress.hostname nil (list
        .Values.ingress.hostname) 365 $ca }}

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ $secretName }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        type: kubernetes.io/tls

        data:
          tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
          tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
          ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
        {{- end }}

        {{- end }}

      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/ingress-tls-secrets.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if .Values.ingress.enabled }}
        apiVersion: {{ template "common.capabilities.ingress.apiVersion" . }}
        kind: Ingress
        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if or .Values.ingress.annotations .Values.commonAnnotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.ingress.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          {{- if and .Values.ingress.ingressClassName (eq "true" (include "common.ingress.supportsIngressClassname" .)) }}
          ingressClassName: {{ .Values.ingress.ingressClassName | quote }}
          {{- end }}
          rules:
            {{- if .Values.ingress.hostname }}
            - host: {{ tpl .Values.ingress.hostname . | quote }}
              http:
                paths:
                  {{- if .Values.ingress.extraPaths }}
                  {{- include "common.tplvalues.render" (dict "value" .Values.ingress.extraPaths "context" $) | nindent 10 }}
                  {{- end }}
                  - path: {{ tpl .Values.ingress.path . }}
                    {{- if eq "true" (include "common.ingress.supportsPathType" .) }}
                    pathType: {{ .Values.ingress.pathType }}
                    {{- end }}
                    backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" .) "servicePort" "tcp-client" "context" $)  | nindent 14 }}
            {{- end }}
            {{- range .Values.ingress.extraHosts }}
            - host: {{ tpl .name $ | quote }}
              http:
                paths:
                  - path: {{ default "/" (tpl .path $) }}
                    {{- if eq "true" (include "common.ingress.supportsPathType" $) }}
                    pathType: {{ default "ImplementationSpecific" .pathType }}
                    {{- end }}
                    backend: {{- include "common.ingress.backend" (dict "serviceName" (include "common.names.fullname" $) "servicePort" "tcp-client" "context" $) | nindent 14 }}
            {{- end }}
            {{- if .Values.ingress.extraRules }}
            {{- include "common.tplvalues.render" (dict "value" .Values.ingress.extraRules "context" $) | nindent 4 }}
            {{- end }}
          {{- if or (and .Values.ingress.tls (or (include "common.ingress.certManagerRequest" ( dict "annotations" .Values.ingress.annotations )) .Values.ingress.selfSigned)) .Values.ingress.extraTls }}
          tls:
            {{- if and .Values.ingress.tls (or (include "common.ingress.certManagerRequest" ( dict "annotations" .Values.ingress.annotations )) .Values.ingress.selfSigned) }}
            - hosts:
                - {{ tpl .Values.ingress.hostname . | quote }}
              secretName: {{ printf "%s-tls" (tpl .Values.ingress.hostname .) | trunc 63 | trimSuffix "-" }}
            {{- end }}
            {{- if .Values.ingress.extraTls }}
            {{- include "common.tplvalues.render" (dict "value" .Values.ingress.extraTls "context" $) | nindent 4 }}
            {{- end }}
          {{- end }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/ingress.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if .Values.metrics.enabled }}
        apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
        kind: Deployment
        metadata:
          name: {{ printf "%s-exporter" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr-exporter
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          replicas: 1
          revisionHistoryLimit: {{ .Values.metrics.revisionHistoryLimit }}
          {{- if .Values.metrics.updateStrategy }}
          strategy: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.updateStrategy "context" $) | nindent 4 }}
          {{- end }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.metrics.podLabels .Values.commonLabels ) "context" . ) }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
              app.kubernetes.io/component: metrics
          template:
            metadata:
              annotations:
                {{- if .Values.metrics.podAnnotations }}
                {{- include "common.tplvalues.render" (dict "value" .Values.metrics.podAnnotations "context" $) | nindent 8 }}
                {{- end }}
                {{- if .Values.commonAnnotations }}
                {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
                {{- end }}
              labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
                app.kubernetes.io/component: metrics
            spec:
              serviceAccountName: {{ include "solr.serviceAccountName" . }}
              {{- include "solr.imagePullSecrets" . | nindent 6 }}
              automountServiceAccountToken: {{ .Values.metrics.automountServiceAccountToken }}
              {{- if .Values.metrics.hostAliases }}
              hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.hostAliases "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.metrics.affinity }}
              affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.affinity "context" $) | nindent 8 }}
              {{- else }}
              affinity:
                podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.metrics.podAffinityPreset "component" "metrics" "customLabels" $podLabels "context" $) | nindent 10 }}
                podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.metrics.podAntiAffinityPreset "component" "metrics" "customLabels" $podLabels "context" $) | nindent 10 }}
                nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.metrics.nodeAffinityPreset.type "key" .Values.metrics.nodeAffinityPreset.key "values" .Values.metrics.nodeAffinityPreset.values) | nindent 10 }}
              {{- end }}
              {{- if .Values.metrics.nodeSelector }}
              nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.nodeSelector "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.metrics.tolerations }}
              tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.tolerations "context" .) | nindent 8 }}
              {{- end }}
              {{- if .Values.metrics.topologySpreadConstraints }}
              topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.topologySpreadConstraints "context" .) | nindent 8 }}
              {{- end }}
              {{- if .Values.metrics.priorityClassName }}
              priorityClassName: {{ .Values.metrics.priorityClassName }}
              {{- end }}
              {{- if .Values.metrics.schedulerName }}
              schedulerName: {{ .Values.metrics.schedulerName }}
              {{- end }}
              {{- if .Values.metrics.podSecurityContext.enabled }}
              securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.metrics.podSecurityContext "context" $) | nindent 8 }}
              {{- end }}
              initContainers:
                {{- if .Values.metrics.initContainers }}
                {{- include "common.tplvalues.render" (dict "value" .Values.metrics.initContainers "context" $) | nindent 8 }}
                {{- end }}
                {{- if .Values.auth.enabled }}
                - name: init-auth-config
                  image: {{ include "solr.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.metrics.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.metrics.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  command:
                    - "/bin/bash"
                    - "-c"
                    - |-
                        /bin/bash
                        printf '%s%s\n' 'httpBasicAuthUser=' $SOLR_ADMIN_USERNAME 'httpBasicAuthPassword=' $SOLR_ADMIN_PASSWORD > /basicauth-properties/basicauth.properties
                  env:
                    - name: SOLR_ADMIN_USERNAME
                      value: {{ .Values.auth.adminUsername | quote }}
                    - name: SOLR_ADMIN_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "solr.secretName" . }}
                          key: {{ include "solr.secretPasswordKey" . }}
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /basicauth-properties/
                      subPath: app-basicauth-properties-dir
                      readOnly: false
                {{- end }}
              containers:
                - name: solr-exporter
                  image: {{ include "solr.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.metrics.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.metrics.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.diagnosticMode.enabled }}
                  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
                  {{- else if .Values.metrics.command }}
                  command: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.command "context" $) | nindent 12 }}
                  {{- else }}
                  command:
                    - solr-exporter
                  {{- end }}
                  {{- if .Values.diagnosticMode.enabled }}
                  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
                  {{- else if .Values.metrics.args }}
                  args: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.args "context" $) | nindent 12 }}
                  {{- else }}
                  args:
                    - -p
                    - {{ .Values.metrics.containerPorts.http | quote }}
                    - -z
                    - "{{ include "solr.zookeeper.hosts" . }}/solr"
                    - -n
                    - {{ .Values.metrics.threads | quote }}
                    - -f
                    - {{ .Values.metrics.configFile | quote }}
                  {{- end }}
                  env:
                  {{- if .Values.metrics.extraEnvVars }}
                    {{- include "common.tplvalues.render" (dict "value" .Values.metrics.extraEnvVars "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.auth.enabled }}
                    - name: JAVA_OPTS
                      value: "-Dsolr.httpclient.builder.factory=org.apache.solr.client.solrj.impl.PreemptiveBasicAuthClientBuilderFactory -Dsolr.httpclient.config=/basicauth-properties/basicauth.properties"
                    - name: CLASSPATH_PREFIX
                      value: "../server/solr-webapp/webapp/WEB-INF/lib/"
                  {{- end }}
                  {{- if or .Values.metrics.extraEnvVarsCM .Values.metrics.extraEnvVarsSecret }}
                  envFrom:
                    {{- if .Values.metrics.extraEnvVarsCM }}
                    - configMapRef:
                        name: {{ include "common.tplvalues.render" (dict "value" .Values.metrics.extraEnvVarsCM "context" $) }}
                    {{- end }}
                    {{- if .Values.metrics.extraEnvVarsSecret }}
                    - secretRef:
                        name: {{ include "common.tplvalues.render" (dict "value" .Values.metrics.extraEnvVarsSecret "context" $) }}
                    {{- end }}
                  {{- end }}
                  ports:
                    - name: http
                      containerPort: {{ .Values.metrics.containerPorts.http }}
                  {{- if .Values.metrics.resources }}
                  resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
                  {{- else if ne .Values.metrics.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.metrics.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  {{- if not .Values.diagnosticMode.enabled }}
                  {{- if .Values.metrics.customLivenessProbe }}
                  livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.customLivenessProbe "context" $) | nindent 12 }}
                  {{- else if .Values.metrics.livenessProbe.enabled }}
                  livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.livenessProbe "enabled") "context" $) | nindent 12 }}
                    tcpSocket:
                      port: {{ .Values.metrics.containerPorts.http }}
                  {{- end }}
                  {{- if .Values.metrics.customReadinessProbe }}
                  readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.customReadinessProbe "context" $) | nindent 12 }}
                  {{- else if .Values.metrics.readinessProbe.enabled }}
                  readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.readinessProbe "enabled") "context" $) | nindent 12 }}
                    httpGet:
                      path: "/metrics"
                      port: {{ .Values.metrics.containerPorts.http }}
                  {{- end }}
                  {{- if .Values.metrics.customStartupProbe }}
                  startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.metrics.customStartupProbe "context" $) | nindent 12 }}
                  {{- else if .Values.metrics.startupProbe.enabled }}
                  startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.metrics.startupProbe "enabled") "context" $) | nindent 12 }}
                    tcpSocket:
                      port: {{ .Values.metrics.containerPorts.http }}
                  {{- end }}
                  {{- end }}
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /tmp
                      subPath: tmp-dir
                    {{- if .Values.auth.enabled }}
                    - name: empty-dir
                      mountPath: /basicauth-properties/
                      subPath: app-basicauth-properties-dir
                      readOnly: true
                    {{- end }}
                    {{- if .Values.metrics.extraVolumeMounts }}
                    {{- include "common.tplvalues.render" (dict "value" .Values.metrics.extraVolumeMounts "context" $) | nindent 12 }}
                    {{- end }}
                {{- if .Values.metrics.sidecars }}
                {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.sidecars "context" $) | nindent 8 }}
                {{- end }}
              volumes:
                - name: empty-dir
                  emptyDir: {}
                {{- if .Values.metrics.extraVolumes }}
                {{- include "common.tplvalues.render" (dict "value" .Values.metrics.extraVolumes "context" $) | nindent 8 }}
                {{- end }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/metrics-deployment.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if .Values.metrics.enabled }}
        apiVersion: v1
        kind: Service
        metadata:
          name: {{ printf "%s-exporter" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          namespace: {{ include "common.names.namespace" . | quote }}
          {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.metrics.service.labels .Values.commonLabels ) "context" . ) }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: metrics
          {{- if or .Values.metrics.service.annotations .Values.commonAnnotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.metrics.service.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          type: ClusterIP
          sessionAffinity: {{ .Values.metrics.service.sessionAffinity }}
          {{- if .Values.metrics.service.clusterIP }}
          clusterIP: {{ .Values.metrics.service.clusterIP }}
          {{- end }}
          ports:
            - name: tcp-metrics
              port: {{ .Values.metrics.service.ports.http }}
              protocol: TCP
              targetPort: http
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.metrics.podLabels .Values.commonLabels ) "context" . ) }}
          selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: metrics
        {{ end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/metrics-svc.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if .Values.networkPolicy.enabled }}

        kind: NetworkPolicy

        apiVersion: {{ include "common.capabilities.networkPolicy.apiVersion" .
        }}

        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          podSelector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
          policyTypes:
            - Ingress
            - Egress
          {{- if .Values.networkPolicy.allowExternalEgress }}
          egress:
            - {}
          {{- else }}
          egress:
            # Allow dns resolution
            - ports:
                - port: 53
                  protocol: UDP
                - port: 53
                  protocol: TCP
            # Allow outbound connections to other cluster pods
            - ports:
                - port: {{ .Values.containerPorts.http }}
              to:
                - podSelector:
                    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 14 }}
            # Allow outbound connections to Zookeeper
            - ports:
                - port: {{ include "solr.zookeeper.port" . }}
              {{- if .Values.zookeeper.enabled }}
              to: 
                - podSelector:
                    matchLabels:
                      app.kubernetes.io/name: zookeeper
                      app.kubernetes.io/instance: {{ .Release.Name }}
              {{- end }}
            {{- if .Values.networkPolicy.extraEgress }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.networkPolicy.extraEgress "context" $ ) | nindent 4 }}
            {{- end }}
          {{- end }}
          ingress:
            - ports:
                - port: {{ .Values.containerPorts.http }}
                - port: {{ .Values.service.ports.http }}
                {{- if .Values.metrics.enabled }}
                - port: {{ .Values.metrics.containerPorts.http }}
                - port: {{ .Values.metrics.service.ports.http }}
                {{- end }}
              {{- if not .Values.networkPolicy.allowExternal }}
              from:
                - podSelector:
                    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 14 }}
                - podSelector:
                    matchLabels:
                      {{ template "common.names.fullname" . }}-client: "true"
                {{- if .Values.networkPolicy.ingressNSMatchLabels }}
                - namespaceSelector:
                    matchLabels:
                      {{- range $key, $value := .Values.networkPolicy.ingressNSMatchLabels }}
                      {{ $key | quote }}: {{ $value | quote }}
                      {{- end }}
                  {{- if .Values.networkPolicy.ingressNSPodMatchLabels }}
                  podSelector:
                    matchLabels:
                      {{- range $key, $value := .Values.networkPolicy.ingressNSPodMatchLabels }}
                      {{ $key | quote }}: {{ $value | quote }}
                      {{- end }}
                  {{- end }}
                {{- end }}
              {{- end }}
            {{- if .Values.networkPolicy.extraIngress }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.networkPolicy.extraIngress "context" $ ) | nindent 4 }}
            {{- end }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/networkpolicy.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if .Values.pdb.create }}
        apiVersion: {{ include "common.capabilities.policy.apiVersion" . }}
        kind: PodDisruptionBudget
        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          {{- if .Values.pdb.minAvailable }}
          minAvailable: {{ .Values.pdb.minAvailable }}
          {{- end }}
          {{- if or .Values.pdb.maxUnavailable ( not .Values.pdb.minAvailable ) }}
          maxUnavailable: {{ .Values.pdb.maxUnavailable | default 1 }}
          {{- end }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
              app.kubernetes.io/component: solr
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/pdb.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if and .Values.metrics.enabled
        .Values.metrics.prometheusRule.enabled }}

        apiVersion: monitoring.coreos.com/v1

        kind: PrometheusRule

        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ default (include "common.names.namespace" .) .Values.metrics.prometheusRule.namespace | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            {{- if .Values.metrics.prometheusRule.additionalLabels }}
            {{- include "common.tplvalues.render" (dict "value" .Values.metrics.prometheusRule.additionalLabels "context" $) | nindent 4 }}
            {{- end }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          groups:
            - name: {{ include "common.names.fullname" . }}
              rules: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.prometheusRule.rules "context" $ ) | nindent 8 }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/prometheusrule.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: {{ printf "%s-scripts" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        data:
          init-certs.sh: |-
            #!/bin/bash

            . /opt/bitnami/scripts/liblog.sh

            if [[ -f "/certs/keystore.p12" ]] && [[ -f "/certs/truststore.p12" ]]; then
                # the user provided keystore.p12 and truststore.p12 files (prefered)
                cp "/certs/keystore.p12" "/opt/bitnami/solr/certs/keystore.p12"
                cp "/certs/truststore.p12" "/opt/bitnami/solr/certs/truststore.p12"
            elif [[ -f "/certs/ca.crt" ]] && [[ -f "/certs/tls.key" ]] && [[ -f "/certs/tls.crt" ]]; then
                # the user provided ca.crt & tls.key & tls.crt so we "calculate" keystore.p12 and truststore.p12
                openssl pkcs12 -export -in "/certs/tls.crt" \
                    -inkey "/certs/tls.key" -out "/tmp/keystore.p12" \
                    -passin pass:"/certs/tls.key" -passout pass:"${SOLR_SSL_KEY_STORE_PASSWORD}"
                keytool -importkeystore -srckeystore "/tmp/keystore.p12" \
                    -srcstoretype PKCS12 \
                    -srcstorepass "${SOLR_SSL_KEY_STORE_PASSWORD}" \
                    -deststorepass "${SOLR_SSL_KEY_STORE_PASSWORD}" \
                    -destkeystore "/opt/bitnami/solr/certs/keystore.p12" \
                    -noprompt
                rm "/tmp/keystore.p12"
                keytool -import -file "/certs/ca.crt" -keystore "/opt/bitnami/solr/certs/truststore.p12" -storepass "${SOLR_SSL_TRUST_STORE_PASSWORD}" -noprompt
            else
                info "No certificate files provided ... nothing to do ..."
            fi
          setup.sh: |-
            #!/bin/bash

            {{- if .Values.cloudBootstrap }}
            NODE_ID="${MY_POD_NAME#"{{ include "common.names.fullname" . }}-"}"
            if [[ "$NODE_ID" -eq "0" ]]; then
                export SOLR_CLOUD_BOOTSTRAP=yes
            fi
            {{- end }}
            # Use hostname instead of IP to register in ZooKeeper
            export SOLR_HOST="${MY_POD_NAME}.{{ printf "%s-headless" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}.{{ include "common.names.namespace" . }}.svc.{{ .Values.clusterDomain }}"
            /opt/bitnami/scripts/solr/entrypoint.sh /opt/bitnami/scripts/solr/run.sh
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/scripts-configmap.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        {{- if (include "solr.createSecret" .) }}
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ include "common.names.fullname" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
          namespace: {{ include "common.names.namespace" . | quote }}
        type: Opaque
        data:
          solr-password: {{ include "common.secrets.passwords.manage" (dict "secret" (include "common.names.fullname" .) "key" "solr-password" "providedValues" (list "auth.adminPassword") "context" $) }}
        {{- end }}
        {{- if (include "solr.createTlsPasswordsSecret" .) }}
        ---
        apiVersion: v1
        kind: Secret
        metadata:
          name: {{ printf "%s-tls-pass" (include "common.names.fullname" .)| trunc 63 | trimSuffix "-" }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
          namespace: {{ include "common.names.namespace" . | quote }}
        type: Opaque
        data:
          keystore-password: {{ default (randAlphaNum 10) .Values.tls.keystorePassword | b64enc | quote }}
          truststore-password: {{ default (randAlphaNum 10) .Values.tls.truststorePassword | b64enc | quote }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/secrets.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if .Values.serviceAccount.create }}

        apiVersion: v1

        kind: ServiceAccount

        metadata:
          name: {{ include "solr.serviceAccountName" . }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if or .Values.serviceAccount.annotations .Values.commonAnnotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.serviceAccount.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        automountServiceAccountToken: {{
        .Values.serviceAccount.automountServiceAccountToken }}

        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/service-account.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if and .Values.metrics.enabled
        .Values.metrics.serviceMonitor.enabled }}

        apiVersion: monitoring.coreos.com/v1

        kind: ServiceMonitor

        metadata:
          name: {{ template "common.names.fullname" . }}
          namespace: {{ default (include "common.names.namespace" .) .Values.metrics.serviceMonitor.namespace | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: metrics
            {{- if .Values.metrics.serviceMonitor.additionalLabels }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.additionalLabels "context" $ ) | nindent 4 }}
            {{- end }}
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
        spec:
          {{- if .Values.metrics.serviceMonitor.jobLabel }}
          jobLabel: {{ .Values.metrics.serviceMonitor.jobLabel }}
          {{- end }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 6 }}
              {{- if .Values.metrics.serviceMonitor.selector }}
              {{- include "common.tplvalues.render" (dict "value" .Values.metrics.serviceMonitor.selector "context" $) | nindent 6 }}
              {{- end }}
              app.kubernetes.io/component: metrics
          endpoints:
            - port: tcp-metrics
              path: "/metrics"
              {{- if .Values.metrics.serviceMonitor.interval }}
              interval: {{ .Values.metrics.serviceMonitor.interval }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.scrapeTimeout }}
              scrapeTimeout: {{ .Values.metrics.serviceMonitor.scrapeTimeout }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.relabelings }}
              relabelings: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.relabelings "context" $) | nindent 6 }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.metricRelabelings }}
              metricRelabelings: {{- include "common.tplvalues.render" ( dict "value" .Values.metrics.serviceMonitor.metricRelabelings "context" $) | nindent 6 }}
              {{- end }}
              {{- if .Values.metrics.serviceMonitor.honorLabels }}
              honorLabels: {{ .Values.metrics.serviceMonitor.honorLabels }}
              {{- end }}
          namespaceSelector:
            matchNames:
              - {{ include "common.names.namespace" . }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/servicemonitor.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
        kind: StatefulSet
        metadata:
          name: {{ include "common.names.fullname" . }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
          namespace: {{ include "common.names.namespace" . | quote }}
        spec:
          podManagementPolicy: {{ .Values.podManagementPolicy }}
          replicas: {{ .Values.replicaCount }}
          revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector:
            matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
              app.kubernetes.io/component: solr
          serviceName: {{ printf "%s-headless" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          updateStrategy: {{- include "common.tplvalues.render" (dict "value" .Values.updateStrategy "context" $ ) | nindent 4 }}
          template:
            metadata:
              annotations:
                {{- if .Values.commonAnnotations }}
                {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 8 }}
                {{- end }}
                {{- if .Values.podAnnotations }}
                {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
                {{- end }}
                {{- if or (include "solr.createSecret" .) (include "solr.createTlsPasswordsSecret" .) }}
                checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
                {{- end }}
                {{- if (include "solr.createTlsSecret" .)}}
                checksum/tls-secrets: {{ include (print $.Template.BasePath "/tls-secrets.yaml") . | sha256sum }}
                {{- end }}
              labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
                app.kubernetes.io/component: solr
            spec:
              serviceAccountName: {{ include "solr.serviceAccountName" . }}
              {{- include "solr.imagePullSecrets" . | nindent 6 }}
              automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
              {{- if .Values.hostAliases }}
              hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.affinity }}
              affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 8 }}
              {{- else }}
              affinity:
                podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "component" "solr" "customLabels" $podLabels "context" $) | nindent 10 }}
                podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "component" "solr" "customLabels" $podLabels "context" $) | nindent 10 }}
                nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 10 }}
              {{- end }}
              {{- if .Values.nodeSelector }}
              nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.tolerations }}
              tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
              {{- end }}
              {{- if .Values.topologySpreadConstraints }}
              topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
              {{- end }}
              {{- if .Values.priorityClassName }}
              priorityClassName: {{ .Values.priorityClassName }}
              {{- end }}
              {{- if .Values.schedulerName }}
              schedulerName: {{ .Values.schedulerName }}
              {{- end }}
              {{- if .Values.podSecurityContext.enabled }}
              securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
              {{- end }}
              enableServiceLinks: {{ .Values.enableServiceLinks }}
              initContainers:
                - name: prepare-server-dir
                  image: {{ include "solr.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.resources }}
                  resources: {{- toYaml .Values.resources | nindent 12 }}
                  {{- else if ne .Values.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  command:
                    - /bin/bash
                  args:
                    - -ec
                    - |
                      #!/bin/bash

                      . /opt/bitnami/scripts/liblog.sh

                      info "Copying server dir to empty dir"
                      # In order to not break the application functionality (such as upgrades or plugins) we need
                      # to make the base directory writable, so we need to copy it to an empty dir volume
                      cp -r --preserve=mode /opt/bitnami/solr/server /emptydir/app-server-dir

                      info "Copy operation completed"
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /emptydir
                {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
                - name: volume-permissions
                  image: {{ include "solr.volumePermissions.image" . }}
                  imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
                  command:
                    - /bin/bash
                  args:
                    - -ec
                    - |
                      mkdir -p /bitnami/solr
                      chown -R {{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} /bitnami/solr
                      find /bitnami/solr -mindepth 1 -maxdepth 1 -not -name ".snapshot" -not -name "lost+found" | xargs -r chown -R {{ .Values.containerSecurityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }}
                  {{- if .Values.volumePermissions.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.volumePermissions.resources }}
                  resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
                  {{- else if ne .Values.volumePermissions.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.volumePermissions.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  volumeMounts:
                    - name: data
                      mountPath: /bitnami/solr
                {{- end }}
                {{- if .Values.tls.enabled }}
                - name: init-certs
                  image: {{ include "solr.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  command:
                    - /scripts/init-certs.sh
                  env:
                    - name: MY_POD_NAME
                      valueFrom:
                        fieldRef:
                          apiVersion: v1
                          fieldPath: metadata.name
                    - name: SOLR_SSL_KEY_STORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "solr.tlsPasswordsSecret" . }}
                          key: keystore-password
                    - name: SOLR_SSL_TRUST_STORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "solr.tlsPasswordsSecret" . }}
                          key: truststore-password
                  {{- if .Values.tls.resources }}
                  resources: {{- toYaml .Values.tls.resources | nindent 12 }}
                  {{- else if ne .Values.tls.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.tls.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  volumeMounts:
                    - name: scripts
                      mountPath: /scripts/init-certs.sh
                      subPath: init-certs.sh
                    - name: certs
                      mountPath: /certs
                    - name: empty-dir
                      mountPath: /opt/bitnami/solr/certs
                      subPath: app-certs-dir
                    - name: empty-dir
                      mountPath: /tmp
                      subPath: tmp-dir
                {{- end }}
                {{- if .Values.initContainers }}
                {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 8 }}
                {{- end }}
              containers:
                - name: solr
                  image: {{ include "solr.image" . }}
                  imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
                  {{- if .Values.containerSecurityContext.enabled }}
                  securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.diagnosticMode.enabled }}
                  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
                  {{- else if .Values.command }}
                  command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 12 }}
                  {{- end }}
                  {{- if .Values.diagnosticMode.enabled }}
                  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
                  {{- else if .Values.args }}
                  args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 12 }}
                  {{- end }}
                  env:
                    - name: BITNAMI_DEBUG
                      value: {{ ternary "true" "false" (or .Values.image.debug .Values.diagnosticMode.enabled) | quote }}
                    - name: MY_POD_NAME
                      valueFrom:
                        fieldRef:
                          fieldPath: metadata.name
                    - name: SOLR_ENABLE_CLOUD_MODE
                      value: {{ ternary "yes" "no" .Values.cloudEnabled | quote }}
                    - name: SOLR_NUMBER_OF_NODES
                      value: {{ .Values.replicaCount | quote }}
                    - name: SOLR_PORT_NUMBER
                      value: {{ .Values.containerPorts.http | quote }}
                    - name: SOLR_SERVER_DIRECTORY
                      value: {{ .Values.serverDirectory | quote }}
                    {{- if .Values.cloudEnabled }}
                    - name: SOLR_COLLECTION
                      value: {{ .Values.collection | quote }}
                    {{- else }}
                    - name: SOLR_CORES
                      value: {{ .Values.coreNames | join "," | quote }}
                    {{- end }}
                    - name: SOLR_COLLECTION_SHARDS
                      value: {{ .Values.collectionShards | quote }}
                    - name: SOLR_COLLECTION_REPLICAS
                      value: {{ .Values.collectionReplicas | quote }}
                    {{- if .Values.heap }}
                    - name: SOLR_HEAP
                      value: {{ .Values.heap | quote }}
                    {{- end }}
                    {{- if .Values.javaMem }}
                    - name: SOLR_JAVA_MEM
                      value: {{ .Values.javaMem | quote }}
                    {{- end }}
                    - name: SOLR_ENABLE_AUTHENTICATION
                      value: {{ ternary "yes" "no" .Values.auth.enabled | quote }}
                    {{- if .Values.auth.enabled }}
                    - name: SOLR_ADMIN_USERNAME
                      value: {{ .Values.auth.adminUsername | quote }}
                    - name: SOLR_ADMIN_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "solr.secretName" . }}
                          key: {{ include "solr.secretPasswordKey" . }}
                    {{- end }}
                    - name: SOLR_ZK_HOSTS
                      value: {{ include "solr.zookeeper.hosts" . | quote }}
                    {{- if .Values.tls.enabled }}
                    - name: SOLR_SSL_ENABLED
                      value: "yes"
                    {{- if (include "solr.createTlsSecret" .) }}
                    - name: SOLR_SSL_KEY_STORE_TYPE
                      value: "JKS"
                    - name: SOLR_SSL_TRUST_STORE_TYPE
                      value: "JKS"
                    {{- end }}
                    - name: SOLR_SSL_KEY_STORE
                      value: /opt/bitnami/solr/certs/keystore.p12
                    - name: SOLR_SSL_KEY_STORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "solr.tlsPasswordsSecret" . }}
                          key: keystore-password
                    - name: SOLR_SSL_TRUST_STORE
                      value: /opt/bitnami/solr/certs/truststore.p12
                    - name: SOLR_SSL_TRUST_STORE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          name: {{ include "solr.tlsPasswordsSecret" . }}
                          key: truststore-password
                    - name: SOLR_SSL_CHECK_PEER_NAME
                      value: "false"
                    {{- end }}
                    {{- if .Values.extraEnvVars }}
                    {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
                    {{- end }}
                  {{- if or .Values.extraEnvVarsCM .Values.extraEnvVarsSecret }}
                  envFrom:
                    {{- if .Values.extraEnvVarsCM }}
                    - configMapRef:
                        name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsCM "context" $) }}
                    {{- end }}
                    {{- if .Values.extraEnvVarsSecret }}
                    - secretRef:
                        name: {{ include "common.tplvalues.render" (dict "value" .Values.extraEnvVarsSecret "context" $) }}
                    {{- end }}
                  {{- end }}
                  ports:
                    - name: http
                      containerPort: {{ .Values.containerPorts.http }}
                  {{- if .Values.resources }}
                  resources: {{- toYaml .Values.resources | nindent 12 }}
                  {{- else if ne .Values.resourcesPreset "none" }}
                  resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
                  {{- end }}
                  {{- if not .Values.diagnosticMode.enabled }}
                  {{- if .Values.customLivenessProbe }}
                  livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customLivenessProbe "context" $) | nindent 12 }}
                  {{- else if .Values.livenessProbe.enabled }}
                  livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.livenessProbe "enabled") "context" $) | nindent 12 }}
                    exec:
                      command:
                      - /bin/bash
                      - -ec
                      - |
                        curl --silent --connect-timeout 15000 {{ ternary "--user ${SOLR_ADMIN_USERNAME}:${SOLR_ADMIN_PASSWORD}" "" .Values.auth.enabled }} http://localhost:${SOLR_PORT_NUMBER}/solr/admin/info/system | grep --quiet  '\"status\":0'
                  {{- end }}
                  {{- if .Values.customReadinessProbe }}
                  readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customReadinessProbe "context" $) | nindent 12 }}
                  {{- else if .Values.readinessProbe.enabled }}
                  readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.readinessProbe "enabled") "context" $) | nindent 12 }}
                    exec:
                      command:
                      - /bin/bash
                      - -ec
                      - |
                        curl --silent --connect-timeout 15000 {{ ternary "--user ${SOLR_ADMIN_USERNAME}:${SOLR_ADMIN_PASSWORD}" "" .Values.auth.enabled }} http://localhost:${SOLR_PORT_NUMBER}/api/node/health | grep --quiet  '\"status\":\"OK\"'
                  {{- end }}
                  {{- if .Values.customStartupProbe }}
                  startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.customStartupProbe "context" $) | nindent 12 }}
                  {{- else if .Values.startupProbe.enabled }}
                  startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.startupProbe "enabled") "context" $) | nindent 12 }}
                    exec:
                      command:
                      - /bin/bash
                      - -ec
                      - |
                        curl --silent --connect-timeout 15000  {{ ternary "--user ${SOLR_ADMIN_USERNAME}:${SOLR_ADMIN_PASSWORD}" "" .Values.auth.enabled }} http://localhost:${SOLR_PORT_NUMBER}/api/node/health | grep --quiet  '\"status\":\"OK\"'
                  {{- end }}
                  {{- end }}
                  {{- if .Values.lifecycleHooks }}
                  lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 12 }}
                  {{- end }}
                  volumeMounts:
                    - name: empty-dir
                      mountPath: /tmp
                      subPath: tmp-dir
                    - name: empty-dir
                      mountPath: /opt/bitnami/solr/server
                      subPath: app-server-dir
                    - name: empty-dir
                      mountPath: /opt/bitnami/solr/logs
                      subPath: app-logs-dir
                    - name: empty-dir
                      mountPath: /opt/bitnami/solr/tmp
                      subPath: app-tmp-dir
                    - name: scripts
                      mountPath: /scripts/setup.sh
                      subPath: setup.sh
                    - name: data
                      mountPath: {{ .Values.persistence.mountPath }}
                    {{- if .Values.persistence.subPath }}
                      subPath: {{ .Values.persistence.subPath }}
                    {{- else if .Values.persistence.subPathExpr }}
                      subPathExpr: {{ .Values.persistence.subPathExpr }}
                    {{- end }}
                    {{- if .Values.tls.enabled }}
                    - name: empty-dir
                      mountPath: /opt/bitnami/solr/certs
                      subPath: app-certs-dir
                    {{- end }}
                    {{- if .Values.extraVolumeMounts }}
                    {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumeMounts "context" $) | nindent 12 }}
                    {{- end }}
                {{- if .Values.sidecars }}
                {{- include "common.tplvalues.render" (dict "value" .Values.sidecars "context" $) | nindent 8 }}
                {{- end }}
              volumes:
                - name: empty-dir
                  emptyDir: {}
                - name: scripts
                  configMap:
                    name: {{ printf "%s-scripts" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
                    defaultMode: 0755
                {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
                - name: data
                  persistentVolumeClaim:
                    claimName: {{ printf "%s" (tpl .Values.persistence.existingClaim .) }}
                {{- else if not .Values.persistence.enabled }}
                - name: data
                  emptyDir: {}
                {{- end }}
                {{- if .Values.tls.enabled }}
                - name: certs
                  secret:
                    secretName: {{ include "solr.tlsSecretName" . }}
                {{- end }}
                {{- if .Values.extraVolumes }}
                {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
                {{- end }}
          {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
          volumeClaimTemplates:
            - apiVersion: v1
              kind: PersistentVolumeClaim
              metadata:
                name: data
                annotations:
                  {{- if .Values.persistence.annotations }}
                  {{- include "common.tplvalues.render" (dict "value" .Values.persistence.annotations "context" $) | nindent 10 }}
                  {{- end }}
                  {{- if .Values.commonAnnotations }}
                  {{- include "common.tplvalues.render" (dict "value" .Values.commonAnnotations "context" $) | nindent 10 }}
                  {{- end }}
                {{- if .Values.commonLabels }}
                labels: {{- include "common.tplvalues.render" (dict "value" .Values.commonLabels "context" $) | nindent 10 }}
                {{- end }}
              spec:
                accessModes:
                {{- range .Values.persistence.accessModes }}
                  - {{ . | quote }}
                {{- end }}
                resources:
                  requests:
                    storage: {{ .Values.persistence.size | quote }}
                {{- include "common.storage.class" (dict "persistence" .Values.persistence "global" .Values.global) | nindent 8 }}
                {{- if .Values.persistence.selector }}
                selector: {{- include "common.tplvalues.render" (dict "value" .Values.persistence.selector "context" $) | nindent 10 }}
                {{- end }}
          {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/statefulset.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: v1
        kind: Service
        metadata:
          name: {{ printf "%s-headless" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if or .Values.service.headless.annotations .Values.commonAnnotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.service.headless.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          type: ClusterIP
          clusterIP: None
          publishNotReadyAddresses: true
          ports:
            - name: tcp-client
              port: {{ .Values.service.ports.http }}
              protocol: TCP
              targetPort: http
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/svc-headless.yaml
    - content: |
        {{- /*
        Copyright Broadcom, Inc. All Rights Reserved.
        SPDX-License-Identifier: APACHE-2.0
        */}}

        apiVersion: v1
        kind: Service
        metadata:
          name: {{ include "common.names.fullname" . }}
          namespace: {{ include "common.names.namespace" . | quote }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if or .Values.service.annotations .Values.commonAnnotations }}
          {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.service.annotations .Values.commonAnnotations ) "context" . ) }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
          {{- end }}
        spec:
          type: {{ .Values.service.type }}
          {{- if and .Values.service.clusterIP (eq .Values.service.type "ClusterIP") }}
          clusterIP: {{ .Values.service.clusterIP }}
          {{- end }}
          {{- if or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "NodePort") }}
          externalTrafficPolicy: {{ .Values.service.externalTrafficPolicy | quote }}
          {{- end }}
          {{- if and (eq .Values.service.type "LoadBalancer") (not (empty .Values.service.loadBalancerSourceRanges)) }}
          loadBalancerSourceRanges: {{ .Values.service.loadBalancerSourceRanges }}
          {{- end }}
          {{- if and (eq .Values.service.type "LoadBalancer") (not (empty .Values.service.loadBalancerIP)) }}
          loadBalancerIP: {{ .Values.service.loadBalancerIP }}
          {{- end }}
          {{- if .Values.service.sessionAffinity }}
          sessionAffinity: {{ .Values.service.sessionAffinity }}
          {{- end }}
          {{- if .Values.service.sessionAffinityConfig }}
          sessionAffinityConfig: {{- include "common.tplvalues.render" (dict "value" .Values.service.sessionAffinityConfig "context" $) | nindent 4 }}
          {{- end }}
          ports:
            - name: tcp-client
              port: {{ .Values.service.ports.http }}
              protocol: TCP
              targetPort: http
              {{- if and (or (eq .Values.service.type "NodePort") (eq .Values.service.type "LoadBalancer")) (not (empty .Values.service.nodePorts.http)) }}
              nodePort: {{ .Values.service.nodePorts.http }}
              {{- else if eq .Values.service.type "ClusterIP" }}
              nodePort: null
              {{- end }}
            {{- if .Values.service.extraPorts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.service.extraPorts "context" $) | nindent 4 }}
            {{- end }}
          {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) }}
          selector: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/svc.yaml
    - content: >
        {{- /*

        Copyright Broadcom, Inc. All Rights Reserved.

        SPDX-License-Identifier: APACHE-2.0

        */}}


        {{- if (include "solr.createTlsSecret" .) }}

        {{- $secretName := printf "%s-crt" (include "common.names.fullname" .) |
        trunc 63 | trimSuffix "-" }}

        {{- $ca := genCA "solr-ca" 365 }}

        {{- $releaseNamespace := include "common.names.namespace" . }}

        {{- $clusterDomain := .Values.clusterDomain }}

        {{- $serviceName := include "common.names.fullname" . }}

        {{- $headlessServiceName := printf "%s-headless" (include
        "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}

        {{- $altNames := list (printf "*.%s.%s.svc.%s" $serviceName
        $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $serviceName
        $releaseNamespace $clusterDomain) (printf "*.%s.%s.svc.%s"
        $headlessServiceName $releaseNamespace $clusterDomain) (printf
        "%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain)
        $serviceName }}

        {{- $cert := genSignedCert $serviceName nil $altNames 365 $ca }}

        apiVersion: v1

        kind: Secret

        metadata:
          name: {{ $secretName }}
          labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
            app.kubernetes.io/component: solr
          {{- if .Values.commonAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
          {{- end }}
          namespace: {{ include "common.names.namespace" . | quote }}
        type: kubernetes.io/tls

        data:
          tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
          tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
          ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
        {{- end }}
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/templates/tls-secrets.yaml
    - content: >
        # Copyright Broadcom, Inc. All Rights Reserved.

        # SPDX-License-Identifier: APACHE-2.0


        ## @section Global parameters

        ## Global Docker image parameters

        ## Please, note that this will override the image parameters, including
        dependencies, configured to use the global value

        ## Current available global Docker image parameters: imageRegistry,
        imagePullSecrets and storageClass

        ##


        ## @param global.imageRegistry Global Docker image registry

        ## @param global.imagePullSecrets Global Docker registry secret names as
        an array

        ## @param global.defaultStorageClass Global default StorageClass for
        Persistent Volume(s)

        ## @param global.storageClass DEPRECATED: use global.defaultStorageClass
        instead

        ##

        global:
          imageRegistry: ""
          ## E.g.
          ## imagePullSecrets:
          ##   - myRegistryKeySecretName
          ##
          imagePullSecrets: []
          defaultStorageClass: ""
          storageClass: ""
          ## Security parameters
          ##
          security:
            ## @param global.security.allowInsecureImages Allows skipping image verification
            allowInsecureImages: false
          ## Compatibility adaptations for Kubernetes platforms
          ##
          compatibility:
            ## Compatibility adaptations for Openshift
            ##
            openshift:
              ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
              ##
              adaptSecurityContext: auto
        ## @section Common parameters

        ##


        ## @param kubeVersion Override Kubernetes version

        ##

        kubeVersion: ""

        ## @param nameOverride String to partially override
        common.names.fullname template (will maintain the release name)

        ##

        nameOverride: ""

        ## @param fullnameOverride String to fully override
        common.names.fullname template

        ##

        fullnameOverride: ""

        ## @param clusterDomain Kubernetes cluster domain

        ##

        clusterDomain: cluster.local

        ## @param commonLabels Add labels to all the deployed resources

        ##

        commonLabels: {}

        ## @param commonAnnotations Add annotations to all the deployed
        resources

        ##

        commonAnnotations: {}

        ## @param extraDeploy Extra objects to deploy (value evaluated as a
        template)

        ##

        extraDeploy: []

        ## Enable diagnostic mode in the statefulset

        ##

        diagnosticMode:
          ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
          ##
          enabled: false
          ## @param diagnosticMode.command Command to override all containers in the statefulset
          ##
          command:
            - sleep
          ## @param diagnosticMode.args Args to override all containers in the statefulset
          ##
          args:
            - infinity
        ## @section Solr parameters

        ##


        ## Bitnami Solr image version

        ## ref: https://hub.docker.com/r/bitnami/solr/tags

        ## @param image.registry [default: REGISTRY_NAME] Solr image registry

        ## @param image.repository [default: REPOSITORY_NAME/solr] Solr image
        repository

        ## @skip image.tag Solr image tag (immutable tags are recommended)

        ## @param image.digest Solr image digest in the way sha256:aa.... Please
        note this parameter, if set, will override the tag

        ## @param image.pullPolicy image pull policy

        ## @param image.pullSecrets Specify docker-registry secret names as an
        array

        ## @param image.debug Specify if debug values should be set

        ##

        image:
          registry: docker.io
          repository: bitnami/solr
          tag: 9.7.0-debian-12-r4
          digest: ""
          ## Specify a imagePullPolicy
          ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
          ##
          pullPolicy: IfNotPresent
          ## Optionally specify an array of imagePullSecrets.
          ## Secrets must be manually created in the namespace.
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
          ## e.g:
          ## pullSecrets:
          ##   - myRegistryKeySecretName
          ##
          pullSecrets: []
          ## Set to true if you would like to see extra information on logs
          ##
          debug: false
        auth:
          ## @param auth.enabled Enable Solr authentication
          ##
          enabled: true
          ## @param auth.adminUsername Solr admin username
          ##
          adminUsername: admin
          ## @param auth.adminPassword Solr admin password. Autogenerated if not provided.
          ##
          adminPassword: ""
          ## @param auth.existingSecret Existing secret with Solr password
          ##
          existingSecret: ""
          ## @param auth.existingSecretPasswordKey Password key to be retrieved from existing secret
          ## NOTE: ignored unless `auth.existingSecret` parameter is set
          ##
          existingSecretPasswordKey: "solr-password"
        ## @param coreNames Solr core names to be created

        ##

        coreNames:
          - my-core
        ## @param cloudEnabled Enable Solr cloud mode

        ##

        cloudEnabled: true

        ## @param cloudBootstrap Enable cloud bootstrap. It will be performed
        from the node 0.

        ##

        cloudBootstrap: true

        ## @param collection Solr collection name

        ##

        collection: my-collection

        ## @param collectionShards Number of collection shards

        ##

        collectionShards: 1

        ## @param collectionReplicas Number of collection replicas

        ##

        collectionReplicas: 2

        ## @param serverDirectory Name of the created directory for the server

        ##

        serverDirectory: "server"

        ## @param javaMem Java memory options to pass to the Solr container

        ##

        javaMem: ""

        ## @param heap Java Heap options to pass to the Solr container

        ##

        heap: ""

        ## @param command Override Solr entrypoint string

        ##

        command:
          - /scripts/setup.sh
        ## @param args Arguments for the provided command if needed

        ##

        args: []

        ## @param extraEnvVars Additional environment variables to set

        ## Example:

        ## extraEnvVars:

        ##   - name: FOO

        ##     value: "bar"

        ##

        extraEnvVars: []

        ## @param extraEnvVarsCM ConfigMap with extra environment variables

        ##

        extraEnvVarsCM: ""

        ## @param extraEnvVarsSecret Secret with extra environment variables

        ##

        extraEnvVarsSecret: ""

        ## @section Solr statefulset parameters

        ##


        ## @param replicaCount Number of solr replicas

        ##

        replicaCount: 3

        ## @param revisionHistoryLimit The number of old history to retain to
        allow rollback

        ## NOTE: Explicitly setting this field to 0, will result in cleaning up
        all the history of your Deployment, thus that Deployment will not be
        able to roll back.

        revisionHistoryLimit: 10

        ## @param containerPorts.http Solr HTTP container port

        ##

        containerPorts:
          http: 8983
        ## Configure extra options for Solr containers' liveness, readiness and
        startup probes

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes

        ## @param livenessProbe.enabled Enable livenessProbe on Solr containers

        ## @param livenessProbe.initialDelaySeconds Initial delay seconds for
        livenessProbe

        ## @param livenessProbe.periodSeconds Period seconds for livenessProbe

        ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe

        ## @param livenessProbe.failureThreshold Failure threshold for
        livenessProbe

        ## @param livenessProbe.successThreshold Success threshold for
        livenessProbe

        ##

        livenessProbe:
          enabled: true
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 6
          successThreshold: 1
        ## @param readinessProbe.enabled Enable readinessProbe on Solr
        containers

        ## @param readinessProbe.initialDelaySeconds Initial delay seconds for
        readinessProbe

        ## @param readinessProbe.periodSeconds Period seconds for readinessProbe

        ## @param readinessProbe.timeoutSeconds Timeout seconds for
        readinessProbe

        ## @param readinessProbe.failureThreshold Failure threshold for
        readinessProbe

        ## @param readinessProbe.successThreshold Success threshold for
        readinessProbe

        ##

        readinessProbe:
          enabled: true
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 6
          successThreshold: 1
        ## @param startupProbe.enabled Enable startupProbe on Solr containers

        ## @param startupProbe.initialDelaySeconds Initial delay seconds for
        startupProbe

        ## @param startupProbe.periodSeconds Period seconds for startupProbe

        ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe

        ## @param startupProbe.failureThreshold Failure threshold for
        startupProbe

        ## @param startupProbe.successThreshold Success threshold for
        startupProbe

        ##

        startupProbe:
          enabled: false
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 15
          failureThreshold: 15
          successThreshold: 1
        ## @param customLivenessProbe Custom livenessProbe that overrides the
        default one

        ##

        customLivenessProbe: {}

        ## @param customReadinessProbe Custom readinessProbe that overrides the
        default one

        ##

        customReadinessProbe: {}

        ## @param customStartupProbe Custom startupProbe that overrides the
        default one

        ##

        customStartupProbe: {}

        ## @param lifecycleHooks lifecycleHooks for the Solr container to
        automate configuration before or after startup

        ##

        lifecycleHooks: {}

        ## Solr resource requests and limits

        ## ref:
        https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

        ## @param resourcesPreset Set container resources according to one
        common preset (allowed values: none, nano, micro, small, medium, large,
        xlarge, 2xlarge). This is ignored if resources is set (resources is
        recommended for production).

        ## More information:
        https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15

        ##

        resourcesPreset: "medium"

        ## @param resources Set container requests and limits for different
        resources like CPU or memory (essential for production workloads)

        ## Example:

        ## resources:

        ##   requests:

        ##     cpu: 2

        ##     memory: 512Mi

        ##   limits:

        ##     cpu: 3

        ##     memory: 1024Mi

        ##

        resources: {}

        ## Solr pods' Security Context

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod

        ## @param podSecurityContext.enabled Enable Solr pods' Security Context

        ## @param podSecurityContext.fsGroupChangePolicy Set filesystem group
        change policy

        ## @param podSecurityContext.sysctls Set kernel settings using the
        sysctl interface

        ## @param podSecurityContext.supplementalGroups Set filesystem extra
        groups

        ## @param podSecurityContext.fsGroup Set Solr pod's Security Context
        fsGroup

        ##

        podSecurityContext:
          enabled: true
          fsGroupChangePolicy: Always
          sysctls: []
          supplementalGroups: []
          fsGroup: 1001
        ## Solr containers' Security Context

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container

        ## @param containerSecurityContext.enabled Enabled containers' Security
        Context

        ## @param containerSecurityContext.seLinuxOptions [object,nullable] Set
        SELinux options in container

        ## @param containerSecurityContext.runAsUser Set containers' Security
        Context runAsUser

        ## @param containerSecurityContext.runAsGroup Set containers' Security
        Context runAsGroup

        ## @param containerSecurityContext.runAsNonRoot Set container's Security
        Context runAsNonRoot

        ## @param containerSecurityContext.privileged Set container's Security
        Context privileged

        ## @param containerSecurityContext.readOnlyRootFilesystem Set
        container's Security Context readOnlyRootFilesystem

        ## @param containerSecurityContext.allowPrivilegeEscalation Set
        container's Security Context allowPrivilegeEscalation

        ## @param containerSecurityContext.capabilities.drop List of
        capabilities to be dropped

        ## @param containerSecurityContext.seccompProfile.type Set container's
        Security Context seccomp profile

        ##

        containerSecurityContext:
          enabled: true
          seLinuxOptions: {}
          runAsUser: 1001
          runAsGroup: 1001
          runAsNonRoot: true
          privileged: false
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: "RuntimeDefault"
        ## @param automountServiceAccountToken Mount Service Account token in
        pod

        ##

        automountServiceAccountToken: false

        ## @param hostAliases Solr pods host aliases

        ##
        https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/

        ##

        hostAliases: []

        ## @param podLabels Extra labels for Solr pods

        ## ref:
        https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/

        ##

        podLabels: {}

        ## @param podAnnotations Annotations for Solr pods

        ## ref:
        https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/

        ##

        podAnnotations: {}

        ## @param podAffinityPreset Solr pod affinity preset. Ignored if
        `affinity` is set. Allowed values: `soft` or `hard`

        ## ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity

        ##

        podAffinityPreset: ""

        ## @param podAntiAffinityPreset Solr pod anti-affinity preset. Ignored
        if `affinity` is set. Allowed values: `soft` or `hard`

        ## Ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity

        ##

        podAntiAffinityPreset: soft

        ## Node affinity preset

        ## Ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity

        ##

        nodeAffinityPreset:
          ## @param nodeAffinityPreset.type Solr node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
          ##
          type: ""
          ## @param nodeAffinityPreset.key Solr node label key to match Ignored if `affinity` is set.
          ## E.g.
          ## key: "kubernetes.io/e2e-az-name"
          ##
          key: ""
          ## @param nodeAffinityPreset.values Solr node label values to match. Ignored if `affinity` is set.
          ## E.g.
          ## values:
          ##   - e2e-az1
          ##   - e2e-az2
          ##
          values: []
        ## @param affinity Affinity settings for Solr pod assignment. Evaluated
        as a template

        ## Ref:
        https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity

        ##

        affinity: {}

        ## @param nodeSelector Node labels for Solr pods assignment. Evaluated
        as a template

        ## ref:
        https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/

        ##

        nodeSelector: {}

        ## @param tolerations Tolerations for Solr pods assignment. Evaluated as
        a template

        ## ref:
        https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/

        ##

        tolerations: []

        ## @param topologySpreadConstraints Topology Spread Constraints for pod
        assignment spread across your cluster among failure-domains. Evaluated
        as a template

        ## Ref:
        https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods

        ##

        topologySpreadConstraints: []

        ## @param podManagementPolicy Management Policy for Solr StatefulSet

        ## StatefulSet controller supports relaxing its ordering guarantees
        while preserving its uniqueness and identity guarantees

        ## There are two valid pod management policies: OrderedReady and
        Parallel

        ## ref:
        https://kubernetes.io/docs/tutorials/stateful-application/basic-stateful-set/#pod-management-policy

        ##

        podManagementPolicy: Parallel

        ## @param priorityClassName Solr pods' priority.

        ## ref:
        https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/

        ##

        priorityClassName: ""

        ## @param schedulerName Kubernetes pod scheduler registry

        ##
        https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/

        ##

        schedulerName: ""

        ## @param updateStrategy.type Solr statefulset strategy type

        ## @param updateStrategy.rollingUpdate Solr statefulset rolling update
        configuration parameters

        ## ref:
        https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies

        ##

        updateStrategy:
          type: RollingUpdate
          rollingUpdate: {}
        ## @param enableServiceLinks Whether information about services should
        be injected into pod's environment variable

        ## The environment variables injected by service links are not used, but
        can lead to slow boot times or slow running of the scripts when there
        are many services in the current namespace.

        ## If you experience slow pod startups or slow running of the scripts
        you probably want to set this to `false`.

        ##

        enableServiceLinks: true

        ## Solr Pod Disruption Budget configuration

        ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/

        ## @param pdb.create Enable a Pod Disruption Budget creation

        ## @param pdb.minAvailable Minimum number/percentage of pods that should
        remain scheduled

        ## @param pdb.maxUnavailable Maximum number/percentage of pods that may
        be made unavailable

        ##

        pdb:
          create: true
          minAvailable: ""
          maxUnavailable: ""
        ## @param extraVolumes Optionally specify extra list of additional
        volumes for the Solr pod(s)

        ##

        extraVolumes: []

        ## @param extraVolumeMounts Optionally specify extra list of additional
        volumeMounts for the Solr container(s)

        ##

        extraVolumeMounts: []

        ## @param initContainers Add init containers to the Solr pod(s)

        ## Example:

        ## initContainers:

        ##   - name: your-image-name

        ##     image: your-image

        ##     imagePullPolicy: Always

        ##     ports:

        ##       - name: portname

        ##         containerPort: 1234

        ##

        initContainers: []

        ## @param sidecars Add sidecars to the Solr pod(s)

        ## Example:

        ## sidecars:

        ##   - name: your-image-name

        ##     image: your-image

        ##     imagePullPolicy: Always

        ##     ports:

        ##       - name: portname

        ##         containerPort: 1234

        ##

        sidecars: []

        ## @section Traffic Exposure parameters

        ##

        service:
          ## @param service.type Kubernetes Service type
          ##
          type: ClusterIP
          ## @param service.ports.http Solr HTTP service port
          ##
          ports:
            http: 8983
          ## @param service.nodePorts.http Node port for the HTTP service
          ## NOTE: choose port between <30000-32767>
          ##
          nodePorts:
            http: ""
          ## @param service.sessionAffinity Control where client requests go, to the same pod or round-robin
          ## Values: ClientIP or None
          ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
          ##
          sessionAffinity: None
          ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
          ## sessionAffinityConfig:
          ##   clientIP:
          ##     timeoutSeconds: 300
          ##
          sessionAffinityConfig: {}
          ## @param service.clusterIP Solr service Cluster IP
          ## e.g.:
          ## clusterIP: None
          ##
          clusterIP: ""
          ## @param service.loadBalancerIP Solr service Load Balancer IP
          ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
          ##
          loadBalancerIP: ""
          ## @param service.loadBalancerSourceRanges Solr service Load Balancer sources
          ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
          ## e.g:
          ## loadBalancerSourceRanges:
          ##   - 10.10.10.0/24
          ##
          loadBalancerSourceRanges: []
          ## @param service.externalTrafficPolicy Solr service external traffic policy
          ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
          ##
          externalTrafficPolicy: Cluster
          ## @param service.annotations Additional custom annotations for Solr service
          ##
          annotations: {}
          ## @param service.extraPorts Extra ports to expose in the Solr service (normally used with the `sidecar` value)
          ##
          extraPorts: []
          ## Headless service properties
          ##
          headless:
            ## @param service.headless.annotations Annotations for the headless service.
            ##
            annotations: {}
        ## Network Policies

        ## Ref:
        https://kubernetes.io/docs/concepts/services-networking/network-policies/

        ##

        networkPolicy:
          ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
          ##
          enabled: true
          ## @param networkPolicy.allowExternal Don't require client label for connections
          ## The Policy model to apply. When set to false, only pods with the correct
          ## client label will have network access to the ports the application is listening
          ## on. When true, the app will accept connections from any source
          ## (with the correct destination port).
          ##
          allowExternal: true
          ## @param networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
          ##
          allowExternalEgress: true
          ## @param networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
          ## e.g:
          ## extraIngress:
          ##   - ports:
          ##       - port: 1234
          ##     from:
          ##       - podSelector:
          ##           - matchLabels:
          ##               - role: frontend
          ##       - podSelector:
          ##           - matchExpressions:
          ##               - key: role
          ##                 operator: In
          ##                 values:
          ##                   - frontend
          extraIngress: []
          ## @param networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy
          ## e.g:
          ## extraEgress:
          ##   - ports:
          ##       - port: 1234
          ##     to:
          ##       - podSelector:
          ##           - matchLabels:
          ##               - role: frontend
          ##       - podSelector:
          ##           - matchExpressions:
          ##               - key: role
          ##                 operator: In
          ##                 values:
          ##                   - frontend
          ##
          extraEgress: []
          ## @param networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces
          ## @param networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces
          ##
          ingressNSMatchLabels: {}
          ingressNSPodMatchLabels: {}
        ## Solr ingress parameters

        ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/

        ##

        ingress:
          ## @param ingress.enabled Enable ingress record generation for Apache Geode
          ##
          enabled: false
          ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
          ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
          ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
          ##
          ingressClassName: ""
          ## @param ingress.pathType Ingress path type
          ##
          pathType: ImplementationSpecific
          ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
          ##
          apiVersion: ""
          ## @param ingress.hostname Default host for the ingress record
          ##
          hostname: solr.local
          ## @param ingress.path Default path for the ingress record
          ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
          ##
          path: /
          ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
          ## Use this parameter to set the required annotations for cert-manager, see
          ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
          ## e.g:
          ## annotations:
          ##   kubernetes.io/ingress.class: nginx
          ##   cert-manager.io/cluster-issuer: cluster-issuer-name
          ##
          annotations: {}
          ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
          ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
          ## You can:
          ##   - Use the `ingress.secrets` parameter to create this TLS secret
          ##   - Rely on cert-manager to create it by setting the corresponding annotations
          ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
          ##
          tls: false
          ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
          ##
          selfSigned: false
          ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
          ## e.g:
          ## extraHosts:
          ##   - name: solr.local
          ##     path: /
          ##
          extraHosts: []
          ## @param ingress.extraPaths Any additional arbitrary paths that may need to be added to the ingress under the main host.
          ## For example: The ALB ingress controller requires a special rule for handling SSL redirection.
          ## extraPaths:
          ## - path: /*
          ##   backend:
          ##     serviceName: ssl-redirect
          ##     servicePort: use-annotation
          ##
          extraPaths: []
          ## @param ingress.extraTls The tls configuration for additional hostnames to be covered with this ingress record.
          ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
          ## extraTls:
          ## - hosts:
          ##     - solr.local
          ##   secretName: solr.local-tls
          ##
          extraTls: []
          ## @param ingress.secrets If you're providing your own certificates, please use this to add the certificates as secrets
          ## key and certificate should start with -----BEGIN CERTIFICATE----- or
          ## -----BEGIN RSA PRIVATE KEY-----
          ##
          ## name should line up with a tlsSecret set further up
          ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
          ##
          ## It is also possible to create and manage the certificates outside of this helm chart
          ## Please see README.md for more information
          ## e.g:
          ## - name: solr.local-tls
          ##   key:
          ##   certificate:
          ##
          secrets: []
          ## @param ingress.extraRules Additional rules to be covered with this ingress record
          ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
          ## e.g:
          ## extraRules:
          ## - host: solr.local
          ##     http:
          ##       path: /
          ##       backend:
          ##         service:
          ##           name: solr-svc
          ##           port:
          ##             name: http
          ##
          extraRules: []
        ## @section Persistence parameters

        ##


        ## Enable persistence using Persistent Volume Claims

        ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/

        ##

        persistence:
          ## @param persistence.enabled Use a PVC to persist data.
          ##
          enabled: true
          ## @param persistence.existingClaim A manually managed Persistent Volume and Claim
          ## If defined, PVC must be created manually before volume will be bound
          ## The value is evaluated as a template
          ##
          existingClaim: ""
          ## @param persistence.storageClass Storage class of backing PVC
          ## If defined, storageClassName: <storageClass>
          ## If set to "-", storageClassName: "", which disables dynamic provisioning
          ## If undefined (the default) or set to null, no storageClassName spec is
          ## set, choosing the default provisioner.
          ##
          storageClass: ""
          ## @param persistence.accessModes Persistent Volume Access Modes
          ##
          accessModes:
            - ReadWriteOnce
          ## @param persistence.size Size of data volume
          ##
          size: 8Gi
          ## @param persistence.annotations Persistence annotations for Solr
          ##
          annotations: {}
          ## @param persistence.mountPath Persistence mount path for Solr
          ##
          mountPath: /bitnami/solr
          ## @param persistence.subPath Path within the volume from which the container's
          ## volume should be mounted. Defaults to "" (volume's root).
          ##
          subPath: ""
          ## @param persistence.subPathExpr Expanded path within the volume from which
          ## the container's volume should be mounted. Behaves similarly to SubPath but
          ## environment variable references $(VAR_NAME) are expanded using the
          ## container's environment. Defaults to "" (volume's root).
          ## SubPathExpr and SubPath are mutually exclusive.
          ##
          subPathExpr: ""
          ## @param persistence.selector Selector to match an existing Persistent Volume for Solr data PVC
          ## If set, the PVC can't have a PV dynamically provisioned for it
          ## E.g.
          ## selector:
          ##   matchLabels:
          ##     app: my-app
          ##
          selector: {}
        ## @section Volume Permissions parameters

        ##


        ## Init containers parameters:

        ## volumePermissions: Change the owner and group of the persistent
        volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each node

        ##

        volumePermissions:
          ## @param volumePermissions.enabled Enable init container that changes the owner and group of the persistent volume
          ##
          enabled: false
          ## @param volumePermissions.image.registry [default: REGISTRY_NAME] Init container volume-permissions image registry
          ## @param volumePermissions.image.repository [default: REPOSITORY_NAME/os-shell] Init container volume-permissions image repository
          ## @skip volumePermissions.image.tag Init container volume-permissions image tag (immutable tags are recommended)
          ## @param volumePermissions.image.digest Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
          ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
          ## @param volumePermissions.image.pullSecrets Init container volume-permissions image pull secrets
          ##
          image:
            registry: docker.io
            repository: bitnami/os-shell
            tag: 12-debian-12-r34
            digest: ""
            pullPolicy: IfNotPresent
            ## Optionally specify an array of imagePullSecrets.
            ## Secrets must be manually created in the namespace.
            ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
            ## Example:
            ## pullSecrets:
            ##   - myRegistryKeySecretName
            ##
            pullSecrets: []
          ## Init container resource requests and limits
          ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          ## @param volumePermissions.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if volumePermissions.resources is set (volumePermissions.resources is recommended for production).
          ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
          ##
          resourcesPreset: "nano"
          ## @param volumePermissions.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
          ## Example:
          ## resources:
          ##   requests:
          ##     cpu: 2
          ##     memory: 512Mi
          ##   limits:
          ##     cpu: 3
          ##     memory: 1024Mi
          ##
          resources: {}
          ## Init container' Security Context
          ## Note: the chown of the data folder is done to containerSecurityContext.runAsUser
          ## and not the below volumePermissions.containerSecurityContext.runAsUser
          ## @param volumePermissions.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
          ## @param volumePermissions.containerSecurityContext.runAsUser User ID for the init container
          ##
          containerSecurityContext:
            seLinuxOptions: {}
            runAsUser: 0
        ## @section Other Parameters

        ##


        ## Service account for Solr to use.

        ## ref:
        https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/

        ##

        serviceAccount:
          ## @param serviceAccount.create Enable creation of ServiceAccount for Solr pod
          ##
          create: true
          ## @param serviceAccount.name The name of the ServiceAccount to use.
          ## If not set and create is true, a name is generated using the common.names.fullname template
          ##
          name: ""
          ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
          ## Can be set to false if pods using this serviceAccount do not need to use K8s API
          ##
          automountServiceAccountToken: false
          ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount
          ##
          annotations: {}
        ## @section Solr TLS parameters

        ##


        ## TLS configuration

        ##

        tls:
          ## @param tls.enabled Enable the TLS/SSL configuration
          ##
          enabled: false
          ## @param tls.autoGenerated Create self-signed TLS certificates. Currently only supports PEM certificates
          ##
          autoGenerated: false
          ## @param tls.certificatesSecretName Name of the secret that contains the certificates
          ## It should contain two keys called "keystore.p12" and "trustore.p12" with the files in JKS or P12 format
          ##   certificatesSecretName: cert-files
          ##
          certificatesSecretName: ""
          ## @param tls.passwordsSecretName Set the name of the secret that contains the passwords for the certificate files
          ## It should contain two keys called "tls-keystore-password" and "tls-truststore-password".
          ## e.g:
          ## passwordsSecretName: my-passwords
          ##
          passwordsSecretName: ""
          ## @param tls.keystorePassword Password to access the keystore when it's password-protected
          ##
          keystorePassword: ""
          ## @param tls.truststorePassword Password to access the truststore when it's password-protected
          ##
          truststorePassword: ""
          ## We usually recommend not to specify default resources and to leave this as a conscious
          ## choice for the user. This also increases chances charts run on environments with little
          ## resources, such as Minikube. If you do want to specify resources, uncomment the following
          ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          ## @param tls.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if tls.resources is set (tls.resources is recommended for production).
          ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
          ##
          resourcesPreset: "nano"
          ## @param tls.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
          ## Example:
          ## resources:
          ##   requests:
          ##     cpu: 2
          ##     memory: 512Mi
          ##   limits:
          ##     cpu: 3
          ##     memory: 1024Mi
          ##
          resources: {}
        ## @section Metrics parameters

        ##


        ## Configuration for the Solr Prometheus exporter

        ##

        metrics:
          ## @param metrics.enabled Deploy a Solr Prometheus exporter deployment to expose metrics
          ##
          enabled: false
          ## @param metrics.revisionHistoryLimit The number of old history to retain to allow rollback
          ## NOTE: Explicitly setting this field to 0, will result in cleaning up all the history of your Deployment, thus that Deployment will not be able to rollback.
          revisionHistoryLimit: 10
          ## @param metrics.configFile Config file with metrics to export by the Solr prometheus metrics. To change it mount a different file using `extraConfigMaps`
          ##
          configFile: "/opt/bitnami/solr/prometheus-exporter/conf/solr-exporter-config.xml"
          ## @param metrics.threads Number of Solr exporter threads
          ##
          threads: 7
          ## @param metrics.command Override Solr entrypoint string.
          ##
          command: []
          ## @param metrics.args Arguments for the provided command if needed
          ##
          args: []
          ## @param metrics.extraEnvVars Additional environment variables to set
          ## Example:
          ## extraEnvVars:
          ##   - name: FOO
          ##     value: "bar"
          ##
          extraEnvVars: []
          ## @param metrics.extraEnvVarsCM ConfigMap with extra environment variables
          ##
          extraEnvVarsCM: ""
          ## @param metrics.extraEnvVarsSecret Secret with extra environment variables
          ##
          extraEnvVarsSecret: ""
          ## @param metrics.containerPorts.http Solr Prometheus exporter HTTP container port
          ##
          containerPorts:
            http: 9231
          ## Configure extra options for liveness probe
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
          ## @param metrics.livenessProbe.enabled Enable livenessProbe on Solr Prometheus exporter containers
          ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
          ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe
          ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
          ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
          ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe
          ##
          livenessProbe:
            enabled: true
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 15
            failureThreshold: 15
            successThreshold: 1
          ## @param metrics.readinessProbe.enabled Enable readinessProbe on Solr Prometheus exporter containers
          ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
          ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe
          ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
          ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
          ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe
          ##
          readinessProbe:
            enabled: true
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 15
            failureThreshold: 15
            successThreshold: 15
          ## @param metrics.startupProbe.enabled Enable startupProbe on Solr Prometheus exporter containers
          ## @param metrics.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
          ## @param metrics.startupProbe.periodSeconds Period seconds for startupProbe
          ## @param metrics.startupProbe.timeoutSeconds Timeout seconds for startupProbe
          ## @param metrics.startupProbe.failureThreshold Failure threshold for startupProbe
          ## @param metrics.startupProbe.successThreshold Success threshold for startupProbe
          ##
          startupProbe:
            enabled: false
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 15
            successThreshold: 1
          ## @param metrics.customLivenessProbe Custom livenessProbe that overrides the default one
          ##
          customLivenessProbe: {}
          ## @param metrics.customReadinessProbe Custom readinessProbe that overrides the default one
          ##
          customReadinessProbe: {}
          ## @param metrics.customStartupProbe Custom startupProbe that overrides the default one
          ##
          customStartupProbe: {}
          ## Solr Prometheus exporter resource requests and limits
          ## ref: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
          ## @param metrics.resourcesPreset Set container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if metrics.resources is set (metrics.resources is recommended for production).
          ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
          ##
          resourcesPreset: "nano"
          ## @param metrics.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
          ## Example:
          ## resources:
          ##   requests:
          ##     cpu: 2
          ##     memory: 512Mi
          ##   limits:
          ##     cpu: 3
          ##     memory: 1024Mi
          ##
          resources: {}
          ## Solr Prometheus exporter containers' Security Context
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
          ## @param metrics.containerSecurityContext.enabled Enabled containers' Security Context
          ## @param metrics.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
          ## @param metrics.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
          ## @param metrics.containerSecurityContext.runAsGroup Set containers' Security Context runAsGroup
          ## @param metrics.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
          ## @param metrics.containerSecurityContext.privileged Set container's Security Context privileged
          ## @param metrics.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
          ## @param metrics.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
          ## @param metrics.containerSecurityContext.capabilities.drop List of capabilities to be dropped
          ## @param metrics.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
          ##
          containerSecurityContext:
            enabled: true
            seLinuxOptions: {}
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: "RuntimeDefault"
          ## Solr Prometheus exporter pods' Security Context
          ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
          ## @param metrics.podSecurityContext.enabled Enable Solr Prometheus exporter pods' Security Context
          ## @param metrics.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
          ## @param metrics.podSecurityContext.sysctls Set kernel settings using the sysctl interface
          ## @param metrics.podSecurityContext.supplementalGroups Set filesystem extra groups
          ## @param metrics.podSecurityContext.fsGroup Group ID for the pods.
          ##
          podSecurityContext:
            enabled: true
            fsGroupChangePolicy: Always
            sysctls: []
            supplementalGroups: []
            fsGroup: 1001
          ## @param metrics.podLabels Additional labels for Solr Prometheus exporter pod(s)
          ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
          ##
          podLabels: {}
          ## @param metrics.podAnnotations Additional annotations for Solr Prometheus exporter pod(s)
          ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
          ##
          podAnnotations: {}
          ## @param metrics.podAffinityPreset Solr Prometheus exporter pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
          ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
          ##
          podAffinityPreset: ""
          ## @param metrics.podAntiAffinityPreset Solr Prometheus exporter pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
          ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
          ##
          podAntiAffinityPreset: soft
          ## Node affinity preset
          ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
          ##
          nodeAffinityPreset:
            ## @param metrics.nodeAffinityPreset.type Solr Prometheus exporter node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
            ##
            type: ""
            ## @param metrics.nodeAffinityPreset.key Solr Prometheus exporter node label key to match Ignored if `affinity` is set.
            ## E.g.
            ## key: "kubernetes.io/e2e-az-name"
            ##
            key: ""
            ## @param metrics.nodeAffinityPreset.values Solr Prometheus exporter node label values to match. Ignored if `affinity` is set.
            ## E.g.
            ## values:
            ##   - e2e-az1
            ##   - e2e-az2
            ##
            values: []
          ## @param metrics.affinity Affinity settings for Solr Prometheus exporter pod assignment. Evaluated as a template
          ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
          ##
          affinity: {}
          ## @param metrics.nodeSelector Node labels for Solr Prometheus exporter pods assignment. Evaluated as a template
          ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
          ##
          nodeSelector: {}
          ## @param metrics.tolerations Tolerations for Solr Prometheus exporter pods assignment. Evaluated as a template
          ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
          ##
          tolerations: []
          ## @param metrics.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
          ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
          ##
          topologySpreadConstraints: []
          ## @param metrics.priorityClassName Solr Prometheus exporter pods' priority.
          ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
          ##
          priorityClassName: ""
          ## @param metrics.schedulerName Kubernetes pod scheduler registry
          ## https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
          ##
          schedulerName: ""
          ## @param metrics.automountServiceAccountToken Mount Service Account token in pod
          ##
          automountServiceAccountToken: false
          ## @param metrics.hostAliases Solr Prometheus exporter pod host aliases
          ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
          ##
          hostAliases: []
          ## @param metrics.updateStrategy.type Solr Prometheus exporter deployment strategy type
          ## @param metrics.updateStrategy.rollingUpdate Solr Prometheus exporter deployment rolling update configuration parameters
          ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
          ##
          updateStrategy:
            type: RollingUpdate
            rollingUpdate: {}
          ## @param metrics.extraVolumes Optionally specify extra list of additional volumes for the Solr Prometheus exporter pod(s)
          ##
          extraVolumes: []
          ## @param metrics.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Solr Prometheus exporter container(s)
          ##
          extraVolumeMounts: []
          ## @param metrics.initContainers Add init containers to the Solr Prometheus exporter pod(s)
          ## Example:
          ## initContainers:
          ##   - name: your-image-name
          ##     image: your-image
          ##     imagePullPolicy: Always
          ##     ports:
          ##       - name: portname
          ##         containerPort: 1234
          ##
          initContainers: []
          ## @param metrics.sidecars Add sidecars to the Solr Prometheus exporter pod(s)
          ## Example:
          ## sidecars:
          ##   - name: your-image-name
          ##     image: your-image
          ##     imagePullPolicy: Always
          ##     ports:
          ##       - name: portname
          ##         containerPort: 1234
          ##
          sidecars: []
          ## Service for the Solr Prometheus exporter deployment
          ##
          service:
            ## @param metrics.service.type Kubernetes Service type
            ##
            type: "ClusterIP"
            ## @param metrics.service.ports.http Solr Prometheus exporter HTTP service port
            ##
            ports:
              http: 9231
            ## @param metrics.service.sessionAffinity Control where client requests go, to the same pod or round-robin
            ## Values: ClientIP or None
            ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
            ##
            sessionAffinity: None
            ## @param metrics.service.clusterIP Solr Prometheus exporter service Cluster IP
            ## e.g.:
            ## clusterIP: None
            ##
            clusterIP: ""
            ## @param metrics.service.annotations annotations for Solr Prometheus exporter service
            ##
            annotations: {}
            ## @param metrics.service.labels Additional labels for Solr Prometheus exporter service
            ##
            labels: {}
          ## Prometheus Operator ServiceMonitor configuration
          ##
          serviceMonitor:
            ## @param metrics.serviceMonitor.enabled Create ServiceMonitor Resource for scraping metrics using Prometheus Operator
            ##
            enabled: false
            ## @param metrics.serviceMonitor.namespace Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)
            ##
            namespace: ""
            ## @param metrics.serviceMonitor.interval Interval at which metrics should be scraped.
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
            ##
            interval: ""
            ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
            ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
            ##
            scrapeTimeout: ""
            ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor will be discovered by Prometheus
            ##
            additionalLabels: {}
            ## @param metrics.serviceMonitor.selector Prometheus instance selector labels
            ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
            ##
            selector: {}
            ## @param metrics.serviceMonitor.relabelings RelabelConfigs to apply to samples before scraping
            ##
            relabelings: []
            ## @param metrics.serviceMonitor.metricRelabelings MetricRelabelConfigs to apply to samples before ingestion
            ##
            metricRelabelings: []
            ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
            ##
            honorLabels: false
            ## @param metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in prometheus.
            ##
            jobLabel: ""
          ## Custom PrometheusRule to be defined
          ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
          ##
          prometheusRule:
            ## @param metrics.prometheusRule.enabled Create a custom prometheusRule Resource for scraping metrics using PrometheusOperator
            ##
            enabled: false
            ## @param metrics.prometheusRule.namespace The namespace in which the prometheusRule will be created
            ##
            namespace: ""
            ## @param metrics.prometheusRule.additionalLabels Additional labels for the prometheusRule
            ##
            additionalLabels: {}
            ## @param metrics.prometheusRule.rules Custom Prometheus rules
            ## e.g:
            ## rules:
            ##   - alert: SolrDown
            ##     expr: solr_up{service="{{ template "common.names.fullname" . }}-exporter"} == 0
            ##     for: 2m
            ##     labels:
            ##       severity: error
            ##     annotations:
            ##       summary: Solr instance {{ "{{ $labels.instance }}" }} down
            ##       description: Solr instance {{ "{{ $labels.instance }}" }} is down
            ##
            rules: []
        ## @section ZooKeeper parameters

        ##


        ## ZooKeeper chart configuration

        ## ref:
        https://github.com/bitnami/charts/blob/main/bitnami/zookeeper/values.yaml

        ##

        zookeeper:
          ## @param zookeeper.enabled Enable ZooKeeper deployment. Needed for Solr cloud
          ##
          enabled: true
          ## @param zookeeper.fourlwCommandsWhitelist A list of comma separated Four Letter Words commands that can be executed
          ##
          fourlwCommandsWhitelist: srvr,mntr,conf,ruok
          ## @param zookeeper.containerPorts.client ZooKeeper client container port
          ##
          containerPorts:
            client: 2181
          ## @param zookeeper.replicaCount Number of ZooKeeper nodes
          ##
          replicaCount: 3
          ## ZooKeeper Persistence parameters
          ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
          ## @param zookeeper.persistence.enabled Enable persistence on ZooKeeper using PVC(s)
          ## @param zookeeper.persistence.storageClass Persistent Volume storage class
          ## @param zookeeper.persistence.accessModes Persistent Volume access modes
          ## @param zookeeper.persistence.size Persistent Volume size
          ##
          persistence:
            enabled: true
            storageClass: ""
            accessModes:
              - ReadWriteOnce
            size: 8Gi
        ## External Zookeeper Configuration

        ## All of these values are only used if `zookeeper.enabled=false`

        ##

        externalZookeeper:
          ## @param externalZookeeper.servers List of external zookeeper servers to use
          ##
          servers: []
      name: >-
        .chart/95d72a7d5160840cdb920f989af677116410948b6373c78743821c6515a54603/solr/values.yaml
    - content: |
        defaultNamespace: solr
        name: solr
        namespaceLabels:
          team: seint
        helm:
          releaseName: solr
          chart: oci://registry.rancher.tcu.gov.br/aplicacoes/solr
          #version: 8.10.0
          #version: 9.2.1
          #version: 9.4.1
          version: 9.5.1
          valuesFiles:
            - values.yaml

        kustomize:
          dir: ./security
      name: fleet.yaml
    - content: |-
        secretGenerator:
          - name: solr-policy
            files:
              - security.policy
            type: Opaque

        generatorOptions:
          disableNameSuffixHash: true # fixar nome da secret
      name: security/kustomization.yaml
    - content: >-
        /*
         * Licensed to the Apache Software Foundation (ASF) under one or more
         * contributor license agreements.  See the NOTICE file distributed with
         * this work for additional information regarding copyright ownership.
         * The ASF licenses this file to You under the Apache License, Version 2.0
         * (the "License"); you may not use this file except in compliance with
         * the License.  You may obtain a copy of the License at
         *
         *     http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         */

        // Policy file for solr. Please keep minimal and avoid wildcards.


        // permissions needed for tests to pass, based on properties set by the
        build system

        // NOTE: if the property is not set, the permission entry is ignored.

        grant {
          // 3rd party jar resources (where symlinks are not supported), test-files/ resources
          permission java.io.FilePermission "${common.dir}${/}-", "read";
          permission java.io.FilePermission "${common.dir}${/}..${/}solr${/}-", "read";

          // system jar resources
          permission java.io.FilePermission "${java.home}${/}-", "read";

          // tmpdir
          permission java.io.FilePermission "${java.io.tmpdir}", "read,write";
          permission java.io.FilePermission "${java.io.tmpdir}${/}-", "read,write,delete";

          // Test launchers (randomizedtesting, etc.)
          permission java.io.FilePermission "${junit4.childvm.cwd}", "read";
          permission java.io.FilePermission "${junit4.childvm.cwd}${/}temp", "read,write,delete";
          permission java.io.FilePermission "${junit4.childvm.cwd}${/}temp${/}-", "read,write,delete";
          permission java.io.FilePermission "${junit4.childvm.cwd}${/}jacoco.db", "write";
          permission java.io.FilePermission "${junit4.tempDir}${/}*", "read,write,delete";
          permission java.io.FilePermission "${clover.db.dir}${/}-", "read,write,delete";
          // 3rd party jar resources (where symlinks are supported)
          permission java.io.FilePermission "${user.home}${/}.ivy2${/}cache${/}-", "read";

          permission java.io.FilePermission "${tests.linedocsfile}", "read";
          // DirectoryFactoryTest messes with these (wtf?)
          permission java.io.FilePermission "/tmp/inst1/conf/solrcore.properties", "read";
          permission java.io.FilePermission "/path/to/myinst/conf/solrcore.properties", "read";
          // TestConfigSets messes with these (wtf?)
          permission java.io.FilePermission "/path/to/solr/home/lib", "read";

          permission java.nio.file.LinkPermission "hard";

          // all possibilities of accepting/binding/connections on localhost with ports >=1024:
          permission java.net.SocketPermission "localhost:1024-", "accept,listen,connect,resolve";
          permission java.net.SocketPermission "127.0.0.1:1024-", "accept,listen,connect,resolve";
          permission java.net.SocketPermission "[::1]:1024-", "accept,listen,connect,resolve";
          // "dead hosts", we try to keep it fast
          permission java.net.SocketPermission "[::1]:4", "connect,resolve";
          permission java.net.SocketPermission "[::1]:6", "connect,resolve";
          permission java.net.SocketPermission "[::1]:8", "connect,resolve";

          // Basic permissions needed for Lucene to work:
          permission java.util.PropertyPermission "*", "read,write";

          // needed by randomizedtesting runner to identify test methods.
          permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
          permission java.lang.RuntimePermission "accessDeclaredMembers";
          // needed by certain tests to redirect sysout/syserr:
          permission java.lang.RuntimePermission "setIO";
          // needed by randomized runner to catch failures from other threads:
          permission java.lang.RuntimePermission "setDefaultUncaughtExceptionHandler";
          // needed by randomized runner getTopThreadGroup:
          permission java.lang.RuntimePermission "modifyThreadGroup";
          // needed by tests e.g. shutting down executors:
          permission java.lang.RuntimePermission "modifyThread";
          // needed for tons of test hacks etc
          permission java.lang.RuntimePermission "getStackTrace";
          // needed for mock filesystems in tests
          permission java.lang.RuntimePermission "fileSystemProvider";
          // needed by IndexFetcher
          permission java.lang.RuntimePermission "getFileStoreAttributes";
          // analyzers/uima: needed by lucene expressions' JavascriptCompiler
          permission java.lang.RuntimePermission "createClassLoader";
          // needed to test unmap hack on platforms that support it
          permission java.lang.RuntimePermission "accessClassInPackage.sun.misc";
          // needed by jacoco to dump coverage
          permission java.lang.RuntimePermission "shutdownHooks";
          // needed by org.apache.logging.log4j
          permission java.lang.RuntimePermission "getenv.*";
          permission java.lang.RuntimePermission "getClassLoader";
          permission java.lang.RuntimePermission "setContextClassLoader";
          permission java.lang.RuntimePermission "getStackWalkerWithClassReference";
          // needed by bytebuddy
          permission java.lang.RuntimePermission "defineClass";
          // needed by mockito
          permission java.lang.RuntimePermission "accessClassInPackage.sun.reflect";
          permission java.lang.RuntimePermission "reflectionFactoryAccess";
          // needed by SolrResourceLoader
          permission java.lang.RuntimePermission "closeClassLoader";
          // needed by HttpSolrClient
          permission java.lang.RuntimePermission "getFileSystemAttributes";
          // needed by hadoop auth (TODO: there is a cleaner way to handle this)
          permission java.lang.RuntimePermission "loadLibrary.jaas";
          permission java.lang.RuntimePermission "loadLibrary.jaas_unix";
          permission java.lang.RuntimePermission "loadLibrary.jaas_nt";
          // needed by hadoop common RawLocalFileSystem for java nio getOwner
          permission java.lang.RuntimePermission "accessUserInformation";
          // needed by hadoop hdfs
          permission java.lang.RuntimePermission "readFileDescriptor";
          permission java.lang.RuntimePermission "writeFileDescriptor";
          // needed by hadoop http
          permission java.lang.RuntimePermission "getProtectionDomain";
          // needed by aws s3 sdk (Apache HTTP Client)
          permission java.lang.RuntimePermission "accessClassInPackage.jdk.internal.reflect";

          // These two *have* to be spelled out a separate
          permission java.lang.management.ManagementPermission "control";
          permission java.lang.management.ManagementPermission "monitor";

          // needed by DIH - possibly even after DIH is a package
          permission java.sql.SQLPermission "deregisterDriver";

          permission java.util.logging.LoggingPermission "control";

          // needed by solr mbeans feature/tests
          // TODO: can we remove wildcard for class names/members?
          permission javax.management.MBeanPermission "*", "getAttribute";
          permission javax.management.MBeanPermission "*", "getMBeanInfo";
          permission javax.management.MBeanPermission "*", "queryMBeans";
          permission javax.management.MBeanPermission "*", "queryNames";
          permission javax.management.MBeanPermission "*", "registerMBean";
          permission javax.management.MBeanPermission "*", "unregisterMBean";
          permission javax.management.MBeanServerPermission "createMBeanServer";
          permission javax.management.MBeanServerPermission "findMBeanServer";
          permission javax.management.MBeanServerPermission "releaseMBeanServer";
          permission javax.management.MBeanTrustPermission "register";

          // needed by hadoop auth
          permission javax.security.auth.AuthPermission "getSubject";
          permission javax.security.auth.AuthPermission "modifyPrincipals";
          permission javax.security.auth.AuthPermission "doAs";
          permission javax.security.auth.AuthPermission "getLoginConfiguration";
          permission javax.security.auth.AuthPermission "setLoginConfiguration";
          permission javax.security.auth.AuthPermission "modifyPrivateCredentials";
          permission javax.security.auth.AuthPermission "modifyPublicCredentials";
          permission javax.security.auth.PrivateCredentialPermission "org.apache.hadoop.security.Credentials * \"*\"", "read";

          // needed by hadoop security
          permission java.security.SecurityPermission "putProviderProperty.SaslPlainServer";
          permission java.security.SecurityPermission "insertProvider";

          // Needed by JWT integration tests & S3 clients
          permission java.lang.RuntimePermission "setFactory";

          permission javax.xml.bind.JAXBPermission "setDatatypeConverter";

          // SSL related properties for Solr tests
          permission javax.net.ssl.SSLPermission "setDefaultSSLContext";

          // SASL/Kerberos related properties for Solr tests
          permission javax.security.auth.PrivateCredentialPermission "javax.security.auth.kerberos.KerberosTicket * \"*\"", "read";

          // may only be necessary with Java 7?
          permission javax.security.auth.PrivateCredentialPermission "javax.security.auth.kerberos.KeyTab * \"*\"", "read";
          permission javax.security.auth.PrivateCredentialPermission "sun.security.jgss.krb5.Krb5Util$KeysFromKeyTab * \"*\"", "read";

          permission javax.security.auth.kerberos.ServicePermission "*", "initiate";
          permission javax.security.auth.kerberos.ServicePermission "*", "accept";
          permission javax.security.auth.kerberos.DelegationPermission "\"*\" \"krbtgt/EXAMPLE.COM@EXAMPLE.COM\"";

          // java 8 accessibility requires this perm - should not after 8 I believe (rrd4j is the root reason we hit an accessibility code path)
          permission java.awt.AWTPermission "*";

          // used by solr to create sandboxes (e.g. script execution)
          permission java.security.SecurityPermission "createAccessControlContext";

          // for Apache HttpClient useSystemProperties
          permission java.net.NetPermission "getProxySelector";
          permission java.net.NetPermission "requestPasswordAuthentication";
        };


        // additional permissions based on system properties set by /bin/solr

        // NOTE: if the property is not set, the permission entry is ignored.

        grant {
          permission java.io.FilePermission "${hadoop.security.credential.provider.path}", "read,write,delete,readlink";
          permission java.io.FilePermission "${hadoop.security.credential.provider.path}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${solr.jetty.keystore}", "read,readlink";

          permission java.io.FilePermission "${solr.jetty.truststore}", "read,readlink";

          permission java.io.FilePermission "${javax.net.ssl.keyStore}", "read,readlink";

          permission java.io.FilePermission "${javax.net.ssl.trustStore}", "read,readlink";

          permission java.io.FilePermission "${solr.jetty.keystoreParentPath}", "read,readlink";
          permission java.io.FilePermission "${javax.net.ssl.keyStoreParentPath}", "read,readlink";

          permission java.io.FilePermission "${solr.install.dir}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.install.dir}${/}-", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.install.symDir}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.install.symDir}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${jetty.home}", "read,write,delete,readlink";
          permission java.io.FilePermission "${jetty.home}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${solr.solr.home}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.solr.home}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${solr.data.home}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.data.home}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${solr.default.confdir}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.default.confdir}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${solr.log.dir}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.log.dir}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${solr.allowPaths}", "read,write,delete,readlink";
          permission java.io.FilePermission "${solr.allowPaths}${/}-", "read,write,delete,readlink";

          permission java.io.FilePermission "${log4j.configurationFile}", "read,write,delete,readlink";

          // Credentials for S3 Repository
          permission java.io.FilePermission "${aws.sharedCredentialsFile}", "read,readlink";
          permission java.io.FilePermission "${aws.configFile}", "read,readlink";
          permission java.io.FilePermission "${user.home}${/}.aws${/}-", "read,readlink";

          // expanded to a wildcard if set, allows all networking everywhere
          permission java.net.SocketPermission "${solr.internal.network.permission}", "accept,listen,connect,resolve";
        };


        // Grant permissions for Solr to access the TCU API

        grant {
            permission java.net.URLPermission "https://contas.tcu.gov.br/ords/apex_cedoc_vce_p/termos/sinonimo/*", "GET";
            permission java.net.URLPermission "https://contas.tcu.gov.br/ords/apex_cedoc_vce_p/termos/cod/*", "GET";
        };
      name: security/security.policy
    - content: |
        global:
          imageRegistry: "registry.rancher.tcu.gov.br/aplicacoes"
          security:
            allowInsecureImages: true
        fullnameOverride: solr
        image:
        #  registry: registry.rancher.tcu.gov.br
          repository: solr
          #tag: 9.6.0-debian-12-r3
          #tag: 9.6.1-debian-12-r7
          tag: 9.7.0-debian-12-r4
        auth:
          enabled: true
          #adminUsername: admin
          #adminPassword: "teste"
          existingSecret: "solr-usr-secret"
          existingSecretPasswordKey: "solr-password"
        javaMem: "-Xms16g -Xmx100g"
        args: ['-Dsolr.sharedLib','/solr-plugins/']
        extraEnvVars:
          - name: SOLR_OPTS
            value: "-Dsolr.sharedLib=/solr-plugins/ -Dsolr.allowPaths=* -Dsolr.disable.allowUrls=true -Dsolr.cloud.client.stallTime=90000 -Djute.maxbuffer=5000000 -Dsolr.max.booleanClauses=10000 -javaagent:/opt/newrelic/newrelic.jar"
          - name: SOLR_LOG_LEVEL
            value: "WARN" #[ALL,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,OFF,UNSET]
        replicaCount: 5
        nodeSelector:
          solr: "true"
        tolerations:
          - effect: NoSchedule
            key: solr
            value: "true"
            operator: Equal
        podLabels:
          app: solr
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - solr
                topologyKey: "kubernetes.io/hostname" 
        resources:
          limits: {}
          requests:
            cpu: "1"
            memory: 20Gi
        extraVolumes:
          - name: plugin-dir
            persistentVolumeClaim:
              claimName: solr-plugin-folder
          - name: backup-nfs
            nfs:
              path: /nas-solr-bkp/producao/
              server: "nas3.tcu.gov.br"
          - name: newrelic-nfs
            nfs:
              path: /nas-solr-bkp/newrelic/
              server: "nas3.tcu.gov.br"
          - name: solr-policy
            secret:
              secretName: solr-policy
        extraVolumeMounts:
          - mountPath: /bitnami/backups/
            name: backup-nfs
          - mountPath: /solr-plugins
            name: plugin-dir
          - mountPath: /opt/newrelic/
            name: newrelic-nfs
          - name: solr-policy
            mountPath: /opt/bitnami/solr/server/etc/security.policy
            subPath: security.policy

        initContainers:
          - name: init-volume-perm
            image: bitnami/os-shell
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 0
            command:
            - sh
            - "-c"
            - chown -R 1001:1001 /bitnami/backups/ & chown -R 1001:1001 /opt/newrelic/
            volumeMounts:
            - name: backup-nfs
              mountPath: /bitnami/backups/
            - name: newrelic-nfs
              mountPath: /opt/newrelic/

        ingress:
          enabled: true
          hostname: solr.producao.rancher.tcu.gov.br
          path: /
          annotations: {}
          tls: false
          selfSigned: false
        persistence:
          enabled: true
          reclaimPolicy: Retain
          accessModes:
            - ReadWriteOnce
          size: 1000Gi
          mountPath: /bitnami/solr
          storageClass: sc-solr

        metrics:
          enabled: true
          resources:
            limits:
              cpu: 450m
              ephemeral-storage: 1Gi
              memory: 2Gi
            requests:
              cpu: 100m
              ephemeral-storage: 50Mi
              memory: 512Mi
          serviceMonitor:
            enabled: true
            namespace: solr
            interval: 15s
            scrapeTimeout: 15s
          nodeSelector:
            solr: "true"
          tolerations:
          - effect: NoSchedule
            key: solr
            value: "true"
            operator: Equal

        zookeeper:
          jvmFlags: "-Djute.maxbuffer=5000000"
          image:
            repository: zookeeper
          enabled: true
          service:
            type: NodePort
            nodePorts:
              client: 32181
          resources:
            limits: {}
            requests:
              cpu: 250m
              memory: 1Gi
          persistence:
            enabled: true
            reclaimPolicy: Retain
            storageClass: sc-solr 
            accessModes:
              - ReadWriteOnce
            size: 100Gi
          nodeSelector:
            solr: "true"
          tolerations:
            - effect: NoSchedule
              key: solr
              value: "true"
              operator: Equal
          podLabels:
            app: zookeeper
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - zookeeper
                  topologyKey: "kubernetes.io/hostname" 
          networkPolicy:
            enabled: false

        networkPolicy:
          enabled: false
      name: values.yaml
  targetRestrictions:
    - clusterName: c-5wl22
  targets:
    - clusterName: c-5wl22
      ignore: {}
status:
  conditions:
    - lastUpdateTime: '2025-05-24T00:02:46Z'
      status: 'True'
      type: Ready
    - lastUpdateTime: '2024-12-26T23:07:47Z'
      status: 'True'
      type: Processed
  display:
    readyClusters: 1/1
  maxNew: 50
  maxUnavailable: 1
  maxUnavailablePartitions: 0
  observedGeneration: 46
  partitions:
    - count: 1
      maxUnavailable: 1
      name: All
      summary:
        desiredReady: 1
        ready: 1
  resourceKey:
    - apiVersion: policy/v1
      kind: PodDisruptionBudget
      name: solr
      namespace: solr
    - apiVersion: policy/v1
      kind: PodDisruptionBudget
      name: solr-zookeeper
      namespace: solr
    - apiVersion: v1
      kind: ServiceAccount
      name: solr
      namespace: solr
    - apiVersion: v1
      kind: ServiceAccount
      name: solr-zookeeper
      namespace: solr
    - apiVersion: v1
      kind: ConfigMap
      name: solr-scripts
      namespace: solr
    - apiVersion: v1
      kind: ConfigMap
      name: solr-zookeeper-scripts
      namespace: solr
    - apiVersion: v1
      kind: Service
      name: solr
      namespace: solr
    - apiVersion: v1
      kind: Service
      name: solr-exporter
      namespace: solr
    - apiVersion: v1
      kind: Service
      name: solr-headless
      namespace: solr
    - apiVersion: v1
      kind: Service
      name: solr-zookeeper
      namespace: solr
    - apiVersion: v1
      kind: Service
      name: solr-zookeeper-headless
      namespace: solr
    - apiVersion: apps/v1
      kind: Deployment
      name: solr-exporter
      namespace: solr
    - apiVersion: apps/v1
      kind: StatefulSet
      name: solr
      namespace: solr
    - apiVersion: apps/v1
      kind: StatefulSet
      name: solr-zookeeper
      namespace: solr
    - apiVersion: networking.k8s.io/v1
      kind: Ingress
      name: solr
      namespace: solr
    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      name: solr
      namespace: solr
    - apiVersion: v1
      kind: Secret
      name: solr-policy
      namespace: solr
  resourcesSha256Sum: 6c95cdecb2c73fe84a3ea7296b8f8d38a8b79bf611c05b30a1a5db7610d5cbd8
  summary:
    desiredReady: 1
    ready: 1
  unavailable: 0
  unavailablePartitions: 0
